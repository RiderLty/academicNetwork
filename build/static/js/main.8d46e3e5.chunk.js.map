{"version":3,"sources":["reportWebVitals.js","logo.svg","CircularGraph.js","CooperationRelation.js","MainPageModes/Year.js","DynamicDiscovery.js","FloatingWindowModes/PaperInfo.js","MainPageModes/Conference.js","MainPageModes/Affiliation.js","MainPageModes/PubsCited.js","MainPageView.js","Sank2Modes/ColorMap.js","Sank2Modes/FieldDistribution.js","FloatingWindowModes/AuthorInfo.js","FloatingWindowModes/FloatingWindow.js","echartTheme.js","FieldDistribution.js","Sank.js","DataPreview.js","KeywordsRecommenderModes/MainKeywordGraph.js","Sank2Modes/ContourGrapg.js","Sank2Modes/SankYearTable.js","Sank2Modes/Sankver2.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","PrettoSlider","withStyles","root","color","height","thumb","width","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","crerateGraph","paperList","nodes","edges","forEach","paper","index","push","DOI2Paper","currentPaper","currentIndex","graphTest","InternalReferences","Array","from","Set","split","DOI","refEdPaper","undefined","needDisConnect","source","graph","ans","dfs","trace","start","JSON","parse","stringify","indexOf","tmp","i","length","add","startNode","result","cir","getCirs","cirArray","target","has","Title","datamap","CircularGraph","props","UID","useRef","uuid","v1","visualConfig","maxSymbolSize","seriesNum","myChart","initOption","data","links","sizeMap","maxRef","linkedNodes","edge","value","current","Math","round","categories","steep","name","option","title","text","legend","map","a","tooltip","position","pos","params","dom","rect","size","obj","letf","viewSize","formatter","dataType","tooltipLength","max","AuthorNames","abstract","Abstract","substr","Year","animationDurationUpdate","animationEasingUpdate","series","focusNodeAdjacency","type","check_ref","layout","circular","rotateLabel","roam","label","show","itemStyle","normal","borderType","borderColor","borderWidth","opacity","lineStyle","curveness","emphasis","edgeSymbol","edgeSymbolSize","setOption","on","args","PubSub","publishSync","args_data_index_ref","fromOther","toOther","symbolSize","doi","nodename","pushHead","pushTai","drawSmallView","useEffect","echarts","document","getElementById","paperData","console","log","smallChart","repulsion","force","layoutAnimation","initLayout","clear","zoom","useState","check","setcheck","siderValue_1","setsiderValue_1","siderValue_2","setsiderValue_2","check_lab","setcheck_lab","style","display","id","float","Paper","elevation","Grid","container","spacing","item","xs","Chip","icon","variant","Switch","checked","onChange","inputProps","min","event","newValue","CooperationRelation","loading","args_data_name_ref","drawSmall","chartDom","gravity","createChartDom","nodeSize","maxNode","category","ceil","connectedNum","name_s","name_t","papers_s","autherPapers","papers_t","unicon","filter","v","cooperation","paperIndex","paperMap","nameDulp","auname","updateChartOption","Object","keys","edgeSet","currentName","b","_a","OverviewGraph","trigger","grid","right","bottom","containLabel","xAxis","boundaryGap","yAxis","dataZoom","realtime","end","xAxisIndex","axis","minYear","Number","yearRange","batch","reDraw","maxYear","yearCount","year","hasOwnProperty","DynamicDiscovery","usingNode","tmpNode","initNode","graphData","createAutherNode","autherIndex","papers","authers","createPaperNode","createEdge","contains","addNode","connectedGraph","existedID","saveid","currentNode","paperAuthers","tid","maxSize","miniSize","k","selectIndex","hlIDs","persistenceTmp","sid","animation","edgeLength","textStyle","autherNodeIndex","flag","autherName","onAuther","newNodeIndex","onPaper","graphTmpData","getZr","autherTmp","first","useStyles","makeStyles","theme","margin","maxHeight","overflow","scrollpart","content","padding","Box","headimg","PaperInfo","setPaperData","cardStyles","fadeShadowStyles","useWideCardMediaStyles","useFadedShadowStyles","textCardContentStyles","useN01TextInfoContentStyles","Card","className","cx","onClick","e","stopPropagation","direction","justify","alignItems","IconButton","publish","_index","window","location","href","CardMedia","image","CardContent","classes","heading","body","px","pb","row","avatar","Avatar","slice","clickable","Conference","orient","radius","shadowBlur","shadowOffsetX","shadowColor","confs","conf","key","Affiliation","numberRange","setNumberRange","numberRangeRef","handelGrapgChange","selected","AffilS","AuthorAffiliation","Affil","filterValue","React","setfilterValue","floor","aria-labelledby","valueLabelDisplay","PubsCited","MainPageView","filteedPaperData","setFiltedPaperData","refPaperData","yearFilter","pubsCitedFilter","applyFilter","filtedDataTmp","yearApply","pubsCitedApply","subscribe","msg","ColorMap","str","FieldDistribution","chart","translateData","yearData","themePie","valuePolar","angleSUM","pieRange","theme_author","ConeDistribution","thetaStart","thetaEnd","r_t_map","element","theta","random","count","r","r_theta","author","get_r_theta","nodecolor","hlname","pie","polar","dataResult","sankData","sankdata","authorPapers","author_theme_count","author_name","theme_name","paperInfo","makeYearData","values","interval","scale","makeSeries","coordinateSystem","node","componentSubType","angleAxis","startAngle","radiusAxis","off","hilightAuthor","AuthorInfo","authorData","setauthorData","backdrop","zIndex","drawer","FloatingWindow","open","setOpen","checkedAnmie","setCheck","animeDirection","setAnimeDirection","stack","cardDataMap","setCardDataMap","updateCardData","cardData","inout","setTimeout","handelPush","pushData","getAuthorInfo","authorName","paperEntity","paperEntityWithIndex","getPaperInfo","pop","Backdrop","Slide","in","echartTheme","themeCount","colorMap","initChart","searchIcon","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","breakpoints","up","Sank","theme_Index_arrary","theme_color_map","set_theme_color_map","setValue","valueRef","cartesianProduct","list","layer","Map","rec","years","currentYear","nextYear","rec_i","rec_j","yearstart","yearend","linkTmp","authorHistory","x","link","nodeSet","theme_year","substring","sortedThemearrary","sort","theme_color_map_temp","themeIndex","depth","drawPie","usingGraphData","getComHilightGraph","comName","currentLinks","hilightNodes","sourceFlag","targetFlag","ref_checkStause","currentNodes","getAuthorHilightGraph","authorLinks","rec_first","calAuthorLinks","stringfyLink","visualArgs","com","handleArgsChange","hilightCom","disHilightCom","smallViewSankData","setsmallViewSankData","smallViewYear","setsmallViewYear","triggerOn","paprms","layoutIterations","chartLinks","fromOtherLable","toOtherLable","checkStause","changCheckStause","handelCheckChnage","searchValue","setsearchValue","ref_searchValue","changeSearchValue","doSearch","TextField","onKeyDown","keyCode","Button","FormControlLabel","control","flexWrap","DataPreview","showAttributes","setShowAttributes","handleDelete","attr","handelAdd","onDelete","deleteIcon","TableContainer","component","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","TableBody","MainKeywordGraph","subval","pieNodes","bar_x","bar_y","category_num","kw","fontSize","y","drawpie","axisPointer","kwCount","AuthorKeywords","rawKw","replace","toLowerCase","miniCount","marginRight","ContourGrapg","yearIndex","outlinedata","data_type","paper_outline","author_outline","mail_outline","yearOutlineGraph","comm","miniConnect","edgeConnectNum","overNodes_Set","overLinks","overComm","nodeName","author_names","zise","fill","stroke","getYearGraph","innerHTML","_graph","G6","Graph","modes","default","preventOverlap","linkDistance","nodeStrength","edgeStrength","assign","render","hulls","authorNames","createHull","members","updateData","year_control","dataSetSelectValue","DataTable","head","SankYearTable","setdata","dataTmp","authorRec","formControl","minWidth","Sankver2","rawData","entry","year_filtered","view_data","smallViewData","setsmallViewData","cal_year","source_year","target_year","verifySubset","_set","_subset","styleRef","showlabel","hilightLink","normalLink","styleManager","cal_view","connectedNodes","allNormalFlag","attributes","link_hl","link_normal","getLinkType","colorAttr","node_lb","node_hl","getNodeType","switchToData_2","data2","setyearValue","yearValueRef","setsmallChartYear","changeHl","datasetRef","target_theme","source_theme","hover","focus","smallChartYear","yearValue","smallViewHlname","setsmallViewHlname","person_name","err","alert","setdataSetSelectValue","FormControl","InputLabel","Select","labelId","data1","data3","MenuItem","flexDirection","toolbar","paddingRight","toolbarIcon","mixins","appBar","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","appBarSpacer","paddingTop","paddingBottom","fixedHeight","CircularGraphModeStyle","search","shape","fade","palette","common","white","table","App","clsx","setSankData","raw_paperdata","Promise","resolve","reject","fetch","resp","json","BigDataWarming","mode","setShow","cancelButton","warming","Dialog","onClose","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","filted","arg","filtered","object","keywordFilter","paperFilter","CssBaseline","AppBar","Toolbar","src","Typography","noWrap","InputBase","placeholder","input","Drawer","Divider","List","ListItem","button","ListItemIcon","ListItemText","primary","ListSubheader","inset","blob","Blob","saveAs","click","Container","maxWidth","path","exact","match","file","files","reader","FileReader","readAsText","onload","evt","fileString","uploadpaper","accept","ReactDOM","StrictMode"],"mappings":"w4o6JAYeA,G,OCZA,IDAS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,qNEkBRQ,EAAeC,YAAW,CAC5BC,KAAM,CACFC,MAAO,UACPC,OAAQ,GAEZC,MAAO,CACHD,OAAQ,GACRE,MAAO,GACPC,gBAAiB,OACjBC,OAAQ,yBACRC,WAAY,EACZC,YAAa,GACb,6BAA8B,CAC1BC,UAAW,YAGnBC,OAAQ,GACRC,WAAY,CACRC,KAAM,oBAEVC,MAAO,CACHX,OAAQ,EACRY,aAAc,GAElBC,KAAM,CACFb,OAAQ,EACRY,aAAc,IA1BDf,CA4BlBiB,KACGC,EAAe,SAACC,GAKlB,IAAIC,EAAQ,GACRC,EAAQ,GACZF,EAAUG,SAAQ,SAACC,EAAOC,GACtBJ,EAAMK,KAAKD,MAGf,IAAME,EAAY,GAElBP,EAAUG,SAAQ,SAACK,EAAcC,GAC7BF,EAAUC,EAAY,KAAW,CAACA,EAAcC,MAKpD,IAAMC,EAAY,GAKlBV,EAAUG,SAAQ,SAACK,EAAcC,GAE7B,IAAIE,EAAqBC,MAAMC,KAAK,IAAIC,IAAIN,EAAaG,mBAAmBI,MAAM,OAClFL,EAAUD,GAAgB,GAC1BE,EAAmBR,SAAQ,SAAAa,GACvB,IAAMC,EAAaV,EAAUS,QACVE,IAAfD,GAEAP,EAAUD,GAAcH,KAAKW,EAAW,UAOpD,IA4BME,EAAiB,IAAIL,IAS3B,IAAK,IAAIM,KArCO,SAACC,GACb,IAAIC,EAAM,IAAIR,IACRS,EAAM,SAANA,EAAOF,EAAOG,EAAOC,GAEvB,IAA8B,KAD9BD,EAAQE,KAAKC,MAAMD,KAAKE,UAAUJ,KACxBK,QAAQJ,GAAlB,CASAD,EAAMlB,KAAKmB,GAXsB,oBAYnBJ,EAAMI,IAZa,IAYjC,2BAA4B,CACxBF,EAAIF,EAAOG,EADa,UAZK,mCAEjC,CAGI,IAFA,IACIM,EAAM,GACDC,EAFKP,EAAMK,QAAQJ,GAERM,EAAIP,EAAMQ,OAAQD,IAClCD,EAAIxB,KAAKkB,EAAMO,IAEnBT,EAAIW,IAAIP,KAAKE,UAAUE,MAQ/B,IAAK,IAAII,KAAab,EAClBE,EAAIF,EAAO,GAAIa,GAEnB,IArBuB,EAqBjBC,EAAS,GArBQ,cAsBPb,GAtBO,IAsBvB,2BAAqB,CAAC,IAAbc,EAAY,QACjBD,EAAO7B,KAAKoB,KAAKC,MAAMS,KAvBJ,8BAyBvB,OAAOD,EAQXE,CAAQ3B,GAAWP,SAAQ,SAAAmC,GACvBnB,EAAec,IAAIK,EAAS,GAAK,IAAMA,EAAS,OAGjC5B,EAAW,CAAC,IAAD,gBACPA,EAAUU,IADH,IAC1B,2BAAsC,CAAC,IAA9BmB,EAA6B,QAC7BpB,EAAeqB,IAAIpB,EAAS,IAAMmB,IACnCrC,EAAMI,KAAK,CAACN,EAAUoB,GAAQqB,MAAOzC,EAAUuC,GAAQE,MAAOzC,EAAUoB,GAASpB,EAAUuC,MAHzE,+BAU9B,MAAO,CACHtC,MAAOA,EACPC,MAAOA,EACPwC,QAAS1C,IAMF,SAAS2C,EAAcC,GAClC,IAAMC,EAAMC,iBAAOC,IAAKC,MAElBC,EAAeH,iBAAO,CACxBI,cAAe,IACfC,UAAW,IAGXC,EAAUN,iBAAO,MAMfO,EAAa,SAACC,GAEhB,IAAIrD,EAAQ,GACRsD,EAAQ,GACRC,EAAU,GACVC,EAAS,EAEPC,EAAc,IAAI5C,IAExBwC,EAAKpD,MAAMC,SAAQ,SAAAwD,GAQfJ,EAAMjD,KACF,CACIc,OAAQuC,EAAK,GACbpB,OAAQoB,EAAK,GACbC,MAAO,IAIfF,EAAYzB,IAAI0B,EAAK,IACrBD,EAAYzB,IAAI0B,EAAK,SACGzC,GAApBsC,EAAQG,EAAK,IACbH,EAAQG,EAAK,IAAM,GAEnBH,EAAQG,EAAK,KAAO,EAChBH,EAAQG,EAAK,IAAMF,IACnBA,EAASD,EAAQG,EAAK,SAMlCL,EAAKZ,QAAQvC,SAAQ,SAACC,EAAOC,GACrBqD,EAAYlB,IAAIpC,EAAMqC,QACtBxC,EAAMK,KACF,CAEI,KAAQF,EAAMqC,MACd,MAASrC,EACT,MAASC,EACT,WAAc4C,EAAaY,QAAQX,eAAiBM,EAAQpD,EAAMqC,QAAU,IAAe,GAATgB,GAAyB,GAATA,EAClG,SAAYK,KAAKC,OAAQP,EAAQpD,EAAMqC,QAAU,GAAKQ,EAAaY,QAAQV,UAAaM,QAkBxG,IARA,IAAIpC,EAAQ,CACR,MAASpB,EACT,MAASsD,GAITS,EAAa,GACXC,EAAQR,EAASR,EAAaY,QAAQV,UACnCpB,EAAI,EAAGA,EAAIkB,EAAaY,QAAQV,UAAWpB,IAChDiC,EAAWjC,GAAK,CACZmC,KAAMJ,KAAKC,MAAMhC,EAAIkC,GAAS,IAAMH,KAAKC,OAAOhC,EAAI,GAAKkC,IAIjE,IAAME,EAAS,CACXC,MAAO,CACHC,KAAM,4BAEVC,OAAQ,CAAC,CACLhB,KAAMU,EAAWO,KAAI,SAAUC,GAC3B,OAAOA,EAAEN,UAGjBO,QAAS,CACLC,SAAU,SAAUC,EAAKC,EAAQC,EAAKC,EAAMC,GAGxC,IAAIC,EAAM,CAAEC,KAAM,GAGlB,OADAD,EAAI,CAAC,MAAO,YAAYL,EAAI,GAAKI,EAAKG,SAAS,GAAK,KAAO,EACpDF,GAGXG,UAAW,SAAUP,GACjB,GAAwB,SAApBA,EAAOQ,SAAqB,CAK5B,IAHA,IAAIhF,EAAQwE,EAAOtB,KAAKlD,MACpBiF,EAAgBvB,KAAKwB,IAAIlF,EAAMmF,YAAYvD,OAAQ5B,EAAMqC,MAAMT,QAC/DwD,EAAW,GACNzD,EAAI,EAAGA,EAAI3B,EAAMqF,SAASzD,OAASqD,EAAetD,IAEvD,GADAyD,GAAapF,EAAMqF,SAASC,OAAO3D,EAAIsD,EAAeA,GAAiB,QACnEtD,EAAI,EAAG,CACPyD,GAAY,MACZ,MAGR,MAAO,kBAAUpF,EAAMqC,MAAhB,uBACOrC,EAAMuF,KADb,uBAEOvF,EAAMmF,YAFb,kCAGQ/B,EAAQoB,EAAOtB,KAAKlD,MAAMqC,QAAU,GAH5C,uBAIO+C,EAEX,GAAwB,SAApBZ,EAAOQ,SACd,OAAOR,EAAOtB,KAAKlC,OAAS,MAAQwD,EAAOtB,KAAKf,SAI5DqD,wBAAyB,KACzBC,sBAAuB,eACvBC,OAAQ,CACJ,CACIC,oBAAoB,EACpB7B,KAAM,2BACN8B,KAAOC,EAAUpC,QAAoB,SAAV,QAE3BqC,OAAQ,WAERC,SAAU,CACNC,aAAa,GAEjB9C,KAAMjC,EAAMpB,MACZsD,MAAOlC,EAAMkC,MACbS,WAAYA,EACZqC,MAAM,EACNC,MAAO,CAEHvH,MAAO,UACPwH,MAAM,GAEVC,UAAW,CACPC,OAAQ,CACJC,WAAY,QACZC,YAAa,UACbC,YAAa,EACbC,QAAS,IAIjBC,UAAW,CACPL,OAAQ,CACJ1H,MAAO,SACPG,MAAO,EACP8G,KAAM,QACNe,UAAW,IAEfC,SAAU,IAIdC,WAAY,CAAC,OAAQ,SACrBC,eAAgB,KAK5B9D,EAAQS,QAAQsD,UAAUhD,GAE1Bf,EAAQS,QAAQuD,GAAG,QAAS,CAAEhC,SAAU,SAAU,SAACiC,GAC/CC,IAAOC,YAAY,iBAAkBF,EAAK/D,KAAKjD,UAInD+C,EAAQS,QAAQuD,GAAG,YAAa,CAAEhC,SAAU,SAAU,SAACiC,GAEnD,GAAIG,EAAoB3D,UAAYwD,EAAK/D,KAAKjD,MAA9C,CAGImH,EAAoB3D,QAAUwD,EAAK/D,KAAKjD,MAG5C,IAR4D,EAQtDG,EAAe6G,EAAK/D,KAAKlD,MACzBqH,EAAY,GACZC,EAAU,GACVzH,EAAQ,CACV,CACIiE,KAAM,QACNN,MAAO,IACP+D,WAAY,EACZnB,UAAW,CAEPzH,MAAO,WAEXuH,MAAO,CACHC,MAAM,IAGd,CACIrC,KAAM,OACNN,MAAO,IACP+D,WAAY,EACZnB,UAAW,CAEPzH,MAAO,WAEXuH,MAAO,CACHC,MAAM,IAGd,CACIrC,KAAM1D,EAAaiC,MACnB+D,UAAW,CACPzH,MAAO,WAGX4I,WAAY,KAGdpE,EAAQ,GA+CV5C,EAAqBH,EAAaG,mBAAmBI,MAAM,KA5FH,cA6F5CJ,GA7F4C,IA6F5D,2BAAoC,CAAC,IAA5BiH,EAA2B,QAChCH,EAAUnH,KAAKsH,IA9FyC,8BAgG5DtE,EAAKpD,MAAMC,SAAQ,SAAAwD,GACXA,EAAK,KAAOnD,EAAaiC,OACkB,IAAvCgF,EAAU5F,QAAQ8B,EAAK,GAAL,MAClB8D,EAAUnH,KAAKqD,EAAK,GAAGlB,OAGpBkB,EAAK,KAAOnD,EAAaiC,OAChCiF,EAAQpH,KAAKqD,EAAK,GAAGlB,UAM7B7B,MAAMC,KAAK,IAAIC,IAAI2G,IAAYtH,SAAQ,SAAA0H,IAxCtB,SAACA,GACd5H,EAAMK,KAAK,CACP4D,KAAM2D,EACNrB,UAAW,CACPzH,MAAO,WAEX4I,WAAY,KAEhBpE,EAAMjD,KAAK,CACPc,OAAQ,QACRmB,OAAQsF,EACRf,UAAW,CACP/H,MAAO,UACPG,MAAO,KAGfqE,EAAMjD,KAAK,CACPc,OAAQyG,EACRtF,OAAQ/B,EAAaiC,QAuBzBqF,CAASD,MAEbjH,MAAMC,KAAK,IAAIC,IAAI4G,IAAUvH,SAAQ,SAAA0H,IAjErB,SAACA,GACb5H,EAAMK,KAAK,CACP4D,KAAM2D,EACNrB,UAAW,CACPzH,MAAO,WAEX4I,WAAY,KAEhBpE,EAAMjD,KAAK,CACPc,OAAQyG,EACRtF,OAAQ,OACRuE,UAAW,CACP/H,MAAO,UACPG,MAAO,KAGfqE,EAAMjD,KAAK,CACPc,OAAQZ,EAAaiC,MACrBF,OAAQsF,IAgDZE,CAAQF,MAGZG,EAAc/H,EAAOsD,QAWvBiE,EAAsB1E,iBAAO,IAEvBA,iBAAO,MAWnBmF,qBAzTkB,WACd7E,EAAQS,QAAUqE,IAAaC,SAASC,eAAevF,EAAIgB,SAAU,aAwTpD,IACrBoE,qBAVyB,WACG,OAApBrF,EAAMyF,UACNC,QAAQC,IAAI,SAEZlF,EAAWtD,EAAa6C,EAAMyF,cAMV,CAACzF,EAAMyF,YAGnC,IAAMG,EAAa1F,iBAAO,MACpBkF,EAAgB,SAAC/H,EAAOsD,GACC,OAAvBiF,EAAW3E,UACX2E,EAAW3E,QAAUqE,IAAaC,SAASC,eAAe,qBAAsB,WAChFI,EAAW3E,QAAQsD,UACf,CAEI1C,QAAS,GACTqB,OAAQ,CACJ,CACI2C,UAAW,CAAC,GAAI,KAChBzC,KAAM,QACNE,OAAQ,QACR5C,KAAM,GACNC,MAAO,GACP8C,MAAM,EACNC,MAAO,CACH5B,SAAU,QACV6B,MAAM,EACNxH,MAAO,UACP8H,QAAS,IAEb6B,MAAO,CACHC,iBAAiB,EACjBC,WAAY,YAGhB9B,UAAW,CACPL,OAAQ,CACJvH,MAAO,EACPH,MAAO,WAGfmI,eAAgB,GAChBD,WAAY,CAAC,OAAQ,cAOzCuB,EAAW3E,QAAQgF,QACnBL,EAAW3E,QAAQsD,UACf,CAEI1C,QAAS,GACTqB,OAAQ,CACJ,CACIgD,KAAK,EACLL,UAAW,CAAC,GAAI,KAChBzC,KAAM,QACNE,OAAQ,QACR5C,KAAM,GACNC,MAAO,GACP8C,MAAM,EACNC,MAAO,CACH5B,SAAU,QACV6B,MAAM,EACNxH,MAAO,UACP8H,QAAS,IAEb6B,MAAO,CACHC,iBAAiB,EACjBC,WAAY,YAGhB9B,UAAW,CACPL,OAAQ,CACJvH,MAAO,EACPH,MAAO,WAGfmI,eAAgB,GAChBD,WAAY,CAAC,OAAQ,aAMrCuB,EAAW3E,QAAQsD,UACf,CACIrB,OAAQ,CACJ,CACIxC,KAAMrD,EACNsD,MAAOA,OAQrB0C,EAAYnD,kBAAO,GAnagB,EAoafiG,oBAAS,GApaM,mBAoalCC,EApakC,KAoa3BC,EApa2B,OAqcDF,mBAAS,IArcR,mBAqclCG,EArckC,KAqcpBC,EArcoB,OA4cDJ,mBAAS,IA5cR,mBA4clCK,EA5ckC,KA4cpBC,EA5coB,OA8cPN,oBAAS,GA9cF,mBA8clCO,EA9ckC,KA8cvBC,EA9cuB,KAiezC,OACI,sBAAKC,MAAO,CAAEC,QAAS,UAAvB,UACI,qBAAKD,MAAO,CAAEC,QAAS,UAAvB,SACI,qBAAKC,GAAI7G,EAAIgB,QAAS2F,MAAO,CACzBtK,MAAO,IACPF,OAAQ,IACR2K,MAAO,YAIf,eAACC,EAAA,EAAD,CAAOJ,MACH,CACItK,MAAO,IACPF,OAAQ,IACR2K,MAAO,SAEbE,UAAW,EANb,UAOI,qBAAKL,MAAO,CAAEtK,MAAO,IAAKF,OAAQ,KAAO0K,GAAG,sBAE5C,eAACI,EAAA,EAAD,CACIC,WAAS,EACTC,QAAS,EAFb,UASI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,sBAAKV,MAAO,CAAEtK,MAAO,IAAKI,WAAY,GAAImK,QAAS,eAAnD,UACI,cAACU,EAAA,EAAD,CACIC,KAAM,cAAC,IAAD,IACNZ,MAAO,CAAEtK,MAAO,KAChBoH,MAAO0C,EAAQ,SAAW,WAC1BjK,MAAOiK,EAAQ,YAAc,UAC7BqB,QAAQ,aAEZ,qBAAKb,MAAO,CAAElK,WAAY,GAA1B,SACI,cAACgL,EAAA,EAAD,CACIC,QAASvB,EACTwB,SApGZ,WAUhBvE,EAAUpC,SAAWoC,EAAUpC,QAC/BoF,GAAS,SAAAD,GAAK,OAAKA,KACnB3F,EAAWtD,EAAa6C,EAAMyF,aAyFFnE,KAAK,WACLuG,WAAY,CAAE,aAAc,+BAQ5C,cAACX,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,sBAAKV,MAAO,CAAEtK,MAAO,IAAKI,WAAY,GAAImK,QAAS,eAAnD,UACI,cAACU,EAAA,EAAD,CACIC,KAAMd,EAAY,cAAC,IAAD,IAAgB,cAAC,IAAD,IAClCE,MAAO,CAAEtK,MAAO,KAChBoH,MAAOgD,EAAY,OAAS,OAC5BvK,MAAOuK,EAAY,UAAY,YAC/Be,QAAQ,aAEZ,qBAAKb,MAAO,CAAElK,WAAY,GAA1B,SACI,cAACgL,EAAA,EAAD,CACIC,QAASjB,EACTkB,SAhFR,WACpBpH,EAAQS,QAAQsD,UACZ,CACIrB,OAAQ,CACJ,CAEIQ,MAAO,CACHvH,MAAO,UACPwH,MAAO+C,OAM3BC,GAAa,SAAAD,GAAS,OAAKA,MAmECpF,KAAK,WACLuG,WAAY,CAAE,aAAc,+BAQ5C,eAACX,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIF,QAAS,EAA5B,UACI,cAACG,EAAA,EAAD,CACIC,KAAM,cAAC,IAAD,IACNZ,MAAO,CAAEtK,MAAO,IAAKG,WAAY,GAAIC,WAAY,IACjDgH,MAAO,gBAAQ4C,EAAe,GAC9BnK,MAAO,UACPsL,QAAQ,aAEZ,cAACzL,EAAD,CAAc4K,MAAO,CAAEtK,MAAO,IAAKI,WAAY,GAAIP,MAAO,WAAa2L,IAAK,EAAGpF,IAAK,GAAI1B,MAAOsF,EAAcsB,SA7HpG,SAACG,EAAOC,GACjCzB,EAAgByB,GAChBxH,EAAQS,QAAQsD,UACZ,CACIrB,OAAQ,CACJ,CAEIgB,UAAW,CACPL,OAAQ,CACJM,UAAW6D,EAAW,eAsHlC,eAACd,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIF,QAAS,EAA5B,UACI,cAACG,EAAA,EAAD,CACIC,KAAM,cAAC,IAAD,IACNZ,MAAO,CAAEtK,MAAO,IAAKG,WAAY,GAAIC,WAAY,IACjDgH,MAAO,gBAAuB,EAAf8C,EACfrK,MAAO,UACPsL,QAAQ,aAEZ,cAACzL,EAAD,CAAc4K,MAAO,CAAEtK,MAAO,IAAKI,WAAY,GAAIP,MAAO,WAAa2L,IAAK,EAAGpF,IAAK,IAAK1B,MAAOwF,EAAcoB,SApHrG,SAACG,EAAOC,GACjCvB,EAAgBuB,GAChB3H,EAAaY,QAAQX,cAA2B,EAAX0H,EACrCvH,EAAWtD,EAAa6C,EAAMyF,2B,sBCtkBhCzJ,EAAeC,YAAW,CAC5BC,KAAM,CACFC,MAAO,UACPC,OAAQ,GAEZC,MAAO,CACHD,OAAQ,GACRE,MAAO,GACPC,gBAAiB,OACjBC,OAAQ,yBACRC,WAAY,EACZC,YAAa,GACb,6BAA8B,CAC1BC,UAAW,YAGnBC,OAAQ,GACRC,WAAY,CACRC,KAAM,oBAEVC,MAAO,CACHX,OAAQ,EACRY,aAAc,GAElBC,KAAM,CACFb,OAAQ,EACRY,aAAc,IA1BDf,CA4BlBiB,KAgDY,SAAS+K,EAAoBjI,GACxC,IAAMC,EAAMC,iBAAOC,IAAKC,MADuB,GAEjCF,iBAAO,MACSiG,oBAAS,IAHQ,mBAGxC+B,EAHwC,KAIzC1H,GAJyC,KAI/BN,iBAAO,OAEjBG,EAGS,EAoRT8H,EAAqBjI,iBAAO,IAU5B0F,EAAa1F,iBAAO,MACpBkI,EAAY,SAAC1H,GACY,OAAvBkF,EAAW3E,UACX2E,EAAW3E,QAAUqE,IAAaC,SAASC,eAAe,uBAAwB,WAClFI,EAAW3E,QAAQsD,UAAU,CACzB/C,MAAO,CACHC,KAAM,IAEVI,QAAS,GACTmB,wBAAyB,KACzBC,sBAAuB,eACvBC,OAAQ,CACJ,CACIgD,KAAK,EACL/C,oBAAoB,EACpB7B,KAAM,GACN8B,KAAM,QACNE,OAAQ,QACR5C,KAAM,GACNC,MAAO,GACP8C,MAAM,EACNC,MAAO,CACH5B,SAAU,QACVS,UAAW,OAEfuD,MAAO,CACHC,iBAAiB,GAErBnC,UAAW,CACPC,OAAQ,CACJH,MAAO,CACHC,MAAM,EACNxH,MAAO,UACP8H,QAAS,IAEbA,QAAS,GAGbG,SAAU,CACNV,MAAO,CACHC,MAAM,EACNxH,MAAO,UACP8H,QAAS,UAQrC2B,EAAW3E,QAAQsD,UAAU,CACzBrB,OAAQ,CACJ,CACIxC,KAAMA,EAAKrD,MACXsD,MAAOD,EAAKC,WAU5B0E,qBAAU,WAGN,OA9VmB,WACnB,IAAIgD,EAAW9C,SAASC,eAAevF,EAAIgB,SAC3CT,EAAQS,QAAUqE,IAAa+C,EAAU,WAuDzC7H,EAAQS,QAAQsD,UAtDD,CACX/C,MAAO,CACHC,KAAM,wCAEVI,QAAS,GACTH,OAAQ,GACRsB,wBAAyB,KACzBC,sBAAuB,eAEvBC,OAAQ,CACJ,CAEIC,oBAAoB,EACpB7B,KAAM,2BACN8B,KAAM,QACNE,OAAQ,QACRwC,MAAO,CACHD,UAAW,IACXyC,QAAS,GACTvC,iBAAiB,GAGrBrF,KAAM,GACNC,MAAO,GACPS,WAAY,GAEZqC,MAAM,EACNC,MAAO,CACHvH,MAAO,UACPwH,MAAM,GAEVC,UAAW,CACPC,OAAQ,CAEJI,QAAS,GAGbG,SAAU,IAIdF,UAAW,CACPL,OAAQ,CACJ1H,MAAO,SACPG,MAAO,EACP8G,KAAM,QACNe,UAAW,IAEfC,SAAU,QA0S1BmE,GACO,WAjSP/H,EAAQS,QAAQsD,UACZ,CACI7C,OAAQ,GACRwB,OAAQ,CACJ,CACIxC,KAAM,GACNC,MAAO,GACPS,WAAY,UA6R7B,IAEHiE,qBAhFyB,WACG,OAApBrF,EAAMyF,UACNC,QAAQC,IAAI,SA3MM,SAACjF,GACvB,IAAIC,EAAQ,GACRtD,EAAQ,GACRmL,EAAW,GACXC,EAAU,EACd/H,EAAKpD,MAAMC,SAAQ,SAAAwD,GACfJ,EAAMjD,KACF,CACI,OAAUqD,EAAK,GACf,OAAUA,EAAK,UAGGzC,IAAtBkK,EAASzH,EAAK,IACdyH,EAASzH,EAAK,IAAM,GAEpByH,EAASzH,EAAK,KAAO,EACjB0H,EAAUD,EAASzH,EAAK,MACxB0H,EAAUD,EAASzH,EAAK,WAGNzC,IAAtBkK,EAASzH,EAAK,IACdyH,EAASzH,EAAK,IAAM,GAEpByH,EAASzH,EAAK,KAAO,EACjB0H,EAAUD,EAASzH,EAAK,MACxB0H,EAAUD,EAASzH,EAAK,SAKpCL,EAAKrD,MAAME,SAAQ,SAAC+D,EAAM7D,GACtBJ,EAAMK,KACF,CACI,GAAMD,EACN,KAAQ6D,EACR,aAAgBkH,EAAS/K,GACzB,WAAc,EACd,WAAc,CACV,iBAAoB,GAQxBiL,SAAUxH,KAAKC,OAAQqH,EAAS/K,IAAU,GAAK4C,EAA0BoI,QAUrF,IANA,IAAIhK,EAAQ,CACR,MAASpB,EACT,MAASsD,GAETS,EAAa,GACXC,EAAQoH,EAAUpI,EACflB,EAAI,EAAGA,EAAIkB,EAAyB,EAAGlB,IAC5CiC,EAAWjC,GAAK,CACZmC,KAAMJ,KAAKyH,KAAKxJ,EAAIkC,GAAS,IAAMH,KAAKyH,MAAMxJ,EAAI,GAAKkC,IAG/D,IAAME,EAAS,CACXG,OAAQ,CAAC,CACLhB,KAAMU,EAAWO,KAAI,SAAUC,GAC3B,OAAOA,EAAEN,UAGjB4B,OAAQ,CACJ,CACIxC,KAAMjC,EAAMpB,MACZsD,MAAOlC,EAAMkC,MACbS,WAAYA,EACZS,QAAS,CACLU,UAAW,SAAUP,GACjB,GAAwB,SAApBA,EAAOQ,SACP,OAAOR,EAAOtB,KAAKY,KAAZU,4CACqC1D,IAA7B0D,EAAOtB,KAAKkI,aAA6B,EAAI5G,EAAOtB,KAAKkI,cACrE,GAAwB,SAApB5G,EAAOQ,SAAqB,CACnC,IADmC,EAC7BqG,EAASnI,EAAKrD,MAAM2E,EAAOtB,KAAKlC,QAChCsK,EAASpI,EAAKrD,MAAM2E,EAAOtB,KAAKf,QAChCoJ,EAAWrI,EAAKsI,aAAaH,GAC7BI,EAAWvI,EAAKsI,aAAaF,GAC7BI,EAASH,EAASI,QAAO,SAAUC,GACrC,OAAgC,IAAzBH,EAAShK,QAAQmK,MAExBC,EAAc,GARiB,cASZH,GATY,IASnC,2BAA+B,CAAC,IAAvBI,EAAsB,QAC3BD,GAAe3I,EAAK6I,SAASD,GAAYzJ,MAAQ,SAVlB,8BAYnC,OAAOwJ,QAO/B7I,EAAQS,QAAQsD,UAAUhD,GAC1Bf,EAAQS,QAAQuD,GAAG,SAAS,SAACC,GACzB,GAAsB,SAAlBA,EAAKjC,SACLkC,IAAOC,YAAY,kBAAmBF,EAAKnD,MAC3CoE,QAAQC,IAAIlB,EAAKnD,UACd,CACH,IADG,EACGuH,EAASnI,EAAKrD,MAAMoH,EAAK/D,KAAKlC,QAC9BsK,EAASpI,EAAKrD,MAAMoH,EAAK/D,KAAKf,QAC9BoJ,EAAWrI,EAAKsI,aAAaH,GAC7BI,EAAWvI,EAAKsI,aAAaF,GAC7BI,EAASH,EAASI,QAAO,SAAUC,GACrC,OAAgC,IAAzBH,EAAShK,QAAQmK,MANzB,cAQoBF,GARpB,IAQH,2BAA+B,CAAC,IAAvBI,EAAsB,QAC3B5E,IAAOC,YAAY,iBAAkB2E,GACrC5D,QAAQC,IAAI2D,IAVb,mCAuBX9I,EAAQS,QAAQuD,GAAG,YAAa,CAAEhC,SAAU,SAAW,SAACiC,GACpD,GAAI0D,EAAmBlH,UAAYwD,EAAnC,CAGI0D,EAAmBlH,QAAUwD,EAIjC,IAEM+E,EAAW,CAAC/E,EAAK/D,KAAKY,MAEtBjE,EAAQ,CACV,CACIiE,KAAMmD,EAAK/D,KAAKY,KAChBsC,UAAW,CAEPzH,MAAO,WAEX4I,WAAY,KAGdpE,EAAQ,GACRW,EAAOmD,EAAK/D,KAAKY,KACRZ,EAAKsI,aAAa1H,GAC1B/D,SAAQ,SAAA+L,GACXjM,EAAMK,KACF,CACI4D,KAAMZ,EAAK6I,SAASD,GAAYzJ,MAChC+D,UAAW,CACPzH,MAAO,WAEX4I,WAAY,KAGpBpE,EAAMjD,KACF,CACIc,OAAQiG,EAAK/D,KAAKY,KAClB3B,OAAQe,EAAK6I,SAASD,GAAYzJ,MAClCqE,UAAW,CACP/H,MAAO,aAInBuE,EAAK6I,SAASD,GAAY,uBAAuB/L,SAAQ,SAAAkM,IACpB,GAA7BD,EAASvK,QAAQwK,KACjBD,EAAS9L,KAAK+L,GACdpM,EAAMK,KACF,CACI4D,KAAMmI,EACN7F,UAAW,CACPzH,MAAO,WAEX4I,WAAY,KAIxBpE,EAAMjD,KACF,CACIc,OAAQkC,EAAK6I,SAASD,GAAYzJ,MAClCF,OAAQ8J,EACRvF,UAAW,CACP/H,MAAO,mBAO3BiM,EAAU,CACN/K,MAAOA,EACPsD,MAAOA,QAUX+I,CAjVS,SAACtM,GAClB,IAAI4L,EAAe,GACnB5L,EAAUG,SAAQ,SAACC,EAAOC,GACtBD,EAAM,uBAAuBD,SAAQ,SAAA+D,QACNhD,IAAvB0K,EAAa1H,GACb0H,EAAa1H,GAAQ,CAAC7D,GAEtBuL,EAAa1H,GAAM5D,KAAKD,SAKpC,IAAIJ,EAAQsM,OAAOC,KAAKZ,GACpBa,EAAU,IAAI3L,IACdZ,EAAQ,GAoBZ,OAnBAD,EAAME,SAAQ,SAACuM,EAAajM,GACxB,IAAM+D,EAAIoH,EAAac,GACvBzM,EAAME,SAAQ,SAAC+D,EAAM7D,GACjB,GAAII,EAAeJ,EAAO,CACtB,IADsB,EAChBsM,EAAIf,EAAa1H,GADD,cAEPM,GAFO,IAEtB,2BAAkB,CAAC,IAAD,EAAToI,EAAS,sBACCD,GADD,IACd,2BACI,GAAIC,IADU,QACC,CACXH,EAAQxK,IAAR,UAAexB,EAAf,YAA+BJ,IAC/B,OAJM,gCAFI,sCAalCoM,EAAQtM,SAAQ,SAAAwD,GACZzD,EAAMI,KAAKqD,EAAK5C,MAAM,SAEnB,CACHd,MAAOA,EACPC,MAAOA,EACP0L,aAAcA,EACdO,SAAUnM,GA2SYD,CAAa6C,EAAMyF,cA4EjB,CAACzF,EAAMyF,YA/WY,MAmXrBU,oBAAS,GAnXY,mBAmXxCC,EAnXwC,KAmXjCC,EAnXiC,OAoZPF,mBAAS,IApZF,mBAoZxCG,EApZwC,KAoZ1BC,EApZ0B,OAmaPJ,mBAAS,IAnaF,mBAmaxCK,EAnawC,KAma1BC,EAna0B,OAqabN,oBAAS,GAraI,mBAqaxCO,EArawC,KAqa7BC,EAra6B,KA0b/C,OACI,sBAAKC,MAAO,CAAEC,QAAS,UAAvB,UACI,qBAAKD,MAAO,CAAEC,QAASqB,EAAU,OAAS,UAA1C,SACI,qBAAKpB,GAAI7G,EAAIgB,QAAS2F,MAAO,CACzBtK,MAAO,IACPF,OAAQ,IACR2K,MAAO,YAGf,8BACI,qBAAKH,MAAO,CAAEC,QAASqB,EAAU,SAAW,QAA5C,4CAIJ,eAAClB,EAAA,EAAD,CAAOJ,MACH,CACItK,MAAO,IACPF,OAAQ,IACR2K,MAAO,SAEbE,UAAW,EANb,UAOI,qBAAKL,MAAO,CAAEtK,MAAO,IAAKF,OAAQ,KAAO0K,GAAG,wBAE5C,eAACI,EAAA,EAAD,CACIC,WAAS,EACTC,QAAS,EAFb,UASI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,sBAAKV,MAAO,CAAEtK,MAAO,IAAKI,WAAY,GAAImK,QAAS,eAAnD,UACI,cAACU,EAAA,EAAD,CACIC,KAAM,cAAC,IAAD,IACNZ,MAAO,CAAEtK,MAAO,KAChBoH,MAAO0C,EAAQ,QAAU,WACzBjK,MAAOiK,EAAQ,UAAY,YAC3BqB,QAAQ,aAEZ,qBAAKb,MAAO,CAAElK,WAAY,GAA1B,SACI,cAACgL,EAAA,EAAD,CACIC,QAASvB,EACTwB,SAlHZ,WAChBpH,EAAQS,QAAQsD,UACZ,CACIrB,OAAQ,CACJ,CAEII,OAAS8C,EAAkB,WAAV,YAKjCC,GAAS,SAAAD,GAAK,OAAKA,MAwGS9E,KAAK,WACLuG,WAAY,CAAE,aAAc,+BAQ5C,cAACX,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,sBAAKV,MAAO,CAAEtK,MAAO,IAAKI,WAAY,GAAImK,QAAS,eAAnD,UACI,cAACU,EAAA,EAAD,CACIC,KAAMd,EAAY,cAAC,IAAD,IAAgB,cAAC,IAAD,IAClCE,MAAO,CAAEtK,MAAO,KAChBoH,MAAOgD,EAAY,OAAS,OAC5BvK,MAAOuK,EAAY,UAAY,YAC/Be,QAAQ,aAEZ,qBAAKb,MAAO,CAAElK,WAAY,GAA1B,SACI,cAACgL,EAAA,EAAD,CACIC,QAASjB,EACTkB,SAtFR,WACpBpH,EAAQS,QAAQsD,UACZ,CACIrB,OAAQ,CACJ,CAEIQ,MAAO,CACHvH,MAAO,UACPwH,MAAO+C,OAO3BC,GAAa,SAAAD,GAAS,OAAKA,MAwECpF,KAAK,WACLuG,WAAY,CAAE,aAAc,+BAQ5C,eAACX,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIF,QAAS,EAA5B,UACI,cAACG,EAAA,EAAD,CACIC,KAAM,cAAC,IAAD,IACNZ,MAAO,CAAEtK,MAAO,IAAKG,WAAY,GAAIC,WAAY,IACjDgH,MAAO,gBAAQ4C,EAAe,GAC9BnK,MAAO,UACPsL,QAAQ,aAEZ,cAAC,EAAD,CAAcb,MAAO,CAAEtK,MAAO,IAAKI,WAAY,GAAIP,MAAO,WAAa2L,IAAK,EAAGpF,IAAK,GAAI1B,MAAOsF,EAAcsB,SA3IpG,SAACG,EAAOC,GACjCzB,EAAgByB,GAChBxH,EAAQS,QAAQsD,UACZ,CACIrB,OAAQ,CACJ,CAEIgB,UAAW,CACPL,OAAQ,CACJM,UAAW6D,EAAW,eAoIlC,eAACd,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIF,QAAS,EAA5B,UACI,cAACG,EAAA,EAAD,CACIC,KAAM,cAAC,IAAD,IACNZ,MAAO,CAAEtK,MAAO,IAAKG,WAAY,GAAIC,WAAY,IACjDgH,MAAO,gBAAQ8C,EAAe,GAC9BrK,MAAO,UACPsL,QAAQ,aAEZ,cAAC,EAAD,CAAcb,MAAO,CAAEtK,MAAO,IAAKI,WAAY,GAAIP,MAAO,WAAa2L,IAAK,EAAGpF,IAAK,GAAI1B,MAAOwF,EAAcoB,SAlIpG,SAACG,EAAOC,GACjCvB,EAAgBuB,GAChBxH,EAAQS,QAAQsD,UACZ,CACIrB,OAAQ,CACJ,CACI4C,MAAO,CACHwC,QAASN,EAAW,uBCpfjC,SAASiC,EAAcjK,GAClC,IAAMC,EAAMC,iBAAOC,IAAKC,MAClBI,EAAUN,iBAAO,MAkIvB,OAHAmF,qBA9DwB,WACpB,IAAIgD,EAAW9C,SAASC,eAAevF,EAAIgB,SAC3CT,EAAQS,QAAUqE,IAAa+C,EAAS,WAyDxC7H,EAAQS,QAAQsD,UAxDD,CACX/C,MAAO,CACHC,KAAM,+CAEVI,QAAS,CACLqI,QAAS,QAEbxI,OAAQ,CACJhB,KAAM,IAEVyJ,KAAM,CACFrN,KAAM,KACNsN,MAAO,KACPC,OAAQ,KACRC,cAAc,GAGlBC,MAAO,CACHnH,KAAM,WACNoH,aAAa,EACb9J,KAAM,IAGV+J,MAAO,CACHrH,KAAM,SAEVF,OAAQ,CACJ,CACI5B,KAAM,iCACN8B,KAAM,MACN1C,KAAM,GACNkD,UAAW,CACPC,OAAQ,CACJ1H,MAAO,cAMvBuO,SAAU,CACN,CACI/G,MAAM,EACNgH,UAAU,EACV9L,MAAO,EACP+L,IAAK,IACLC,WAAY,CAAC,EAAG,IAEpB,CACIzH,KAAM,SACNuH,UAAU,EACV9L,MAAO,EACP+L,IAAK,IACLC,WAAY,CAAC,EAAG,SAOL,IAE3BxF,qBAxEyB,WACG,OAApBrF,EAAMyF,UACNC,QAAQC,IAAI,SA9BL,SAACjF,GACG6E,SAASC,eAAevF,EAAIgB,SAA3C,IACMM,EAAS,CACXgJ,MAAO,CACH7J,KAAMA,EAAKoK,MAEf5H,OAAQ,CACJ,CACIxC,KAAMA,EAAKM,SAKvBR,EAAQS,QAAQsD,UAAUhD,GAE1Bf,EAAQS,QAAQuD,GAAG,YAAY,SAAAC,GAC3B,IAAMsG,EAAUC,OAAOtK,EAAKoK,KAAK,IAE3BG,GADUD,OAAOtK,EAAKoK,KAAKpK,EAAKoK,KAAK1L,OAAS,IACvB2L,GAAW,IAClClM,EAAQ4F,EAAKyG,MAAQzG,EAAKyG,MAAM,GAAGrM,MAAQ4F,EAAK5F,MAChD+L,EAAMnG,EAAKyG,MAAQzG,EAAKyG,MAAM,GAAGN,IAAMnG,EAAKmG,IAClDlG,IAAOC,YAAY,gCAAiC,CAChD9F,MAAOqC,KAAKC,MAAMtC,EAAQoM,EAAYF,GACtCH,IAAK1J,KAAKC,MAAMyJ,EAAMK,EAAYF,QAStCI,CA5Da,SAAC/N,GAClB,IAAI2N,EAAU,MACVK,EAAU,EACRC,EAAY,GAClBjO,EAAUG,SAAQ,SAACC,GACf,IAAM8N,EAAON,OAAOxN,EAAMuF,MAC1BsI,EAAUC,GAAQD,EAAUE,eAAeD,GAAQD,EAAUC,GAAQ,EAAI,EACzEP,EAAU7J,KAAK4G,IAAIiD,EAASO,GAC5BF,EAAUlK,KAAKwB,IAAI0I,EAASE,MAIhC,IAFA,IAAMR,EAAO,GACP9J,EAAQ,GACL7B,EAAI4L,EAAS5L,GAAKiM,EAASjM,IAChC2L,EAAKpN,KAAKyB,GACV6B,EAAMtD,KAAK2N,EAAUE,eAAepM,GAAKkM,EAAUlM,GAAK,GAE5D,MAAO,CACH2L,KAAMA,EACN9J,MAAOA,GA0CA7D,CAAa6C,EAAMyF,cAoEN,CAACzF,EAAMyF,YAE/B,qBAAKqB,GAAI7G,EAAIgB,QAAS2F,MAAO5G,EAAM4G,QC1E5B,SAAS4E,EAAiBxL,GACrC,IAAMC,EAAMC,iBAAOC,IAAKC,MAElBC,EACS,GADTA,EAEY,GAIZoL,EAAYvL,iBAAO,IACnBwL,EAAUxL,iBAAO,IAEjBO,EAAa,SAAEkL,GACb,IAAMjL,EAAOkL,EAAU3K,QAIvBwK,EAAUxK,QAAU,GACpByK,EAAQzK,QAAU,GAElB,IAAM4K,EAAmB,SAACC,GACtB,MAAO,CACH,GAAMA,EAAcpL,EAAKqL,OAAO3M,OAChC,KAAOsB,EAAKsL,QAAQF,GACpB,KAAO,SACP,WAAezL,EAEf,UAAa,CACT,MAAS,aAKf4L,EAAkB,SAAC3C,GAErB,MAAO,CACH,GAAMA,EACN,KAAO5I,EAAK6I,SAASD,GAAYzJ,MACjC,KAAO,QACP,WAAeQ,EAEf,UAAa,CACT,MAAS,aAKf6L,EAAa,SAAC1N,EAAOmB,GACvB,MAAO,CACHnB,OAAOA,EAAO,GACdmB,OAAOA,EAAO,KAIhBwM,EAAW,SAACrF,GACd,OAAwC,IAAjC4E,EAAQzK,QAAQhC,QAAQ6H,KAAiD,IAAnC2E,EAAUxK,QAAQhC,QAAQ6H,IAIrEsF,EAAU,SAACtF,GACb4E,EAAQzK,QAAQvD,KAAKoJ,IAInBuF,EAAiB,WACnB,IAAMhP,EAAQ,GACRC,EAAQ,GACRgP,EAAY,GAGlBb,EAAUxK,QAAQ1D,SAAS,SAACgP,GACpBD,EAAU5O,KAAK6O,GAIXA,GAAU7L,EAAKqL,OAAO3M,OACtB/B,EAAMK,KAAMmO,EAAiBU,EAAS7L,EAAKqL,OAAO3M,SAElD/B,EAAMK,KAAMuO,EAAgBM,OAKxCb,EAAQzK,QAAQ1D,SAAS,SAACgP,GAIlBD,EAAU5O,KAAK6O,GACXA,GAAU7L,EAAKqL,OAAO3M,OACtB/B,EAAMK,KAAMmO,EAAiBU,EAAS7L,EAAKqL,OAAO3M,SAElD/B,EAAMK,KAAKuO,EAAgBM,OAMvC,IAAM/D,EAAW,GAEjBnL,EAAME,SAAS,SAACiP,GACR,GAAyB,UAArBA,EAAYpJ,KAAkB,CAC9B,IAAMvF,EAAemN,OAAOwB,EAAY1F,IACxCpG,EAAK+L,aAAa5O,GAAcN,SAAS,SAACuO,GAClC,IAAMY,EAAMZ,EAAcpL,EAAKqL,OAAO3M,QACN,IAA5BkN,EAAUrN,QAAQyN,KAClBpP,EAAMI,KAAKwO,EAAWrO,EAAa6O,IACnClE,EAAS3K,QAA2CS,IAA3BkK,EAAS3K,GAA8B,EAAG2K,EAAS3K,GAAc,EAC1F2K,EAASkE,QAAyBpO,IAAlBkK,EAASkE,GAAqB,EAAGlE,EAASkE,GAAK,UAI1E,CACD,IAAM7O,EAAemN,OAAOwB,EAAY1F,IAAMpG,EAAKqL,OAAO3M,OACpD0K,EAAcpJ,EAAKsL,QAAQnO,GACjC6C,EAAKsI,aAAac,GAAavM,SAAU,SAAC+L,IACK,IAAnCgD,EAAUrN,QAAQqK,KAClBhM,EAAMI,KAAKwO,EAAWrO,EAAayL,IACnCd,EAAS3K,QAA2CS,IAA3BkK,EAAS3K,GAA8B,EAAG2K,EAAS3K,GAAc,EAC1F2K,EAASc,QAAuChL,IAAzBkK,EAASc,GAA4B,EAAGd,EAASc,GAAY,UAS5G,IAAIqD,GAAW,EACXC,EAAW,MAMf,GALAjD,OAAOC,KAAKpB,GAAUjL,SAAS,SAACsP,GAC5BF,EAAUzL,KAAKwB,IAAKiK,EAASnE,EAASqE,IACtCD,EAAW1L,KAAK4G,IAAK8E,EAAUpE,EAASqE,OAGxB,IAAjBxP,EAAM+B,OACL/B,EAAM,GAAG0H,WAAa1E,EAA6B,OAEnD,IAAI,IAAIlB,EAAI,EAAIA,EAAI9B,EAAM+B,OAASD,IAC/B9B,EAAM8B,GAAG4F,WAAa7D,KAAKyH,MAEbH,EAASnL,EAAM8B,GAAG2H,IAAM8F,IACzBD,EAAUC,IAEdvM,EAA6B,GAC9BA,EAA6B,GAM7C,GAAoB,IAAhB,UAAKjB,OAAc,CACnB,IAAM0N,EAAc9B,OAAO,UAAD,+BACpB+B,EAAQ,CAACD,GACfxP,EAAMC,SAAS,SAACwD,GACRiK,OAAOjK,EAAKvC,UAAasO,EACzBC,EAAMrP,KAAKsN,OAAOjK,EAAKpB,SAClBqL,OAAOjK,EAAKpB,UAAamN,GAC9BC,EAAMrP,KAAKsN,OAAOjK,EAAKvC,YAI/B,IAAI,IAAIW,EAAI,EAAIA,EAAI9B,EAAM+B,OAASD,KACI,IAAhC4N,EAAM9N,QAAQ5B,EAAM8B,GAAG2H,MACtBzJ,EAAM8B,GAAGuE,MAAQ,CACbC,MAAM,IAMtB,MAAO,CACHtG,MAAMA,EACNsD,MAAMrD,IAIR0P,EAAiB,WACnBtB,EAAQzK,QAAQ1D,SAAS,SAAC0P,GAASxB,EAAUxK,QAAQvD,KAAKuP,MAC1DvB,EAAQzK,QAAU,IAIlBoH,EAAW9C,SAASC,eAAevF,EAAIgB,SACvCT,EAAU8E,IAAa+C,EAAS,WACpC7H,EAAQyF,aAIS3H,IAAbqN,IACuB,UAAnBA,EAASvI,KACTgJ,EAAQT,EAASlO,OAGjB2O,EAAQT,EAASlO,MAAQiD,EAAKqL,OAAO3M,QAEzC4N,KAKJ,IAKMzL,EAAS,CACXyB,wBAAyB,KACzBC,sBAAuB,eAEvBC,OAAQ,CACJ,CACIE,KAAM,QACNE,OAAQ,WACR4J,WAAW,EACX/J,oBAAoB,EACpBzC,KAAM2L,IAAiBhP,MACvByI,MAAO,CACHD,UAAW,IACXsH,WAAY,GAEhB7P,MAAO+O,IAAiB1L,MACxBS,WArBK,CACb,CAACE,KAAO,gBACR,CAACA,KAAO,iBAoBAsC,UAAW,CAEPC,OAAQ,CACJH,MAAO,CACHC,MAAM,EACN7B,SAAU,MACVS,UAAW,SAASP,GAChB,OAAOA,EAAOtB,KAAKY,MAEvB8L,UAAW,CACPjR,MAAO,SAIf8H,QAAS,GAGbG,SAAU,IAKdF,UAAW,CACPL,OAAQ,CACJ1H,MAAO,UACPG,MAAO,IACP8G,KAAM,QACNe,UAAW,IAEfC,SAAU,OAS1B5D,EAAQ+D,UAAUhD,GA+BlBf,EAAQgE,GAAI,aAAa,SAACC,GACtB,GAAqB,SAAlBA,EAAKjC,SAAoB,CAEF,WAAnBiC,EAAK/D,KAAK0C,KA9BJ,SAACiK,GACd,IAAIC,GAAO,EACLxB,EAAcuB,EAAkB3M,EAAKqL,OAAO3M,OAC5CmO,EAAa7M,EAAKsL,QAAQF,GAShC,OARqBpL,EAAKsI,aAAauE,GAC1BhQ,SAAU,SAAC+L,IACa,IAAzB6C,EAAS7C,KACTgE,GAAO,EACPlB,EAAQ9C,OAIbgE,EAmBQE,CAAS/I,EAAK/D,KAAKoG,IAjBtB,SAACwC,GACb,IAAIgE,GAAO,EASX,OARgB5M,EAAK+L,aAAanD,GAC1B/L,SAAS,SAACuO,GACd,IAAM2B,EAAe3B,EAAcpL,EAAKqL,OAAO3M,QAChB,IAA3B+M,EAASsB,KACTH,GAAO,EACPlB,EAAQqB,OAGTH,EASQI,CAAQjJ,EAAK/D,KAAKoG,IAE7B,IAAM6G,EAAetB,EAAe5H,EAAK/D,KAAKoG,IAC1CtG,EAAQ+D,UACJ,CACIrB,OAAQ,CACR,CACIxC,KAAMiN,EAAatQ,MACnBC,MAAOqQ,EAAahN,cAO5CH,EAAQgE,GAAI,YAAY,SAACC,GACrBiH,EAAQzK,QAAU,GAClB,IAAM0M,EAAetB,IACrB7L,EAAQ+D,UACA,CACIrB,OAAQ,CACR,CACIxC,KAAMiN,EAAatQ,MACnBC,MAAOqQ,EAAahN,aAMxCH,EAAQoN,QAAQpJ,GAAI,SAAQ,SAACC,GACrB,GAA8B,IAA3BiH,EAAQzK,QAAQ7B,OAAc,CAE7B,IAAMuO,EAAetB,IACjB7L,EAAQ+D,UACJ,CACIrB,OAAQ,CACR,CACIxC,KAAMiN,EAAatQ,MACnBC,MAAOqQ,EAAahN,UAIpCqM,SAEAtH,QAAQC,IAAI,qEAM1BiG,EAAY1L,iBAAO,MACnByL,EAAWzL,iBAAO,CACRkD,KAAK,QACL3F,OAAO,IA+CNyC,iBAAO,MAGxB,OADAmF,qBA/C0B,WACC,OAApBrF,EAAMyF,WAAiD,IAA3BzF,EAAMyF,UAAUrG,OAC3CsG,QAAQC,IAAI,UAEZiG,EAAU3K,QAlaD,SAAC7D,GAClB,IAAI4L,EAAe,GACf+C,EAAS,GACTU,EAAe,GACnBrP,EAAUG,SAAQ,SAACC,EAAMC,GACrBsO,EAAOrO,KAAKqO,EAAO3M,QACnB5B,EAAM,uBAAuBD,SAAS,SAAC+D,QACThD,IAAvB0K,EAAa1H,GACZ0H,EAAa1H,GAAQ,CAAC7D,GAEtBuL,EAAa1H,GAAM5D,KAAKD,SAMpC,IAAIJ,EAASsM,OAAOC,KAAKZ,GACrBa,EAAU,IAAI3L,IACdZ,EAAQ,GA8BZ,OA5BAF,EAAUG,SAAQ,SAACC,EAAMC,GACrB,IAAMoQ,EAAY,GAClBrQ,EAAM,uBAAuBD,SAAS,SAAC+D,GACnCuM,EAAUnQ,KAAKL,EAAM4B,QAAQqC,OAEjCmL,EAAa/O,KAAKmQ,MAItBxQ,EAAME,SAAS,SAACuM,EAAYjM,GACxB,IAAM+D,EAAIoH,EAAac,GACvBzM,EAAME,SAAS,SAAC+D,EAAK7D,GACjB,GAAII,EAAeJ,EAAM,CACrB,IADqB,EACfsM,EAAIf,EAAa1H,GADF,cAENM,GAFM,IAErB,IAAI,EAAJ,qBAAiB,CAAC,IAAD,EAARoI,EAAQ,sBACED,GADF,IACb,IAAI,EAAJ,qBACI,GAAIC,IADS,QACC,CACVH,EAAQxK,IAAR,UAAiBxB,EAAjB,YAAiCJ,IACjC,OAJK,gCAFI,sCAajCoM,EAAQtM,SAAS,SAAAwD,GACbzD,EAAMI,KAAKqD,EAAK5C,MAAM,SAEnB,CACH6N,QAAQ3O,EACR2L,aAAaA,EACb+C,OAAOA,EACPU,aAAaA,EACblD,SAASnM,GA6WeD,CAAa6C,EAAMyF,WACvCC,QAAQC,IAAI,iCAAQiG,EAAU3K,SACX,UAAfjB,EAAMoD,MACNuI,EAAS1K,QAAU,CACfmC,KAAK,QACL3F,MAAMuN,OAAOhL,EAAM8N,QAEvBrN,EAAWkL,EAAS1K,WAEpB0K,EAAS1K,QAAU,CACfmC,KAAK,SACL3F,MAAMmO,EAAU3K,QAAQ+K,QAAQ/M,QAAQe,EAAM8N,QAElDrN,EAAWkL,EAAS1K,UAExByE,QAAQC,IAAI,qBAAqB3F,OA6BlC,qBAAK8G,GAAI7G,EAAIgB,QAAS2F,MAAO5G,EAAM4G,Q,qKC5bxCmH,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC/R,KAAM,CACFgS,OAAQ,OACR5R,MAVM,IAWN6R,UAVO,IAWPC,SAAU,SAEdC,WAAY,CACR/R,MAZYA,IAaZ6R,UAZa/R,IAabgS,SAAU,UAEdE,QAAS,CACLC,QAAS,IAEbC,IAAK,CACD,QAAS,CACLN,OAAQD,EAAM7G,QAAQ,MAG9BqH,QAAS,CACLnS,MAAO,OACPF,OAAQ,SAID,SAASsS,GAAU1O,GAAQ,IAAD,EAEHmG,mBAAS,CACvC,WAAc,GACd,KAAQ,GACR,MAAS,GACT,IAAO,GACP,KAAQ,GACR,UAAa,EACb,SAAY,EACZ,UAAa,GACb,SAAY,GACZ,sBAAuB,GACvB,YAAe,GACf,kBAAqB,GACrB,mBAAsB,GACtB,eAAkB,GAClB,8BAA+B,EAC/B,8BAA+B,EAC/B,UAAa,EACb,MAAS,KApBwB,mBAE9BV,EAF8B,KAEnBkJ,EAFmB,KAyB/BC,EAAab,KAEbc,GADsBC,mCACHC,mCACnBC,EAAwBC,wCAE9B5J,qBAAU,WACa,OAAfrF,EAAMU,MACNiO,EAAa3O,EAAMU,QAExB,CAACV,EAAMU,OAMV,OACI,eAACwO,EAAA,EAAD,CAAMC,UAAWC,kBAAGR,EAAW1S,KAAM2S,EAAiB3S,MAAOmT,QAAU,SAACC,GAAOA,EAAEC,mBAAjF,UACI,eAACrI,EAAA,EAAD,CACIC,WAAS,EACTqI,UAAU,MACVC,QAAQ,gBACRC,WAAW,aAJf,UAMI,cAACC,GAAA,EAAD,CACIxT,MAAM,UACNkT,QAAS,WACL3K,IAAOkL,QAAQ,0BAA2B,KAHlD,SAMI,cAAC,KAAD,MAEJ,cAACD,GAAA,EAAD,CACAxT,MAAM,UACNkT,QAAS,WAtBA,IAACjM,EAAKqB,EAALrB,EAuBW,QAvBNqB,EAuBcgB,EAAUoK,OAtB/CC,OAAOC,SAASC,KAAhB,kCAAkD5M,EAAlD,YAA0DqB,IAmBlD,SAMI,cAAC,KAAD,SAIR,sBAAK0K,UAAWP,EAAWP,WAA3B,UACI,cAAC4B,EAAA,EAAD,CACId,UAAWP,EAAWH,QACtByB,MAAO,oBAEX,cAACC,EAAA,EAAD,CAAahB,UAAWP,EAAWN,QAAnC,SACI,cAAC,IAAD,CACI8B,QAASpB,EACTqB,QAAS5K,EAAS,MAClB6K,KACI7K,EAAU5C,aAItB,cAAC2L,EAAA,EAAD,CAAKW,UAAWP,EAAWJ,IAAK+B,GAAI,EAAGC,GAAI,EAA3C,SACK/K,EAAU,uBAAuB9D,KAAI,SAAC8O,GAAD,OAClC,cAAClJ,EAAA,EAAD,CACIE,QAAQ,WACRtL,MAAM,UACNuU,OAAQ,cAACC,EAAA,EAAD,UAASF,EAAIG,MAAM,EAAG,KAC9BlN,MAAO+M,EACPI,WAAS,EACTxB,QACI,WACI3K,IAAOkL,QAAQ,kBAAmBa,iBCzIvD,SAASK,GAAW9Q,GAC/B,IAAMC,EAAMC,iBAAOC,IAAKC,MAkFxB,OADAiF,qBAPyB,WACG,OAApBrF,EAAMyF,UACNC,QAAQC,IAAI,SAvCD,SAACjF,GAChB,IAAI2H,EAAW9C,SAASC,eAAevF,EAAIgB,SACvCT,EAAU8E,IAAa+C,EAAS,WAC9B9G,EAAS,CACXC,MAAO,CACHC,KAAM,2BACN3E,KAAM,QAEV+E,QAAS,CACLqI,QAAS,QAEbxI,OAAQ,CACJhB,KAAM,GACNqQ,OAAQ,WACRjU,KAAM,QAGVoG,OAAQ,CACJ,CACI5B,KAAM,aACN8B,KAAM,MACN4N,OAAQ,CAAC,MAAO,OAChBtQ,KAAMA,EAAKM,MACXoD,SAAU,CACNR,UAAW,CACPqN,WAAY,GACZC,cAAe,EACfC,YAAa,0BAMjC3Q,EAAQ+D,UAAUhD,GAQdd,CA5Ea,SAACrD,GAElB,IAAMgU,EAAQ,GAEdhU,EAAUG,SAAQ,SAAAC,GACd,IAAM6T,EAAO7T,EAAMsT,WACnBM,EAAMC,QAAwB/S,IAAhB8S,EAAMC,GAAsB,EAAID,EAAMC,GAAQ,KAEhE,IAAMvG,EAAO,GACP9J,EAAQ,GAad,OAXA2I,OAAOC,KAAKwH,GAAO7T,SAAQ,SAAA+T,GACnBF,EAAME,GAAO,KACbxG,EAAKpN,KAAK4T,GACVtQ,EAAMtD,KAAK,CACPsD,MAAOoQ,EAAME,GACbhQ,KAAMgQ,QAMX,CACHxG,KAAMA,EACN9J,MAAOA,GAoDI7D,CAAa6C,EAAMyF,cAGX,CAACzF,EAAMyF,YAE9B,qBAAKqB,GAAI7G,EAAIgB,QAAS2F,MAAO5G,EAAM4G,QClF5B,SAAS2K,GAAYvR,GAChC,IAAMC,EAAMC,iBAAOC,IAAKC,MADe,EASD+F,mBAAS,CAAC,EAAG,QATZ,mBAShCqL,EATgC,KASnBC,EATmB,KAUjCC,EAAiBxR,iBAAO,CAAC,EAAG,QAsF5ByR,EAAoB,WACE,OAApB3R,EAAMyF,UACNC,QAAQC,IAAI,SAhDD,SAACjF,GAChB,IAAI2H,EAAW9C,SAASC,eAAevF,EAAIgB,SAEvCT,EAAU8E,IAAa+C,EAAU,WACrC7H,EAAQyF,QACR,IAAM1E,EAAS,CACXC,MAAO,CACHC,KAAM,2BACN3E,KAAM,QAEV+E,QAAS,CACLqI,QAAS,QAEbxI,OAAQ,CACJhB,KAAM,GACNqQ,OAAQ,WACRjU,KAAM,OACN8U,SAAU,CACN,OAAS,IAIjB1O,OAAQ,CACJ,CACI5B,KAAM,oBACN8B,KAAM,MACN4N,OAAQ,CAAC,MAAO,OAChBtQ,KAAMA,EAAKM,MACXoD,SAAU,CACNR,UAAW,CACPqN,WAAY,GACZC,cAAe,EACfC,YAAa,uBAGrBzN,MAAO,CACHnB,UAAW,eAK3B/B,EAAQ+D,UAAUhD,GAClBf,EAAQgE,GAAG,SAAS,SAAAC,GAAUiB,QAAQC,IAAIlB,MAQtChE,CAzFa,SAACrD,GAClB,IAAMyU,EAAS,GACfzU,EAAUG,SAAQ,SAAAC,GACdA,EAAMsU,kBAAkB3T,MAAM,KAAKZ,SAC/B,SAAAwU,GACIF,EAAOE,QAA2BzT,IAAlBuT,EAAOE,GAAuB,EAAIF,EAAOE,GAAS,QAI9E,IAAMjH,EAAO,GACP9J,EAAQ,GAGV8G,EAAM,MACNpF,EAAM,EAmBV,OAjBAiH,OAAOC,KAAKiI,GAAQtU,SAAQ,SAAA+T,GACZ,KAARA,IACAxJ,EAAM5G,KAAK4G,IAAI+J,EAAOP,GAAMxJ,GAC5BpF,EAAMxB,KAAKwB,IAAImP,EAAOP,GAAM5O,GACxBmP,EAAOP,GAAOU,GACdlH,EAAKpN,KAAK4T,GACVtQ,EAAMtD,KAAK,CACPsD,MAAO6Q,EAAOP,GACdhQ,KAAMgQ,KAGIO,EAAOP,OAIjCG,EAAe,CAAC3J,EAAKpF,IACrBgP,EAAezQ,QAAU,CAAC6G,EAAKpF,GACxB,CACHoI,KAAMA,EACN9J,MAAOA,GAsDI7D,CAAa6C,EAAMyF,aApGC,EA+GDwM,IAAM9L,SAAS,IA/Gd,mBA+GhC6L,EA/GgC,KA+GnBE,EA/GmB,KAgIvC,OAXA7M,qBAXsB,WAClBsM,IACAO,EAAehR,KAAKiR,OAAOX,EAAY,GAAKA,EAAY,IAAM,MASzC,CAACxR,EAAMyF,YAEhCJ,oBAAUsM,EAAmB,CAACK,IAK9B3M,qBAAU,WACN6M,EAAehR,KAAKiR,OAAOT,EAAezQ,QAAQ,GAAKyQ,EAAezQ,QAAQ,IAAM,MACrF,CAACjB,EAAMyF,YAGN,sBAAKmB,MAAO5G,EAAM4G,MAAlB,UACI,qBAAKE,GAAI7G,EAAIgB,QAAS2F,MAAO5G,EAAM4G,QAEnC,cAAC1J,EAAA,EAAD,CACI8D,MAAOgR,EACPpK,SArBS,SAACG,EAAOC,GACzBkK,EAAelK,IAqBPoK,kBAAgB,oBAChBC,kBAAkB,OAClBvK,IAAK0J,EAAY,GACjB9O,IAAK8O,EAAY,QCtIlB,SAASc,GAAUtS,GAC9B,IAAMC,EAAMC,iBAAOC,IAAKC,MAClBI,EAAUN,iBAAO,MAgIvB,OAHAmF,qBA7DwB,WACpB,IAAIgD,EAAW9C,SAASC,eAAevF,EAAIgB,SAC3CT,EAAQS,QAAUqE,IAAa+C,EAAS,WAwDxC7H,EAAQS,QAAQsD,UAvDD,CACX/C,MAAO,CACHC,KAAM,+CAEVI,QAAS,CACLqI,QAAS,QAEbxI,OAAQ,CACJhB,KAAM,IAEVyJ,KAAM,CACFrN,KAAM,KACNsN,MAAO,KACPC,OAAQ,KACRC,cAAc,GAGlBC,MAAO,CACHnH,KAAM,WACNoH,aAAa,EACb9J,KAAM,IAEV+J,MAAO,CACHrH,KAAM,SAEVF,OAAQ,CACJ,CACI5B,KAAM,qBACN8B,KAAM,MACN1C,KAAM,GACNkD,UAAW,CACXC,OAAQ,CACJ1H,MAAM,cAMlBuO,SAAU,CACN,CACI/G,MAAM,EACNgH,UAAU,EACV9L,MAAO,EACP+L,IAAK,IACLC,WAAY,CAAC,EAAG,IAEpB,CACIzH,KAAM,SACNuH,UAAU,EACV9L,MAAO,EACP+L,IAAK,IACLC,WAAY,CAAC,EAAG,SAOL,IAE3BxF,qBAvEyB,WACG,OAApBrF,EAAMyF,UACNC,QAAQC,IAAI,SA7BL,SAACjF,GACG6E,SAASC,eAAevF,EAAIgB,SAA3C,IACMM,EAAS,CACXgJ,MAAO,CACH7J,KAAMA,EAAKoK,MAEf5H,OAAQ,CACJ,CACIxC,KAAMA,EAAKM,SAKvBR,EAAQS,QAAQsD,UAAUhD,GAC1Bf,EAAQS,QAAQuD,GAAG,YAAY,SAAAC,GAC3B,IAAMsG,EAAUC,OAAOtK,EAAKoK,KAAK,IAE3BG,GADUD,OAAOtK,EAAKoK,KAAKpK,EAAKoK,KAAK1L,OAAS,IACvB2L,GAAW,IAClClM,EAAQ4F,EAAKyG,MAAQzG,EAAKyG,MAAM,GAAGrM,MAAQ4F,EAAK5F,MAChD+L,EAAMnG,EAAKyG,MAAQzG,EAAKyG,MAAM,GAAGN,IAAMnG,EAAKmG,IAClDlG,IAAOC,YAAY,qCAAsC,CACrD9F,MAAOqC,KAAKC,MAAMtC,EAAQoM,EAAYF,GACtCH,IAAK1J,KAAKC,MAAMyJ,EAAMK,EAAYF,QAStCI,CA3Da,SAAC/N,GAClB,IAAI2N,EAAU,MACVK,EAAU,EACRC,EAAY,GAClBjO,EAAUG,SAAQ,SAACC,GACf,IAAM8N,EAAON,OAAOxN,EAAM8U,WAC1BjH,EAAUC,GAAQD,EAAUE,eAAeD,GAAQD,EAAUC,GAAQ,EAAI,EACzEP,EAAU7J,KAAK4G,IAAIiD,EAASO,GAC5BF,EAAUlK,KAAKwB,IAAI0I,EAASE,MAIhC,IAFA,IAAMR,EAAO,GACP9J,EAAQ,GACL7B,EAAI4L,EAAS5L,GAAKiM,EAASjM,IAChC2L,EAAKpN,KAAKyB,GACV6B,EAAMtD,KAAK2N,EAAUE,eAAepM,GAAKkM,EAAUlM,GAAK,GAE5D,MAAO,CACH2L,KAAMA,EACN9J,MAAOA,GAyCA7D,CAAa6C,EAAMyF,cAmEN,CAACzF,EAAMyF,YAE/B,qBAAKqB,GAAI7G,EAAIgB,QAAS2F,MAAO5G,EAAM4G,QCjI5B,SAAS2L,GAAavS,GAAO,MAYNmG,mBAAS,MAZH,mBAYjCV,EAZiC,KAYtBkJ,EAZsB,OAaOxI,mBAAS,MAbhB,mBAajCqM,EAbiC,KAafC,EAbe,KAclCC,EAAexS,iBAAO,MAStByS,EAAazS,iBAAO,CAAC,EAAG,QACxB0S,EAAkB1S,iBAAO,CAAC,EAAG,QAI7B2S,EAAc,WAChB,IAAMC,EAAgBJ,EAAazR,QAAQkI,QAAO,SAAA3L,GACtC,IAAMuV,EAAYJ,EAAW1R,QAAQ,GAAK+J,OAAOxN,EAAMuF,OAASiI,OAAOxN,EAAMuF,MAAQ4P,EAAW1R,QAAQ,GAClG+R,EAAiBJ,EAAgB3R,QAAQ,GAAKzD,EAAM8U,WAAa9U,EAAM8U,UAAYM,EAAgB3R,QAAQ,GACjH,OAAO8R,GAAaC,KAGhCP,EAAmBK,IAkBvB,OAbAzN,qBAAU,WAvBNsJ,EAAa3O,EAAMyF,WACnBgN,EAAmBzS,EAAMyF,WACzBiN,EAAazR,QAAUjB,EAAMyF,UAuB7Bf,IAAOuO,UAAU,iCAAiC,SAACC,EAAKxS,GACpDiS,EAAW1R,QAAU,CAACP,EAAK7B,MAAO6B,EAAKkK,KACvCiI,OAEJnO,IAAOuO,UAAU,sCAAsC,SAACC,EAAKxS,GACzDkS,EAAgB3R,QAAU,CAACP,EAAK7B,MAAO6B,EAAKkK,KAC5CiI,SAGL,IAGC,8BACI,eAAC3L,EAAA,EAAD,CACIC,WAAS,EACTqI,UAAU,MACVC,QAAQ,gBACRC,WAAW,aAJf,UAMI,cAACxI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAAC,EAAD,CACI7B,UAAWA,EACXmB,MACI,CACItK,MAAO,OACPF,OAAQ,SAKxB,cAAC8K,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACwJ,GAAD,CACIrL,UAAW+M,EACX5L,MACI,CACItK,MAAO,OACPF,OAAQ,SAKxB,cAAC8K,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACgL,GAAD,CACI7M,UAAWA,EACXmB,MACI,CACItK,MAAO,OACPF,OAAQ,SAKxB,cAAC8K,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACiK,GAAD,CACI9L,UAAW+M,EACX5L,MACI,CACItK,MAAO,OACPF,OAAQ,c,aCpHzB,SAAS+W,GAASC,GAC7B,IAAMjX,EAAQ,CAAC,UACX,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAwMJ,OAAOA,GAvMQ,CACX,cACA,cACA,6BACA,SACA,QACA,YACA,iCACA,WACA,uBACA,iBACA,gBACA,2BACA,iBACA,iBACA,cACA,oBACA,eACA,qBACA,SACA,6BACA,kBACA,UACA,kBACA,6BACA,YACA,YACA,2BACA,mBACA,YACA,yBACA,kBACA,mBACA,eACA,OACA,eACA,aACA,2BACA,wBACA,gBACA,uBACA,eACA,8BACA,sBACA,4BACA,kBACA,oBACA,sBACA,sBACA,kBACA,YACA,oBACA,uBACA,aACA,mBACA,QACA,mBACA,yBACA,uBACA,4BACA,eACA,4BACA,iBACA,8BACA,aACA,sBACA,4BACA,wBACA,4BACA,aACA,wBACA,cACA,wBACA,YACA,qBACA,wBACA,gBACA,eACA,0BACA,cACA,KACA,gBACA,0BACA,+BACA,WACA,kCACA,mBACA,cACA,iCACA,+BACA,6BACA,cACA,SACA,wBACA,iBACA,aACA,kCACA,cACA,GACA,0BACA,yCACA,QACA,+BACA,oCACA,wCACA,aACA,OACA,qDACA,wCACA,aACA,OACA,uBACA,0BACA,kCACA,sBACA,2BACA,kCACA,4BACA,6BACA,yBACA,6BACA,mDACA,iCACA,mFACA,2BACA,0CACA,sBACA,mDACA,gCACA,kCACA,mBACA,wBACA,OACA,mBACA,sBACA,gCACA,8BACA,2BACA,0CACA,qCACA,iDACA,yBACA,mCACA,0BACA,uBACA,oBACA,gCACA,uBACA,gCACA,kBACA,0BACA,uBACA,mCACA,wBACA,2FACA,4BACA,6DACA,MACA,uCACA,mBACA,kBACA,kDACA,wCACA,iDACA,qBACA,gBACA,6BACA,iBACA,6BACA,sCACA,6BACA,wBACA,qFACA,oCACA,4BACA,4BACA,8BACA,yBACA,wBACA,qCACA,oBACA,6CACA,iBACA,UACA,gDACA,2BACA,2BACA,mBACA,iDACA,oBACA,kCACA,kBACA,kDACA,4DACA,0BAIiB8C,QAAQmU,GAAO,GACfjX,EAAMiD,QCtMhB,SAASiU,GAAkBrT,GACtC,IAAMC,EAAMC,iBAAOC,IAAKC,MAClBkT,EAAQpT,iBAAO,MACfG,EACM,EAENkT,EAAgB,SAACC,GACnB,IAAMC,EAAW,GACXC,EAAa,GACfC,EAAW,EACTC,EAAW,GACjB,IAAK,IAAI3F,KAASuF,EAASK,aAEvBJ,EAAS/V,KACL,CACIsD,MAAOwS,EAASK,aAAa5F,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","file":"static/js/main.8d46e3e5.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect, useRef, useLayoutEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as echarts from 'echarts';\r\nimport 'echarts-gl';\r\nimport uuid from \"uuid\"\r\nimport { use } from 'echarts';\r\nimport PubSub from 'pubsub-js'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport LinearScaleIcon from '@material-ui/icons/LinearScale';\r\nimport GrainIcon from '@material-ui/icons/Grain';\r\nimport PanoramaVerticalIcon from '@material-ui/icons/PanoramaVertical';\r\nimport WifiTetheringIcon from '@material-ui/icons/WifiTethering';\r\nimport LabelOffIcon from '@material-ui/icons/LabelOff';\r\nimport LabelIcon from '@material-ui/icons/Label';\r\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\r\n//论文之间引用关系图\r\nconst PrettoSlider = withStyles({\r\n    root: {\r\n        color: '#52af77',\r\n        height: 8,\r\n    },\r\n    thumb: {\r\n        height: 24,\r\n        width: 24,\r\n        backgroundColor: '#fff',\r\n        border: '2px solid currentColor',\r\n        marginTop: -8,\r\n        marginLeft: -12,\r\n        '&:focus, &:hover, &$active': {\r\n            boxShadow: 'inherit',\r\n        },\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n        left: 'calc(-50% + 4px)',\r\n    },\r\n    track: {\r\n        height: 8,\r\n        borderRadius: 4,\r\n    },\r\n    rail: {\r\n        height: 8,\r\n        borderRadius: 4,\r\n    },\r\n})(Slider);\r\nconst crerateGraph = (paperList) => {//从论文数据 创建图 返回包括  点列表 边列表 数据映射\r\n    //论文数组固定格式\r\n    //现在的创建图函数 \r\n    //使用论文作为节点 引用关系代表存在边 是有向图\r\n    //会有多版图创建函数 并由用户自行选择或者每个图标按需选择\r\n    var nodes = []\r\n    var edges = []\r\n    paperList.forEach((paper, index) => {\r\n        nodes.push(index)\r\n    })\r\n\r\n    const DOI2Paper = {}\r\n\r\n    paperList.forEach((currentPaper, currentIndex) => {\r\n        DOI2Paper[currentPaper[\"DOI\"]] = [currentPaper, currentIndex]\r\n    })\r\n\r\n\r\n\r\n    const graphTest = {}\r\n\r\n\r\n\r\n\r\n    paperList.forEach((currentPaper, currentIndex) => {\r\n\r\n        let InternalReferences = Array.from(new Set(currentPaper.InternalReferences.split(\";\")))\r\n        graphTest[currentIndex] = []\r\n        InternalReferences.forEach(DOI => {\r\n            const refEdPaper = DOI2Paper[DOI]\r\n            if (refEdPaper !== undefined) {\r\n                // edges.push([currentPaper.Title, refEdPaper[0].Title, currentPaper, refEdPaper[0]])\r\n                graphTest[currentIndex].push(refEdPaper[1])\r\n            }\r\n        })\r\n    })\r\n\r\n    // console.log(JSON.stringify(graphTest))\r\n\r\n    const getCirs = (graph) => {//计算 去除存在的环\r\n        let ans = new Set()\r\n        const dfs = (graph, trace, start) => {\r\n            trace = JSON.parse(JSON.stringify(trace))\r\n            if (trace.indexOf(start) !== -1) {\r\n                const index = trace.indexOf(start)\r\n                let tmp = []\r\n                for (let i = index; i < trace.length; i++) {\r\n                    tmp.push(trace[i])\r\n                }\r\n                ans.add(JSON.stringify(tmp))\r\n                return\r\n            }\r\n            trace.push(start)\r\n            for (let i of graph[start]) {\r\n                dfs(graph, trace, i)\r\n            }\r\n        }\r\n        for (let startNode in graph) {\r\n            dfs(graph, [], startNode)\r\n        }\r\n        const result = []\r\n        for (let cir of ans) {\r\n            result.push(JSON.parse(cir))\r\n        }\r\n        return result\r\n    }\r\n\r\n    const needDisConnect = new Set()\r\n\r\n    // console.log(getCirs(graphTest))\r\n\r\n\r\n    getCirs(graphTest).forEach(cirArray => {\r\n        needDisConnect.add(cirArray[0] + \"-\" + cirArray[1]) //index1-index2 \r\n    })\r\n\r\n    for (let source in graphTest) {\r\n        for (let target of graphTest[source]) {\r\n            if (!needDisConnect.has(source + \"-\" + target)) {\r\n                edges.push([paperList[source].Title, paperList[target].Title, paperList[source], paperList[target]])\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return {\r\n        nodes: nodes,\r\n        edges: edges,\r\n        datamap: paperList\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default function CircularGraph(props) {\r\n    const UID = useRef(uuid.v1())\r\n\r\n    const visualConfig = useRef({\r\n        maxSymbolSize: 100,\r\n        seriesNum: 6\r\n    })\r\n\r\n    var myChart = useRef(null)\r\n\r\n    const initGraph = () => {\r\n        myChart.current = echarts.init(document.getElementById(UID.current), \"default\")\r\n    }\r\n\r\n    const initOption = (data) => {\r\n\r\n        let nodes = []\r\n        let links = []\r\n        let sizeMap = {}//被引用次数\r\n        let maxRef = 1//最多引用次数的论文\r\n\r\n        const linkedNodes = new Set()//筛选无引用关系的论文\r\n\r\n        data.edges.forEach(edge => {\r\n            // links.push(\r\n            //     {\r\n            //         \"source\": edge[0],\r\n            //         \"target\": edge[1],\r\n            //     }\r\n            // )\r\n\r\n            links.push(\r\n                {\r\n                    source: edge[1],\r\n                    target: edge[0],\r\n                    value: 1\r\n                }\r\n            )\r\n\r\n            linkedNodes.add(edge[0])\r\n            linkedNodes.add(edge[1])\r\n            if (sizeMap[edge[1]] == undefined) {\r\n                sizeMap[edge[1]] = 1\r\n            } else {\r\n                sizeMap[edge[1]] += 1\r\n                if (sizeMap[edge[1]] > maxRef) {\r\n                    maxRef = sizeMap[edge[1]]\r\n                }\r\n            }\r\n        })\r\n\r\n\r\n        data.datamap.forEach((paper, index) => {\r\n            if (linkedNodes.has(paper.Title)) {\r\n                nodes.push(\r\n                    {\r\n\r\n                        \"name\": paper.Title,\r\n                        \"paper\": paper,\r\n                        \"index\": index,\r\n                        \"symbolSize\": visualConfig.current.maxSymbolSize * (sizeMap[paper.Title] || 0) / (maxRef * 0.7) + maxRef * 0.3,\r\n                        \"category\": Math.round(((sizeMap[paper.Title] || 0) * visualConfig.current.seriesNum) / maxRef),\r\n                        // \"depth\":Number(paper.Year)-1990\r\n                    }\r\n                )\r\n            }\r\n\r\n        })\r\n\r\n\r\n\r\n        var graph = {\r\n            \"nodes\": nodes,\r\n            \"links\": links\r\n        }\r\n\r\n\r\n        var categories = [];\r\n        const steep = maxRef / visualConfig.current.seriesNum\r\n        for (var i = 0; i < visualConfig.current.seriesNum; i++) {\r\n            categories[i] = {\r\n                name: Math.round(i * steep) + \"~\" + Math.round((i + 1) * steep)\r\n            };\r\n        }\r\n\r\n        const option = {\r\n            title: {\r\n                text: '引用关系',\r\n            },\r\n            legend: [{\r\n                data: categories.map(function (a) {\r\n                    return a.name;\r\n                })\r\n            }],\r\n            tooltip: {\r\n                position: function (pos, params, dom, rect, size) {\r\n                    // 鼠标在左侧时 tooltip 显示到右侧，鼠标在右侧时 tooltip 显示到左侧。\r\n                    // var obj = { top: 60 };\r\n                    let obj = { letf: 5 }\r\n                    // obj[['left', 'right'][+(pos[0] < size.viewSize[0] / 2)]] = 5;\r\n                    obj[['top', 'bottom'][+(pos[1] < size.viewSize[1] / 2)]] = 5;\r\n                    return obj;\r\n                },\r\n\r\n                formatter: function (params) {\r\n                    if (params.dataType === 'node') {\r\n\r\n                        let paper = params.data.paper\r\n                        let tooltipLength = Math.max(paper.AuthorNames.length, paper.Title.length)\r\n                        let abstract = \"\"\r\n                        for (let i = 0; i < paper.Abstract.length / tooltipLength; i++) {\r\n                            abstract += (paper.Abstract.substr(i * tooltipLength, tooltipLength) + \"<br/>\")\r\n                            if (i > 8) {\r\n                                abstract += \"...\"\r\n                                break\r\n                            }\r\n                        }\r\n                        return \"标题 : \" + paper.Title + \"<br/>\" +\r\n                            \"年份 : \" + paper.Year + \"<br/>\" +\r\n                            \"作者 : \" + paper.AuthorNames + \"<br/>\" +\r\n                            \"被引频次 \" + (sizeMap[params.data.paper.Title] || 0) + \"<br/>\" +\r\n                            \"摘要 : \" + abstract\r\n                        // return \"paper.Title\"\r\n                    } else if (params.dataType === 'edge') {\r\n                        return params.data.source + \" > \" + params.data.target\r\n                    }\r\n                }\r\n            },\r\n            animationDurationUpdate: 1500,\r\n            animationEasingUpdate: 'quinticInOut',\r\n            series: [\r\n                {\r\n                    focusNodeAdjacency: true,\r\n                    name: '论文标题',\r\n                    type: !check_ref.current ? \"graph\" : \"sankey\",\r\n                    // type: \"sankey\",\r\n                    layout: 'circular',\r\n\r\n                    circular: {\r\n                        rotateLabel: true\r\n                    },\r\n                    data: graph.nodes,\r\n                    links: graph.links,\r\n                    categories: categories,\r\n                    roam: true,\r\n                    label: {\r\n\r\n                        color: \"#000000\",\r\n                        show: false\r\n                    },\r\n                    itemStyle: {\r\n                        normal: { // 默认样式\r\n                            borderType: 'solid', // 图形描边类型，默认为实线，支持 'solid'（实线）, 'dashed'(虚线), 'dotted'（点线）。\r\n                            borderColor: '#000000', // 设置图形边框为淡金色,透明度为0.4\r\n                            borderWidth: 0, // 图形的描边线宽。为 0 时无描边。\r\n                            opacity: 1 // 图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。默认0.5\r\n\r\n                        },\r\n                    },\r\n                    lineStyle: { // ========关系边的公用线条样式。\r\n                        normal: {\r\n                            color: 'source',\r\n                            width: 2, //线的粗细\r\n                            type: 'solid', // 线的类型 'solid'（实线）'dashed'（虚线）'dotted'（点线）\r\n                            curveness: 0.3, // 线条的曲线程度，从0到1\r\n                        },\r\n                        emphasis: { // 高亮状态\r\n\r\n                        }\r\n                    },\r\n                    edgeSymbol: ['none', 'arrow'],\r\n                    edgeSymbolSize: 5,\r\n\r\n                }\r\n            ]\r\n        }\r\n        myChart.current.setOption(option);\r\n\r\n        myChart.current.on(\"click\", { dataType: \"node\" }, (args) => {\r\n            PubSub.publishSync(\"paper_selected\", args.data.index)\r\n        }\r\n        )\r\n\r\n        myChart.current.on(\"mouseover\", { dataType: \"node\" }, (args) => {\r\n\r\n            if (args_data_index_ref.current === args.data.index) {\r\n                return\r\n            } else {\r\n                args_data_index_ref.current = args.data.index\r\n            }\r\n\r\n            const currentPaper = args.data.paper\r\n            const fromOther = []//论文 引用别的\r\n            const toOther = []//论文 被别的引用\r\n            const nodes = [\r\n                {\r\n                    name: \"_head\",\r\n                    value: 100,\r\n                    symbolSize: 0,\r\n                    itemStyle: {\r\n\r\n                        color: \"#ffffff\"\r\n                    },\r\n                    label: {\r\n                        show: false\r\n                    }\r\n                },\r\n                {\r\n                    name: \"_tai\",\r\n                    value: 100,\r\n                    symbolSize: 0,\r\n                    itemStyle: {\r\n\r\n                        color: \"#ffffff\"\r\n                    },\r\n                    label: {\r\n                        show: false\r\n                    }\r\n                },\r\n                {\r\n                    name: currentPaper.Title,\r\n                    itemStyle: {\r\n                        color: \"#512DA8\",\r\n\r\n                    },\r\n                    symbolSize: 20,\r\n                },\r\n            ]\r\n            const links = []\r\n\r\n            const pushTai = (nodename) => {\r\n                nodes.push({\r\n                    name: nodename,\r\n                    itemStyle: {\r\n                        color: \"#0097A7\",\r\n                    },\r\n                    symbolSize: 20,\r\n                })\r\n                links.push({\r\n                    source: nodename,\r\n                    target: \"_tai\",\r\n                    lineStyle: {\r\n                        color: \"#ffffff\",\r\n                        width: 0\r\n                    }\r\n                })\r\n                links.push({\r\n                    source: currentPaper.Title,\r\n                    target: nodename\r\n                })\r\n            }\r\n\r\n            const pushHead = (nodename) => {\r\n                nodes.push({\r\n                    name: nodename,\r\n                    itemStyle: {\r\n                        color: \"#FFC107\",\r\n                    },\r\n                    symbolSize: 20,\r\n                })\r\n                links.push({\r\n                    source: \"_head\",\r\n                    target: nodename,\r\n                    lineStyle: {\r\n                        color: \"#ffffff\",\r\n                        width: 0\r\n                    }\r\n                })\r\n                links.push({\r\n                    source: nodename,\r\n                    target: currentPaper.Title\r\n                })\r\n\r\n            }\r\n\r\n            let InternalReferences = currentPaper.InternalReferences.split(\";\")\r\n            for (let doi of InternalReferences) {\r\n                fromOther.push(doi)\r\n            }\r\n            data.edges.forEach(edge => {\r\n                if (edge[0] === currentPaper.Title) {\r\n                    if (fromOther.indexOf(edge[3][\"DOI\"]) === -1) {\r\n                        fromOther.push(edge[3].Title)//当前文章引用别的的\r\n                    }\r\n\r\n                } else if (edge[1] === currentPaper.Title) {\r\n                    toOther.push(edge[2].Title)\r\n\r\n                }\r\n            })\r\n\r\n            //引用的论文 有重复 数据集问题或者作者的问题\r\n            Array.from(new Set(fromOther)).forEach(nodename => {\r\n                pushHead(nodename)\r\n            })\r\n            Array.from(new Set(toOther)).forEach(nodename => {\r\n                pushTai(nodename)\r\n            })\r\n\r\n            drawSmallView(nodes, links)\r\n\r\n\r\n\r\n            //有的会生成重复节点 看下\r\n        }\r\n        )\r\n\r\n\r\n    }\r\n\r\n    const args_data_index_ref = useRef(\"\")\r\n\r\n    const sub = useRef(null)\r\n\r\n    const handelDataChange = () => {\r\n        if (props.paperData === null) {\r\n            console.log(\"empty\")\r\n        } else {\r\n            initOption(crerateGraph(props.paperData))\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(initGraph, [])\r\n    useEffect(handelDataChange, [props.paperData])\r\n\r\n\r\n    const smallChart = useRef(null)\r\n    const drawSmallView = (nodes, links) => {\r\n        if (smallChart.current === null) {\r\n            smallChart.current = echarts.init(document.getElementById(\"circularSmallView\"), \"default\")\r\n            smallChart.current.setOption(\r\n                {\r\n\r\n                    tooltip: {},\r\n                    series: [\r\n                        {\r\n                            repulsion: [10, 200],\r\n                            type: 'graph',\r\n                            layout: 'force',\r\n                            data: [],\r\n                            links: [],\r\n                            roam: true,\r\n                            label: {\r\n                                position: 'right',\r\n                                show: true,\r\n                                color: \"#000000\",\r\n                                opacity: 0.9\r\n                            },\r\n                            force: {\r\n                                layoutAnimation: false,\r\n                                initLayout: \"circular\"\r\n                            },\r\n\r\n                            lineStyle: {\r\n                                normal: {\r\n                                    width: 3,\r\n                                    color: \"target\"\r\n                                }\r\n                            },\r\n                            edgeSymbolSize: 10,\r\n                            edgeSymbol: ['none', 'arrow'],\r\n                        }\r\n                    ]\r\n                }\r\n            )\r\n        }\r\n\r\n        smallChart.current.clear()\r\n        smallChart.current.setOption(\r\n            {\r\n\r\n                tooltip: {},\r\n                series: [\r\n                    {\r\n                        zoom:3,\r\n                        repulsion: [10, 200],\r\n                        type: 'graph',\r\n                        layout: 'force',\r\n                        data: [],\r\n                        links: [],\r\n                        roam: true,\r\n                        label: {\r\n                            position: 'right',\r\n                            show: true,\r\n                            color: \"#000000\",\r\n                            opacity: 0.9\r\n                        },\r\n                        force: {\r\n                            layoutAnimation: false,\r\n                            initLayout: \"circular\"\r\n                        },\r\n\r\n                        lineStyle: {\r\n                            normal: {\r\n                                width: 3,\r\n                                color: \"target\"\r\n                            }\r\n                        },\r\n                        edgeSymbolSize: 10,\r\n                        edgeSymbol: ['none', 'arrow'],\r\n                    }\r\n                ]\r\n            }\r\n        )\r\n\r\n        smallChart.current.setOption(\r\n            {\r\n                series: [\r\n                    {\r\n                        data: nodes,\r\n                        links: links,\r\n                    }\r\n                ]\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    const check_ref = useRef(false)\r\n    const [check, setcheck] = useState(false)\r\n    const handelCheck = () => {\r\n        // myChart.current.setOption(\r\n        //     {\r\n        //         series: [\r\n        //             {\r\n        //                 type :  ! check?  \"graph\" : \"sankey\"\r\n        //             }]\r\n        //     }\r\n        // )\r\n\r\n        check_ref.current = !check_ref.current\r\n        setcheck(check => !check)\r\n        initOption(crerateGraph(props.paperData))\r\n    }\r\n\r\n    const handleSideerChange_1 = (event, newValue) => {\r\n        setsiderValue_1(newValue);\r\n        myChart.current.setOption(\r\n            {\r\n                series: [\r\n                    {\r\n\r\n                        lineStyle: { // ========关系边的公用线条样式。\r\n                            normal: {\r\n                                curveness: newValue / 50, //曲度\r\n                            }\r\n                        },\r\n\r\n                    }]\r\n            }\r\n        )\r\n    };\r\n    const [siderValue_1, setsiderValue_1] = useState(10)\r\n\r\n    const handleSideerChange_2 = (event, newValue) => {\r\n        setsiderValue_2(newValue);\r\n        visualConfig.current.maxSymbolSize = newValue * 2\r\n        initOption(crerateGraph(props.paperData))\r\n    };\r\n    const [siderValue_2, setsiderValue_2] = useState(50)\r\n\r\n    const [check_lab, setcheck_lab] = useState(false)\r\n    const handelCheck_lab = () => {\r\n        myChart.current.setOption(\r\n            {\r\n                series: [\r\n                    {\r\n\r\n                        label: {\r\n                            color: \"#000000\",\r\n                            show: !check_lab\r\n                        },\r\n                    }\r\n                ]\r\n            }\r\n        )\r\n        setcheck_lab(check_lab => !check_lab)\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ display: \"inline\" }} >\r\n            <div style={{ display: \"inline\" }} >\r\n                <div id={UID.current} style={{\r\n                    width: 1000,\r\n                    height: 840,\r\n                    float: \"left\"\r\n                }} ></div>\r\n            </div>\r\n\r\n            <Paper style={\r\n                {\r\n                    width: 550,\r\n                    height: 840,\r\n                    float: \"right\"\r\n                }\r\n            } elevation={3} >\r\n                <div style={{ width: 550, height: 550 }} id=\"circularSmallView\" >\r\n                </div>\r\n                <Grid\r\n                    container\r\n                    spacing={3}\r\n                // direction=\"column\"\r\n                // justify=\"center\"\r\n                // alignItems=\"flex-start\"\r\n                >\r\n\r\n\r\n                    <Grid item xs={12}>\r\n                        <div style={{ width: 450, marginLeft: 50, display: \"inline-flex\" }}>\r\n                            <Chip\r\n                                icon={<ColorLensIcon />}\r\n                                style={{ width: 100 }}\r\n                                label={check ? \"sankey\" : \"circular\"}\r\n                                color={check ? \"secondary\" : \"primary\"}\r\n                                variant=\"outlined\"\r\n                            />\r\n                            <div style={{ marginLeft: 3 }} >\r\n                                <Switch\r\n                                    checked={check}\r\n                                    onChange={handelCheck}\r\n                                    name=\"checkedA\"\r\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n\r\n\r\n                    <Grid item xs={12}>\r\n                        <div style={{ width: 450, marginLeft: 50, display: \"inline-flex\" }}>\r\n                            <Chip\r\n                                icon={check_lab ? <LabelIcon /> : <LabelOffIcon />}\r\n                                style={{ width: 100 }}\r\n                                label={check_lab ? \"show\" : \"hide\"}\r\n                                color={check_lab ? \"primary\" : \"secondary\"}\r\n                                variant=\"outlined\"\r\n                            />\r\n                            <div style={{ marginLeft: 3 }} >\r\n                                <Switch\r\n                                    checked={check_lab}\r\n                                    onChange={handelCheck_lab}\r\n                                    name=\"checkedA\"\r\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n\r\n\r\n                    <Grid item xs={12} spacing={3}>\r\n                        <Chip\r\n                            icon={<PanoramaVerticalIcon />}\r\n                            style={{ width: 100, marginTop: -21, marginLeft: 50 }}\r\n                            label={\"曲度:\" + siderValue_1 / 50}\r\n                            color={\"primary\"}\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <PrettoSlider style={{ width: 350, marginLeft: 15, color: \"#00796B\" }} min={0} max={50} value={siderValue_1} onChange={handleSideerChange_1} />\r\n                    </Grid>\r\n                    <Grid item xs={12} spacing={3}>\r\n                        <Chip\r\n                            icon={<WifiTetheringIcon />}\r\n                            style={{ width: 100, marginTop: -21, marginLeft: 50 }}\r\n                            label={\"尺寸:\" + siderValue_2 * 2}\r\n                            color={\"primary\"}\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <PrettoSlider style={{ width: 350, marginLeft: 15, color: \"#FF5722\" }} min={0} max={100} value={siderValue_2} onChange={handleSideerChange_2} />\r\n                    </Grid>\r\n\r\n\r\n\r\n                </Grid>\r\n            </Paper>\r\n        </div >\r\n    )\r\n\r\n}","import React, { useState, useEffect, useRef, useLayoutEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as echarts from 'echarts';\r\nimport 'echarts-gl';\r\nimport uuid from \"uuid\"\r\nimport { use } from 'echarts';\r\nimport PubSub from 'pubsub-js'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport LinearScaleIcon from '@material-ui/icons/LinearScale';\r\nimport GrainIcon from '@material-ui/icons/Grain';\r\nimport PanoramaVerticalIcon from '@material-ui/icons/PanoramaVertical';\r\nimport WifiTetheringIcon from '@material-ui/icons/WifiTethering';\r\nimport LabelOffIcon from '@material-ui/icons/LabelOff';\r\nimport LabelIcon from '@material-ui/icons/Label';\r\n\r\n//论文作者之间合作关系\r\nconst PrettoSlider = withStyles({\r\n    root: {\r\n        color: '#52af77',\r\n        height: 8,\r\n    },\r\n    thumb: {\r\n        height: 24,\r\n        width: 24,\r\n        backgroundColor: '#fff',\r\n        border: '2px solid currentColor',\r\n        marginTop: -8,\r\n        marginLeft: -12,\r\n        '&:focus, &:hover, &$active': {\r\n            boxShadow: 'inherit',\r\n        },\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n        left: 'calc(-50% + 4px)',\r\n    },\r\n    track: {\r\n        height: 8,\r\n        borderRadius: 4,\r\n    },\r\n    rail: {\r\n        height: 8,\r\n        borderRadius: 4,\r\n    },\r\n})(Slider);\r\n\r\nconst crerateGraph = (paperList) => {//作者之间有过论文合作 即同一篇论文作者s 则存在边\r\n    let autherPapers = {}//作者的paper  autherPapers[\"jack\"] = [156,258,372,...]\r\n    paperList.forEach((paper, index) => {\r\n        paper[\"AuthorNames-Deduped\"].forEach(name => {\r\n            if (autherPapers[name] === undefined) {\r\n                autherPapers[name] = [index]\r\n            } else {\r\n                autherPapers[name].push(index)\r\n            }\r\n        })\r\n    })\r\n\r\n    let nodes = Object.keys(autherPapers)\r\n    let edgeSet = new Set()\r\n    let edges = []\r\n    nodes.forEach((currentName, currentIndex) => {\r\n        const a = autherPapers[currentName]\r\n        nodes.forEach((name, index) => {\r\n            if (currentIndex < index) {\r\n                const b = autherPapers[name]\r\n                for (let _a of a) {\r\n                    for (let _b of b) {\r\n                        if (_a === _b) {\r\n                            edgeSet.add(`${currentIndex}-${index}`)\r\n                            break\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    })\r\n    edgeSet.forEach(edge => {\r\n        edges.push(edge.split(\"-\"))\r\n    })\r\n    return {\r\n        nodes: nodes,// [name_1,name_2,......]\r\n        edges: edges,//  [  [学者姓名index_1  -> 学者姓名index_2]  , ...]\r\n        autherPapers: autherPapers,//  作者 -> [paper_1_index,paper_2_index,...] \r\n        paperMap: paperList//   paperindex -> {title:...,doi:...,...}\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default function CooperationRelation(props) {\r\n    const UID = useRef(uuid.v1())\r\n    const chart = useRef(null)\r\n    const [loading, setLoading] = useState(false)\r\n    const myChart = useRef(null)\r\n\r\n    const visualConfig = {\r\n        maxSymbolSize: 10,\r\n        maxEdgeWidth: 10,\r\n        seriesNum: 8\r\n    }\r\n\r\n    const createChartDom = () => {\r\n        var chartDom = document.getElementById(UID.current);\r\n        myChart.current = echarts.init(chartDom, \"default\");\r\n        const option = {\r\n            title: {\r\n                text: '合作关系网络',\r\n            },\r\n            tooltip: {},\r\n            legend: [],\r\n            animationDurationUpdate: 1500,\r\n            animationEasingUpdate: 'quinticInOut',\r\n\r\n            series: [\r\n                {\r\n\r\n                    focusNodeAdjacency: true,\r\n                    name: '论文标题',\r\n                    type: 'graph',\r\n                    layout: 'force',\r\n                    force: {\r\n                        repulsion: 100,\r\n                        gravity: 0.3,\r\n                        layoutAnimation: true,\r\n\r\n                    },\r\n                    data: [],\r\n                    links: [],\r\n                    categories: [],\r\n\r\n                    roam: true,\r\n                    label: {\r\n                        color: \"#000000\",\r\n                        show: false\r\n                    },\r\n                    itemStyle: {\r\n                        normal: { // 默认样式\r\n\r\n                            opacity: 1// 图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。默认0.5\r\n\r\n                        },\r\n                        emphasis: { // 高亮状态\r\n\r\n                        }\r\n                    },\r\n                    lineStyle: { // ========关系边的公用线条样式。\r\n                        normal: {\r\n                            color: 'source',\r\n                            width: 2,\r\n                            type: 'solid', // 线的类型 'solid'（实线）'dashed'（虚线）'dotted'（点线）\r\n                            curveness: 0.2, //曲度\r\n                        },\r\n                        emphasis: { // 高亮状态\r\n                        }\r\n                    },\r\n                }\r\n            ]\r\n        }\r\n        myChart.current.setOption(option)\r\n    }\r\n\r\n    const beforeUnmount = () => {\r\n        myChart.current.setOption(\r\n            {\r\n                legend: [],\r\n                series: [\r\n                    {\r\n                        data: [],\r\n                        links: [],\r\n                        categories: [],\r\n                    }\r\n                ]\r\n            }\r\n        )\r\n    }\r\n    const updateChartOption = (data) => {\r\n        let links = []\r\n        let nodes = []\r\n        let nodeSize = {}\r\n        let maxNode = 1\r\n        data.edges.forEach(edge => {\r\n            links.push(\r\n                {\r\n                    \"source\": edge[0],\r\n                    \"target\": edge[1],\r\n                }\r\n            )\r\n            if (nodeSize[edge[0]] === undefined) {\r\n                nodeSize[edge[0]] = 1\r\n            } else {\r\n                nodeSize[edge[0]] += 1\r\n                if (maxNode < nodeSize[edge[0]]) {\r\n                    maxNode = nodeSize[edge[0]]\r\n                }\r\n            }\r\n            if (nodeSize[edge[1]] === undefined) {\r\n                nodeSize[edge[1]] = 1\r\n            } else {\r\n                nodeSize[edge[1]] += 1\r\n                if (maxNode < nodeSize[edge[1]]) {\r\n                    maxNode = nodeSize[edge[1]]\r\n                }\r\n            }\r\n\r\n        })\r\n        data.nodes.forEach((name, index) => {\r\n            nodes.push(\r\n                {\r\n                    \"id\": index,\r\n                    \"name\": name,\r\n                    \"connectedNum\": nodeSize[index],\r\n                    \"symbolSize\": 8,\r\n                    \"attributes\": {\r\n                        \"modularity_class\": 0\r\n                    },\r\n                    // \"label\": {\r\n                    //     \"normal\": {\r\n                    //         \"show\": true\r\n                    //     }\r\n                    // },\r\n                    // \"category\": Math.ceil(Math.random()*visualConfig.seriesNum)\r\n                    category: Math.round(((nodeSize[index] || 0) * visualConfig.seriesNum) / maxNode)\r\n                }\r\n            )\r\n        })\r\n        var graph = {\r\n            \"nodes\": nodes,\r\n            \"links\": links\r\n        }\r\n        var categories = [];\r\n        const steep = maxNode / visualConfig.seriesNum\r\n        for (var i = 0; i < visualConfig.seriesNum - 1; i++) {\r\n            categories[i] = {\r\n                name: Math.ceil(i * steep) + \"~\" + Math.ceil((i + 1) * steep)\r\n            };\r\n        }\r\n        const option = {\r\n            legend: [{\r\n                data: categories.map(function (a) {\r\n                    return a.name;\r\n                })\r\n            }],\r\n            series: [\r\n                {\r\n                    data: graph.nodes,\r\n                    links: graph.links,\r\n                    categories: categories,\r\n                    tooltip: {\r\n                        formatter: function (params) {\r\n                            if (params.dataType === 'node') {\r\n                                return params.data.name + \"</br>\" +\r\n                                    \"合作者数量\" + (params.data.connectedNum === undefined ? 0 : params.data.connectedNum)\r\n                            } else if (params.dataType === 'edge') {\r\n                                const name_s = data.nodes[params.data.source]\r\n                                const name_t = data.nodes[params.data.target]\r\n                                const papers_s = data.autherPapers[name_s]\r\n                                const papers_t = data.autherPapers[name_t]\r\n                                const unicon = papers_s.filter(function (v) {\r\n                                    return papers_t.indexOf(v) !== -1\r\n                                })\r\n                                let cooperation = \"\"\r\n                                for (let paperIndex of unicon) {\r\n                                    cooperation += data.paperMap[paperIndex].Title + \"</br>\"\r\n                                }\r\n                                return cooperation\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n        myChart.current.setOption(option)\r\n        myChart.current.on(\"click\", (args) => {\r\n            if (args.dataType === \"node\") {//论文被选中 \r\n                PubSub.publishSync(\"author_selected\", args.name)\r\n                console.log(args.name)\r\n            } else {//边选中 source->target\r\n                const name_s = data.nodes[args.data.source]\r\n                const name_t = data.nodes[args.data.target]\r\n                const papers_s = data.autherPapers[name_s]\r\n                const papers_t = data.autherPapers[name_t]\r\n                const unicon = papers_s.filter(function (v) {\r\n                    return papers_t.indexOf(v) !== -1\r\n                })\r\n                for (let paperIndex of unicon) {\r\n                    PubSub.publishSync(\"paper_selected\", paperIndex)\r\n                    console.log(paperIndex)\r\n                }\r\n            }\r\n        }\r\n        )\r\n\r\n\r\n        //  return {\r\n        //         nodes: nodes,// [name_1,name_2,......]\r\n        //         edges: edges,//  [  [学者姓名index_1  -> 学者姓名index_2]  , ...]\r\n        //         autherPapers: autherPapers,//  作者 -> [paper_1_index,paper_2_index,...] \r\n        //         paperMap: paperList//   paperindex -> {title:...,doi:...,...}\r\n        //     }\r\n        myChart.current.on(\"mouseover\", { dataType: \"node\", }, (args) => {\r\n            if (args_data_name_ref.current === args) {\r\n                return\r\n            } else {\r\n                args_data_name_ref.current = args\r\n            }\r\n\r\n\r\n            let IDcount = 0\r\n\r\n            const nameDulp = [args.data.name]\r\n\r\n            const nodes = [\r\n                {\r\n                    name: args.data.name,\r\n                    itemStyle: {\r\n\r\n                        color: \"#FF5722\"\r\n                    },\r\n                    symbolSize: 20,\r\n                }\r\n            ]\r\n            const links = []\r\n            const name = args.data.name\r\n            const papers = data.autherPapers[name]\r\n            papers.forEach(paperIndex => {\r\n                nodes.push(\r\n                    {\r\n                        name: data.paperMap[paperIndex].Title,\r\n                        itemStyle: {\r\n                            color: \"#0288D1\"\r\n                        },\r\n                        symbolSize: 10\r\n                    }\r\n                )\r\n                links.push(\r\n                    {\r\n                        source: args.data.name,\r\n                        target: data.paperMap[paperIndex].Title,\r\n                        lineStyle: {\r\n                            color: \"#0288D1\"\r\n                        }\r\n                    }\r\n                )\r\n                data.paperMap[paperIndex][\"AuthorNames-Deduped\"].forEach(auname => {\r\n                    if (nameDulp.indexOf(auname) == -1) {\r\n                        nameDulp.push(auname)\r\n                        nodes.push(\r\n                            {\r\n                                name: auname,\r\n                                itemStyle: {\r\n                                    color: \"#D90051\"\r\n                                },\r\n                                symbolSize: 5\r\n                            }\r\n                        )\r\n                    }\r\n                    links.push(\r\n                        {\r\n                            source: data.paperMap[paperIndex].Title,\r\n                            target: auname,\r\n                            lineStyle: {\r\n                                color: \"#D90051\"\r\n                            }\r\n                        }\r\n                    )\r\n                })\r\n            }\r\n            )\r\n            drawSmall({\r\n                nodes: nodes,\r\n                links: links\r\n            })\r\n        })\r\n    }\r\n    const args_data_name_ref = useRef(\"\")\r\n\r\n    const handelDataChange = () => {\r\n        if (props.paperData === null) {\r\n            console.log(\"empty\")\r\n        } else {\r\n            updateChartOption(crerateGraph(props.paperData))\r\n        }\r\n    }\r\n\r\n    const smallChart = useRef(null)\r\n    const drawSmall = (data) => {\r\n        if (smallChart.current === null) {\r\n            smallChart.current = echarts.init(document.getElementById(\"cooperSmallCardView\"), \"default\");\r\n            smallChart.current.setOption({\r\n                title: {\r\n                    text: ''\r\n                },\r\n                tooltip: {},\r\n                animationDurationUpdate: 1500,\r\n                animationEasingUpdate: 'quinticInOut',\r\n                series: [\r\n                    {\r\n                        zoom:3,\r\n                        focusNodeAdjacency: true,\r\n                        name: '',\r\n                        type: 'graph',\r\n                        layout: 'force',\r\n                        data: [],\r\n                        links: [],\r\n                        roam: true,\r\n                        label: {\r\n                            position: 'right',\r\n                            formatter: '{b}'\r\n                        },\r\n                        force: {\r\n                            layoutAnimation: false\r\n                        },\r\n                        itemStyle: {\r\n                            normal: { // 默认样式\r\n                                label: {\r\n                                    show: true,\r\n                                    color: \"#000000\",\r\n                                    opacity: 0.6\r\n                                },\r\n                                opacity: 1// 图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。默认0.5\r\n\r\n                            },\r\n                            emphasis: { // 高亮状态\r\n                                label: {\r\n                                    show: true,\r\n                                    color: \"#000000\",\r\n                                    opacity: 1\r\n                                },\r\n                            }\r\n                        },\r\n                    }\r\n                ]\r\n            })\r\n        }\r\n        smallChart.current.setOption({\r\n            series: [\r\n                {\r\n                    data: data.nodes,\r\n                    links: data.links,\r\n                }\r\n            ]\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // drawSmall()\r\n        createChartDom()\r\n        return () => {\r\n            beforeUnmount()\r\n        }\r\n    }, [])\r\n\r\n    useEffect(handelDataChange, [props.paperData])\r\n\r\n\r\n\r\n    const [check, setcheck] = useState(true)\r\n    const handelCheck = () => {\r\n        myChart.current.setOption(\r\n            {\r\n                series: [\r\n                    {\r\n\r\n                        layout: !check ? 'force' : 'circular',\r\n                    }]\r\n            }\r\n        )\r\n\r\n        setcheck(check => !check)\r\n\r\n    }\r\n\r\n    const handleSideerChange_1 = (event, newValue) => {\r\n        setsiderValue_1(newValue);\r\n        myChart.current.setOption(\r\n            {\r\n                series: [\r\n                    {\r\n\r\n                        lineStyle: { // ========关系边的公用线条样式。\r\n                            normal: {\r\n                                curveness: newValue / 50, //曲度\r\n                            }\r\n                        },\r\n\r\n                    }]\r\n            }\r\n        )\r\n    };\r\n    const [siderValue_1, setsiderValue_1] = useState(10)\r\n\r\n    const handleSideerChange_2 = (event, newValue) => {\r\n        setsiderValue_2(newValue);\r\n        myChart.current.setOption(\r\n            {\r\n                series: [\r\n                    {\r\n                        force: {\r\n                            gravity: newValue / 50\r\n                        },\r\n                    }]\r\n            }\r\n        )\r\n    };\r\n    const [siderValue_2, setsiderValue_2] = useState(15)\r\n\r\n    const [check_lab, setcheck_lab] = useState(false)\r\n    const handelCheck_lab = () => {\r\n        myChart.current.setOption(\r\n            {\r\n                series: [\r\n                    {\r\n\r\n                        label: {\r\n                            color: \"#000000\",\r\n                            show: !check_lab\r\n                        },\r\n                    }\r\n                ]\r\n            }\r\n        )\r\n\r\n        setcheck_lab(check_lab => !check_lab)\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ display: \"inline\" }} >\r\n            <div style={{ display: loading ? \"none\" : \"inline\" }} >\r\n                <div id={UID.current} style={{\r\n                    width: 1000,\r\n                    height: 840,\r\n                    float: \"left\"\r\n                }} ></div>\r\n            </div>\r\n            <div>\r\n                <div style={{ display: loading ? \"inline\" : \"none\" }}>\r\n                    正在加载....\r\n                </div>\r\n            </div>\r\n            <Paper style={\r\n                {\r\n                    width: 550,\r\n                    height: 840,\r\n                    float: \"right\"\r\n                }\r\n            } elevation={3} >\r\n                <div style={{ width: 550, height: 550 }} id=\"cooperSmallCardView\" >\r\n                </div>\r\n                <Grid\r\n                    container\r\n                    spacing={3}\r\n                // direction=\"column\"\r\n                // justify=\"center\"\r\n                // alignItems=\"flex-start\"\r\n                >\r\n\r\n\r\n                    <Grid item xs={12}>\r\n                        <div style={{ width: 450, marginLeft: 50, display: \"inline-flex\" }}>\r\n                            <Chip\r\n                                icon={<GrainIcon />}\r\n                                style={{ width: 100 }}\r\n                                label={check ? \"force\" : \"circular\"}\r\n                                color={check ? \"primary\" : \"secondary\"}\r\n                                variant=\"outlined\"\r\n                            />\r\n                            <div style={{ marginLeft: 3 }} >\r\n                                <Switch\r\n                                    checked={check}\r\n                                    onChange={handelCheck}\r\n                                    name=\"checkedA\"\r\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n\r\n\r\n                    <Grid item xs={12}>\r\n                        <div style={{ width: 450, marginLeft: 50, display: \"inline-flex\" }}>\r\n                            <Chip\r\n                                icon={check_lab ? <LabelIcon /> : <LabelOffIcon />}\r\n                                style={{ width: 100 }}\r\n                                label={check_lab ? \"show\" : \"hide\"}\r\n                                color={check_lab ? \"primary\" : \"secondary\"}\r\n                                variant=\"outlined\"\r\n                            />\r\n                            <div style={{ marginLeft: 3 }} >\r\n                                <Switch\r\n                                    checked={check_lab}\r\n                                    onChange={handelCheck_lab}\r\n                                    name=\"checkedA\"\r\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                />\r\n\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n\r\n\r\n                    <Grid item xs={12} spacing={3}>\r\n                        <Chip\r\n                            icon={<PanoramaVerticalIcon />}\r\n                            style={{ width: 100, marginTop: -21, marginLeft: 50 }}\r\n                            label={\"曲度:\" + siderValue_1 / 50}\r\n                            color={\"primary\"}\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <PrettoSlider style={{ width: 350, marginLeft: 15, color: \"#00796B\" }} min={0} max={50} value={siderValue_1} onChange={handleSideerChange_1} />\r\n                    </Grid>\r\n                    <Grid item xs={12} spacing={3}>\r\n                        <Chip\r\n                            icon={<WifiTetheringIcon />}\r\n                            style={{ width: 100, marginTop: -21, marginLeft: 50 }}\r\n                            label={\"引力:\" + siderValue_2 / 50}\r\n                            color={\"primary\"}\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <PrettoSlider style={{ width: 350, marginLeft: 15, color: \"#FF5722\" }} min={0} max={50} value={siderValue_2} onChange={handleSideerChange_2} />\r\n                    </Grid>\r\n\r\n\r\n\r\n                </Grid>\r\n            </Paper>\r\n        </div >\r\n\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\n","import React, { useState, useEffect, useRef, useLayoutEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from '../reportWebVitals';\r\nimport * as echarts from 'echarts';\r\nimport 'echarts-gl';\r\nimport uuid from \"uuid\"\r\nimport { use } from 'echarts';\r\nimport PubSub from 'pubsub-js'\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function OverviewGraph(props) {\r\n    const UID = useRef(uuid.v1())\r\n    const myChart = useRef(null)\r\n    const crerateGraph = (paperList) => {\r\n        let minYear = 65536\r\n        let maxYear = 0\r\n        const yearCount = {}\r\n        paperList.forEach((paper) => {\r\n            const year = Number(paper.Year)\r\n            yearCount[year] = yearCount.hasOwnProperty(year) ? yearCount[year] + 1 : 1\r\n            minYear = Math.min(minYear, year)\r\n            maxYear = Math.max(maxYear, year)\r\n        })\r\n        const axis = []\r\n        const value = []\r\n        for (let i = minYear; i <= maxYear; i++) {\r\n            axis.push(i)\r\n            value.push(yearCount.hasOwnProperty(i) ? yearCount[i] : 0)\r\n        }\r\n        return {\r\n            axis: axis,\r\n            value: value\r\n        }\r\n    }\r\n\r\n    const visualConfig = {\r\n        maxSymbolSize: 10,\r\n        maxEdgeWidth: 10,\r\n        seriesNum: 8\r\n    }\r\n\r\n    const reDraw = (data) => {\r\n        var chartDom = document.getElementById(UID.current);\r\n        const option = {\r\n            xAxis: {\r\n                data: data.axis\r\n            },\r\n            series: [\r\n                {\r\n                    data: data.value\r\n                },\r\n\r\n            ],\r\n        };\r\n        myChart.current.setOption(option);\r\n\r\n        myChart.current.on(\"dataZoom\", args => {\r\n            const minYear = Number(data.axis[0])\r\n            const maxYear = Number(data.axis[data.axis.length - 1])\r\n            const yearRange = (maxYear - minYear) / 100\r\n            const start = args.batch ? args.batch[0].start : args.start\r\n            const end = args.batch ? args.batch[0].end : args.end \r\n            PubSub.publishSync('mainPgage_yaer_range_selected', {\r\n                start: Math.round(start * yearRange + minYear),\r\n                end: Math.round(end * yearRange + minYear),\r\n            });\r\n        })\r\n    }\r\n\r\n    const handelDataChange = () => {\r\n        if (props.paperData === null) {\r\n            console.log(\"empty\")\r\n        } else {\r\n            reDraw(crerateGraph(props.paperData))\r\n        }\r\n    }\r\n\r\n    const createEchartDiv = () => {\r\n        var chartDom = document.getElementById(UID.current);\r\n        myChart.current = echarts.init(chartDom,\"default\");\r\n        const option = {\r\n            title: {\r\n                text: '论文发表数-年份'\r\n            },\r\n            tooltip: {\r\n                trigger: 'axis'\r\n            },\r\n            legend: {\r\n                data: []\r\n            },\r\n            grid: {\r\n                left: '3%',\r\n                right: '4%',\r\n                bottom: '3%',\r\n                containLabel: true\r\n            },\r\n\r\n            xAxis: {\r\n                type: 'category',\r\n                boundaryGap: false,\r\n                data: [],\r\n\r\n            },\r\n            yAxis: {\r\n                type: 'value'\r\n            },\r\n            series: [\r\n                {\r\n                    name: '论文发表数',\r\n                    type: 'bar',\r\n                    data: [],\r\n                    itemStyle: {\r\n                        normal: {\r\n                            color: \"#0288D1\"\r\n                        }\r\n                    }\r\n                },\r\n\r\n            ],\r\n            dataZoom: [\r\n                {\r\n                    show: true,\r\n                    realtime: true,\r\n                    start: 0,\r\n                    end: 100,\r\n                    xAxisIndex: [0, 1]\r\n                },\r\n                {\r\n                    type: 'inside',\r\n                    realtime: true,\r\n                    start: 0,\r\n                    end: 100,\r\n                    xAxisIndex: [0, 1]\r\n                }\r\n            ],\r\n        };\r\n        myChart.current.setOption(option);\r\n    }\r\n\r\n    useEffect(createEchartDiv, [])\r\n\r\n    useEffect(handelDataChange, [props.paperData])\r\n    return (\r\n        <div id={UID.current} style={props.style}>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n","import React, { useState,useEffect, useRef, useLayoutEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as echarts from 'echarts';\r\nimport 'echarts-gl';\r\nimport uuid from \"uuid\"\r\nimport { use } from 'echarts';\r\nimport PubSub from 'pubsub-js'\r\n\r\n//用于动态添加节点的图 \r\nconst crerateGraph = (paperList) => {//作者之间有过论文合作 即同一篇论文作者s 则存在边\r\n    let autherPapers = {}//作者的paper  autherPapers[\"jack\"] = [156,258,372,...]\r\n    let papers = []//作者 [0,1,2,3,4,5,6,7,8,9,...]\r\n    let paperAuthers = [] //[[论文下标],[],[],[],...]//与作者一一对应\r\n    paperList.forEach((paper,index) => {\r\n        papers.push(papers.length)\r\n        paper[\"AuthorNames-Deduped\"].forEach( (name) => {\r\n            if(autherPapers[name] === undefined){\r\n                autherPapers[name] = [index]\r\n            }else{\r\n                autherPapers[name].push(index)\r\n            }\r\n        } )\r\n\r\n    })\r\n    \r\n    let nodes  = Object.keys(autherPapers)\r\n    let edgeSet = new Set()\r\n    let edges = []\r\n    \r\n    paperList.forEach((paper,index) => {\r\n        const autherTmp = []\r\n        paper[\"AuthorNames-Deduped\"].forEach( (name) => {\r\n            autherTmp.push(nodes.indexOf(name))\r\n        })\r\n        paperAuthers.push(autherTmp)\r\n    })\r\n    \r\n    \r\n    nodes.forEach( (currentName,currentIndex) => {\r\n        const a = autherPapers[currentName]\r\n        nodes.forEach( (name,index) => {\r\n            if( currentIndex < index){\r\n                const b = autherPapers[name]\r\n                for( let _a of a){\r\n                    for( let _b of b){\r\n                        if( _a === _b){\r\n                            edgeSet.add(  `${currentIndex}-${index}`  )\r\n                            break\r\n                        }\r\n                    }   \r\n                }\r\n            }\r\n        })    \r\n    })\r\n    edgeSet.forEach( edge => {\r\n        edges.push(edge.split(\"-\"))\r\n    } )\r\n    return {\r\n        authers:nodes,// [name_1,name_2,......]\r\n        autherPapers:autherPapers,//  作者 -> [paper_1_index,paper_2_index,...] \r\n        papers:papers, //[0,1,2,3,4,5,6,7,8,9, ...]\r\n        paperAuthers:paperAuthers,//[[论文下标],[],[],[],...]//与作者一一对应\r\n        paperMap:paperList//   paperindex -> {title:...,doi:...,...}\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function DynamicDiscovery(props){\r\n    const UID = useRef(uuid.v1())\r\n    \r\n    const visualConfig = {\r\n        symbolSize:40,\r\n        maxSymbolSize:40,\r\n        seriesNum:6\r\n    }\r\n\r\n    const usingNode = useRef([])//仅存放ID\r\n    const tmpNode = useRef([])//实时生成图 避免复杂连接关系\r\n\r\n    const initOption = ( initNode  ) => {\r\n            const data = graphData.current\r\n            //作者节点 id = index + data.papers.length\r\n            //论文节点 id = index\r\n\r\n            usingNode.current = []\r\n            tmpNode.current = []\r\n            \r\n            const createAutherNode = (autherIndex) =>{\r\n                return {\r\n                    \"id\": autherIndex + data.papers.length,\r\n                    \"name\":data.authers[autherIndex],\r\n                    \"type\":\"auther\",\r\n                    \"symbolSize\":  visualConfig.symbolSize,\r\n                    // \"category\": 0\r\n                    \"itemStyle\": {\r\n                        \"color\": '#E91E63'\r\n                    }\r\n                }\r\n            }\r\n\r\n            const createPaperNode = (paperIndex) =>{\r\n                // console.log(\"createPaperNode\",paperIndex,data.paperMap.length,data.paperMap[paperIndex])\r\n                return {\r\n                    \"id\": paperIndex,\r\n                    \"name\":data.paperMap[paperIndex].Title,\r\n                    \"type\":\"paper\",\r\n                    \"symbolSize\":  visualConfig.symbolSize,\r\n                    // \"category\": 1\r\n                    \"itemStyle\": {\r\n                        \"color\": '#40B27D'\r\n                    }\r\n                \r\n                }\r\n            }\r\n            const createEdge = (source,target) => {\r\n                return {\r\n                    source:source+\"\",\r\n                    target:target+\"\"\r\n                }\r\n            }\r\n\r\n            const contains = (id) => {\r\n                return tmpNode.current.indexOf(id) !== -1 || usingNode.current.indexOf(id) !== -1\r\n            }\r\n\r\n\r\n            const addNode = (id) => {//不判断作者与论文\r\n                tmpNode.current.push(id)\r\n            }\r\n\r\n            \r\n            const connectedGraph = ( ...args ) => {\r\n                const nodes = []\r\n                const edges = []\r\n                const existedID = []\r\n \r\n                \r\n                usingNode.current.forEach( (saveid) => {\r\n                        existedID.push(saveid)\r\n                        \r\n                        // console.log(\"saveid\",saveid,\"data.papers.length\",data.papers.length)\r\n\r\n                        if( saveid >= data.papers.length ){\r\n                            nodes.push( createAutherNode(saveid - data.papers.length) )\r\n                        }else{\r\n                            nodes.push( createPaperNode(saveid))\r\n                        }        \r\n                    }\r\n                )\r\n\r\n                tmpNode.current.forEach( (saveid) => {\r\n\r\n                        // console.log(\"saveid\",saveid,\"data.papers.length\",data.papers.length)\r\n                    \r\n                        existedID.push(saveid)\r\n                        if( saveid >= data.papers.length ){\r\n                            nodes.push( createAutherNode(saveid - data.papers.length)  )\r\n                        }else{\r\n                            nodes.push(createPaperNode(saveid))\r\n                        }        \r\n                    }\r\n                )\r\n\r\n\r\n                const nodeSize = {}\r\n                \r\n                nodes.forEach( (currentNode) => {\r\n                        if( currentNode.type === \"paper\" ){\r\n                            const currentIndex = Number(currentNode.id)\r\n                            data.paperAuthers[currentIndex].forEach( (autherIndex) => {\r\n                                    const tid = autherIndex + data.papers.length\r\n                                    if( existedID.indexOf(tid) !== -1 ){\r\n                                        edges.push(createEdge(currentIndex,tid))\r\n                                        nodeSize[currentIndex] = nodeSize[currentIndex] === undefined ? 1 :nodeSize[currentIndex]+1\r\n                                        nodeSize[tid] = nodeSize[tid] === undefined ? 1 :nodeSize[tid]+1 \r\n                                    }\r\n                                }\r\n                            )\r\n                        }else{\r\n                            const currentIndex = Number(currentNode.id) - data.papers.length\r\n                            const currentName = data.authers[currentIndex] \r\n                            data.autherPapers[currentName].forEach(  (paperIndex) => {\r\n                                    if( existedID.indexOf(paperIndex) !== -1 ){\r\n                                        edges.push(createEdge(currentIndex,paperIndex))\r\n                                        nodeSize[currentIndex] = nodeSize[currentIndex] === undefined ? 1 :nodeSize[currentIndex]+1\r\n                                        nodeSize[paperIndex] = nodeSize[paperIndex] === undefined ? 1 :nodeSize[paperIndex]+1 \r\n                                    }\r\n                                }\r\n                            )\r\n                        }    \r\n                    }\r\n                )\r\n                \r\n\r\n                let maxSize = -1\r\n                let miniSize = 65536\r\n                Object.keys(nodeSize).forEach( (k) => {\r\n                    maxSize = Math.max( maxSize ,nodeSize[k] )\r\n                    miniSize = Math.min( miniSize ,nodeSize[k] )\r\n                }  )\r\n                \r\n                if(nodes.length === 1){\r\n                    nodes[0].symbolSize = visualConfig.maxSymbolSize / 2\r\n                }else{\r\n                    for(let i = 0 ; i < nodes.length ; i++){\r\n                        nodes[i].symbolSize = Math.ceil(\r\n                                ( \r\n                                    ( nodeSize[nodes[i].id] - miniSize ) / \r\n                                    (maxSize - miniSize)\r\n                                )* \r\n                                (visualConfig.maxSymbolSize / 2) + \r\n                                visualConfig.maxSymbolSize / 2\r\n                            )\r\n                    }\r\n                }\r\n\r\n\r\n                if( args.length === 1 ){\r\n                    const selectIndex = Number(args[0]) //选中的节点  高亮与其相关的节点\r\n                    const hlIDs = [selectIndex]//需要高亮的ID\r\n                    edges.forEach( (edge) => {\r\n                        if( Number(edge.source) ===  selectIndex){\r\n                            hlIDs.push(Number(edge.target))\r\n                        }else if(Number(edge.target) ===  selectIndex){\r\n                            hlIDs.push(Number(edge.source))\r\n                        }\r\n                    }\r\n                    )\r\n                    for(let i = 0 ; i < nodes.length ; i++){\r\n                        if(hlIDs.indexOf(nodes[i].id) !== -1 ){\r\n                            nodes[i].label = {\r\n                                show: true\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    nodes:nodes,\r\n                    links:edges\r\n                }\r\n            }\r\n\r\n            const persistenceTmp = () => {\r\n                tmpNode.current.forEach( (sid) => {usingNode.current.push(sid)} )\r\n                tmpNode.current = []\r\n            }\r\n\r\n\r\n            var chartDom = document.getElementById(UID.current);\r\n            var myChart = echarts.init(chartDom,\"default\");\r\n            myChart.clear()\r\n\r\n\r\n\r\n            if( initNode !== undefined ){\r\n                if( initNode.type ===  \"paper\"){\r\n                    addNode(initNode.index)\r\n                    \r\n                }else{\r\n                    addNode(initNode.index + data.papers.length )\r\n                }\r\n                persistenceTmp()\r\n            }\r\n\r\n            \r\n\r\n            var categories = [\r\n                {name:  \"作者\"},\r\n                {name:  \"论文\"}\r\n            ];\r\n\r\n            const option = {\r\n                animationDurationUpdate: 1500,\r\n                animationEasingUpdate: 'quinticInOut',\r\n                \r\n                series: [\r\n                    {\r\n                        type: 'graph',\r\n                        layout: 'circular',\r\n                        animation: true,\r\n                        focusNodeAdjacency: true,\r\n                        data: connectedGraph().nodes,\r\n                        force: {\r\n                            repulsion: 100,\r\n                            edgeLength: 5\r\n                        },\r\n                        edges: connectedGraph().links,\r\n                        categories: categories,\r\n                        itemStyle: { \r\n                            \r\n                            normal: { // 默认样式\r\n                                label: {\r\n                                    show: false,\r\n                                    position: 'top',\r\n                                    formatter: function(params) {\r\n                                        return params.data.name\r\n                                    },\r\n                                    textStyle: {\r\n                                        color: '#333'\r\n                                    }\r\n                                },\r\n                               \r\n                                opacity: 1 // 图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形。默认0.5\r\n\r\n                            },\r\n                            emphasis: { // 高亮状态\r\n\r\n                            }\r\n                        },\r\n                        \r\n                        lineStyle: { // ========关系边的公用线条样式。\r\n                            normal: {\r\n                                color: '#000000',\r\n                                width: '1', //线的粗细\r\n                                type: 'solid', // 线的类型 'solid'（实线）'dashed'（虚线）'dotted'（点线）\r\n                                curveness: 0.3, // 线条的曲线程度，从0到1\r\n                            },\r\n                            emphasis: { // 高亮状态\r\n\r\n                            }\r\n                        },\r\n                    }\r\n                ],\r\n                \r\n            }\r\n\r\n            myChart.setOption(option);\r\n            \r\n            //作者节点 id = index + data.papers.length\r\n            //论文节点 id = index\r\n            const onAuther = (autherNodeIndex) => {\r\n                let flag = false\r\n                const autherIndex = autherNodeIndex - data.papers.length\r\n                const autherName = data.authers[autherIndex]\r\n                const autherPapers = data.autherPapers[autherName]\r\n                autherPapers.forEach(  (paperIndex) => {\r\n                        if( contains(paperIndex) === false ){\r\n                            flag = true\r\n                            addNode(paperIndex)\r\n                        }\r\n                    }\r\n                )\r\n                return flag\r\n            }//会有很多次触发\r\n            const onPaper = (paperIndex) => {\r\n                let flag = false\r\n                const authers = data.paperAuthers[paperIndex]\r\n                authers.forEach( (autherIndex) => {\r\n                    const newNodeIndex = autherIndex + data.papers.length\r\n                    if( contains(newNodeIndex) === false ){\r\n                        flag = true\r\n                        addNode(newNodeIndex)\r\n                    }   \r\n                })\r\n                return flag\r\n            }\r\n\r\n            myChart.on( \"mouseover\", (args) => {\r\n                if(args.dataType === \"node\"){\r\n                    let flag = false\r\n                    if(args.data.type === \"auther\") {\r\n                        flag = onAuther(args.data.id)\r\n                    }else{\r\n                        flag = onPaper(args.data.id)\r\n                    }\r\n                    const graphTmpData = connectedGraph(args.data.id)\r\n                        myChart.setOption(\r\n                            {\r\n                                series: [\r\n                                {\r\n                                    data: graphTmpData.nodes,\r\n                                    edges: graphTmpData.links\r\n                                }\r\n                            ]\r\n                        })\r\n                }  \r\n            })\r\n\r\n            myChart.on( \"mouseout\", (args) => {\r\n                tmpNode.current = []\r\n                const graphTmpData = connectedGraph()\r\n                myChart.setOption(\r\n                        {\r\n                            series: [\r\n                            {\r\n                                data: graphTmpData.nodes,\r\n                                edges: graphTmpData.links\r\n                            }\r\n                        ]\r\n                    })\r\n                }\r\n            )\r\n            myChart.getZr().on( \"click\",(args) => {\r\n                    if(tmpNode.current.length !== 0) {\r\n                        \r\n                        const graphTmpData = connectedGraph()\r\n                            myChart.setOption(\r\n                                {\r\n                                    series: [\r\n                                    {\r\n                                        data: graphTmpData.nodes,\r\n                                        edges: graphTmpData.links\r\n                                    }\r\n                                ]\r\n                            })\r\n                        persistenceTmp()\r\n                    }else{\r\n                        console.log(\"点击事件 但并没有数据\")\r\n                    }    \r\n                }\r\n            )\r\n        }\r\n        \r\n    const graphData = useRef(null) \r\n    const initNode = useRef({\r\n                    type:\"paper\",\r\n                    index:-1\r\n                })\r\n    const handelDataChange =  () =>{\r\n        if(props.paperData === null || props.paperData.length === 0 ){\r\n            console.log(\"empty\")\r\n        }else{\r\n            graphData.current = crerateGraph(props.paperData)\r\n            console.log(\"初始化的图\",graphData.current)\r\n            if( props.type === \"paper\" ){\r\n                initNode.current = {\r\n                    type:\"paper\",\r\n                    index:Number(props.first)\r\n                }\r\n                initOption(initNode.current)\r\n            } else{\r\n                initNode.current = {\r\n                    type:\"author\",\r\n                    index:graphData.current.authers.indexOf(props.first)\r\n                }\r\n                initOption(initNode.current)\r\n            }\r\n            console.log(\"console.log(props)\",props)\r\n            \r\n            // PubSub.subscribe( 'paper_selected', (msg,args) => {//选中论文 json文件的index \r\n            //     if(initNode.current.index !== args){\r\n            //     initNode.current = {\r\n            //         type:\"paper\",\r\n            //         index:args\r\n            //     }\r\n            //     initOption(initNode.current)\r\n                \r\n            //     }\r\n            // })\r\n            \r\n            // PubSub.subscribe( 'author_selected', (msg,args) => {//选中作者 name ?\r\n            //     if(initNode.current.index !== args){\r\n            //     initNode.current = {\r\n            //         type:\"author\",\r\n            //         index:graphData.current.authers.indexOf(args)\r\n            //     }\r\n            //     initOption(initNode.current)\r\n            //     }\r\n            // })\r\n\r\n        }   \r\n    }\r\n    \r\n    const subToken = useRef(null)\r\n\r\n    useEffect(handelDataChange) // type = paper/author first = paperIndex(paper)/nameString(author)\r\n    return(<div id={UID.current} style={props.style}></div> )\r\n\r\n}","import Chip from '@material-ui/core/Chip';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport cx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport TextInfoContent from '@mui-treasury/components/content/textInfo';\r\nimport { useN01TextInfoContentStyles } from '@mui-treasury/styles/textInfoContent/n01';\r\nimport { useWideCardMediaStyles } from '@mui-treasury/styles/cardMedia/wide';\r\nimport { useFadedShadowStyles } from '@mui-treasury/styles/shadow/faded';\r\nimport React, { useState, useEffect, useRef, useLayoutEffect } from 'react';\r\nimport PubSub from 'pubsub-js'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\n\r\nconst width = 950\r\nconst height = 800\r\n\r\nconst widthaddbar = width+10\r\nconst heightsubtop = height-40\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: 'auto',\r\n        width: width,\r\n        maxHeight: height,\r\n        overflow: \"hiden\",\r\n    },\r\n    scrollpart: {\r\n        width: widthaddbar,\r\n        maxHeight: heightsubtop,\r\n        overflow: \"scroll\",\r\n    },\r\n    content: {\r\n        padding: 24,\r\n    },\r\n    Box: {\r\n        '& > *': {\r\n            margin: theme.spacing(0.5),\r\n        },\r\n    },\r\n    headimg: {\r\n        width: '100%',\r\n        height: 300,\r\n    }\r\n}));\r\n\r\nexport default function PaperInfo(props) {\r\n\r\n    const [paperData, setPaperData] = useState({\r\n        \"Conference\": \"\",\r\n        \"Year\": \"\",\r\n        \"Title\": \"\",\r\n        \"DOI\": \"\",\r\n        \"Link\": \"\",\r\n        \"FirstPage\": 0,\r\n        \"LastPage\": 0,\r\n        \"PaperType\": \"\",\r\n        \"Abstract\": \"\",\r\n        \"AuthorNames-Deduped\": [],\r\n        \"AuthorNames\": \"\",\r\n        \"AuthorAffiliation\": \"\",\r\n        \"InternalReferences\": \"\",\r\n        \"AuthorKeywords\": \"\",\r\n        \"AminerCitationCount_02-2019\": 0,\r\n        \"XPloreCitationCount_02-2019\": 0,\r\n        \"PubsCited\": 0,\r\n        \"Award\": \"\"\r\n    })\r\n\r\n\r\n\r\n    const cardStyles = useStyles();\r\n    const wideCardMediaStyles = useWideCardMediaStyles();\r\n    const fadeShadowStyles = useFadedShadowStyles();\r\n    const textCardContentStyles = useN01TextInfoContentStyles();\r\n\r\n    useEffect(() => {\r\n        if (props.data !== null) {\r\n            setPaperData(props.data)\r\n        }\r\n    }, [props.data])\r\n\r\n    const goto_dynamic = (type,args) => {\r\n        window.location.href = `/#/DynamicDiscoveryMode/${type}/${args}`\r\n    }\r\n\r\n    return (\r\n        <Card className={cx(cardStyles.root, fadeShadowStyles.root)} onClick={ (e) => {e.stopPropagation()}}>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-between\"\r\n                alignItems=\"flex-start\"\r\n            >\r\n                <IconButton\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                        PubSub.publish(\"float_window_close_card\", \"\")\r\n                    }}\r\n                >\r\n                    <ArrowBackIcon />\r\n                </IconButton>\r\n                <IconButton \r\n                color=\"primary\" \r\n                onClick={() => {\r\n                        goto_dynamic(\"paper\",paperData._index)\r\n                    }}\r\n                    >\r\n                    <MoreVertIcon />\r\n                </IconButton>\r\n            </Grid>\r\n\r\n            <div className={cardStyles.scrollpart}>\r\n                <CardMedia\r\n                    className={cardStyles.headimg}\r\n                    image={\"./img/paper.png\"}\r\n                />\r\n                <CardContent className={cardStyles.content}>\r\n                    <TextInfoContent\r\n                        classes={textCardContentStyles}\r\n                        heading={paperData[\"Title\"]}\r\n                        body={\r\n                            paperData.Abstract//.slice(0, 800) + \"...\"\r\n                        }\r\n                    />\r\n                </CardContent>\r\n                <Box className={cardStyles.Box} px={3} pb={3}>\r\n                    {paperData[\"AuthorNames-Deduped\"].map((row) => (\r\n                        <Chip\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            avatar={<Avatar>{row.slice(0, 1)}</Avatar>}\r\n                            label={row}\r\n                            clickable\r\n                            onClick={\r\n                                () => {\r\n                                    PubSub.publish(\"author_selected\", row)\r\n                                }\r\n                            } />\r\n                    ))}\r\n                </Box>\r\n            </div>\r\n        </Card>\r\n    );\r\n}","import React, { useState, useEffect, useRef, useLayoutEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from '../reportWebVitals';\r\nimport * as echarts from 'echarts';\r\nimport 'echarts-gl';\r\nimport uuid from \"uuid\"\r\nimport { use } from 'echarts';\r\n\r\nexport default function Conference(props) {\r\n    const UID = useRef(uuid.v1())\r\n\r\n    const crerateGraph = (paperList) => {\r\n\r\n        const confs = {}\r\n\r\n        paperList.forEach(paper => {\r\n            const conf = paper.Conference\r\n            confs[conf] = confs[conf] === undefined ? 1 : confs[conf] + 1\r\n        })\r\n        const axis = []\r\n        const value = []\r\n\r\n        Object.keys(confs).forEach(key => {\r\n            if (confs[key] > 10) {\r\n                axis.push(key)\r\n                value.push({\r\n                    value: confs[key],\r\n                    name: key\r\n                })\r\n            }\r\n        })\r\n\r\n\r\n        return {\r\n            axis: axis,\r\n            value: value\r\n        }\r\n    }\r\n\r\n\r\n    const visualConfig = {\r\n        maxSymbolSize: 10,\r\n        maxEdgeWidth: 10,\r\n        seriesNum: 8\r\n    }\r\n\r\n    const initOption = (data) => {\r\n        var chartDom = document.getElementById(UID.current);\r\n        var myChart = echarts.init(chartDom,\"default\");\r\n        const option = {\r\n            title: {\r\n                text: '所属期刊',\r\n                left: 'left'\r\n            },\r\n            tooltip: {\r\n                trigger: 'item'\r\n            },\r\n            legend: {\r\n                data: [],\r\n                orient: 'vertical',\r\n                left: 'left',\r\n            },\r\n\r\n            series: [\r\n                {\r\n                    name: 'Conference',\r\n                    type: 'pie',\r\n                    radius: ['40%', '70%'],\r\n                    data: data.value,\r\n                    emphasis: {\r\n                        itemStyle: {\r\n                            shadowBlur: 10,\r\n                            shadowOffsetX: 0,\r\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        };\r\n        myChart.setOption(option);\r\n\r\n    }\r\n\r\n    const handelDataChange = () => {\r\n        if (props.paperData === null) {\r\n            console.log(\"empty\")\r\n        } else {\r\n            initOption(crerateGraph(props.paperData))\r\n        }\r\n    }\r\n    useEffect(handelDataChange,[props.paperData])\r\n    return (\r\n        <div id={UID.current} style={props.style}>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n","import React, { useState, useEffect, useRef, useLayoutEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from '../reportWebVitals';\r\nimport * as echarts from 'echarts';\r\nimport 'echarts-gl';\r\nimport uuid from \"uuid\"\r\nimport { use } from 'echarts';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport PubSub from 'pubsub-js'\r\n// import echartTheme from \"../echartTheme\"\r\nexport default function Affiliation(props) {\r\n    const UID = useRef(uuid.v1())\r\n\r\n    const visualConfig = {\r\n        maxSymbolSize: 10,\r\n        maxEdgeWidth: 10,\r\n        seriesNum: 8\r\n    }\r\n\r\n    const [numberRange, setNumberRange] = useState([0, 65536])\r\n    const numberRangeRef = useRef([0, 65536])\r\n    const crerateGraph = (paperList) => {\r\n        const AffilS = {}\r\n        paperList.forEach(paper => {\r\n            paper.AuthorAffiliation.split(\";\").forEach(\r\n                Affil => {\r\n                    AffilS[Affil] = AffilS[Affil] === undefined ? 1 : AffilS[Affil] + 1\r\n                }\r\n            )\r\n        })\r\n        const axis = []\r\n        const value = []\r\n        let otherCount = 0\r\n\r\n        let min = 65536\r\n        let max = 0\r\n\r\n        Object.keys(AffilS).forEach(key => {\r\n            if (key !== \"\") {\r\n                min = Math.min(AffilS[key], min)\r\n                max = Math.max(AffilS[key], max)\r\n                if (AffilS[key] > filterValue) {\r\n                    axis.push(key)\r\n                    value.push({\r\n                        value: AffilS[key],\r\n                        name: key\r\n                    })\r\n                } else {\r\n                    otherCount += AffilS[key]\r\n                }\r\n            }\r\n        })\r\n        setNumberRange([min, max])\r\n        numberRangeRef.current = [min, max]\r\n        return {\r\n            axis: axis,\r\n            value: value\r\n        }\r\n    }\r\n\r\n    const initOption = (data) => {\r\n        var chartDom = document.getElementById(UID.current);\r\n        // echarts.registerTheme()\r\n        var myChart = echarts.init(chartDom, \"default\");\r\n        myChart.clear()\r\n        const option = {\r\n            title: {\r\n                text: '所属机构',\r\n                left: 'left'\r\n            },\r\n            tooltip: {\r\n                trigger: 'item'\r\n            },\r\n            legend: {\r\n                data: [],\r\n                orient: 'vertical',\r\n                left: 'left',\r\n                selected: {\r\n                    \"other\": false\r\n                }\r\n            },\r\n\r\n            series: [\r\n                {\r\n                    name: 'AuthorAffiliation',\r\n                    type: 'pie',\r\n                    radius: ['40%', '70%'],\r\n                    data: data.value,\r\n                    emphasis: {\r\n                        itemStyle: {\r\n                            shadowBlur: 10,\r\n                            shadowOffsetX: 0,\r\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                        }\r\n                    },\r\n                    label: {\r\n                        formatter: '{b}: {d}'\r\n                    },\r\n                }\r\n            ]\r\n        };\r\n        myChart.setOption(option);\r\n        myChart.on(\"click\", args => { console.log(args) })\r\n\r\n    }\r\n\r\n    const handelGrapgChange = () => {\r\n        if (props.paperData === null) {\r\n            console.log(\"empty\")\r\n        } else {\r\n            initOption(crerateGraph(props.paperData))\r\n\r\n        }\r\n    }\r\n\r\n\r\n    const initPaperData = () => {\r\n        handelGrapgChange()\r\n        setfilterValue(Math.floor((numberRange[1] + numberRange[0]) / 2))\r\n    }\r\n\r\n    const [filterValue, setfilterValue] = React.useState(10);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setfilterValue(newValue);\r\n    };\r\n\r\n    useEffect(initPaperData, [props.paperData])\r\n\r\n    useEffect(handelGrapgChange, [filterValue])\r\n\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n        setfilterValue(Math.floor((numberRangeRef.current[1] + numberRangeRef.current[0]) / 2))\r\n    }, [props.paperData])\r\n\r\n    return (\r\n        <div style={props.style}>\r\n            <div id={UID.current} style={props.style}>\r\n            </div>\r\n            <Slider\r\n                value={filterValue}\r\n                onChange={handleChange}\r\n                aria-labelledby=\"continuous-slider\"\r\n                valueLabelDisplay=\"auto\"\r\n                min={numberRange[0]}\r\n                max={numberRange[1]}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect, useRef, useLayoutEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from '../reportWebVitals';\r\nimport * as echarts from 'echarts';\r\nimport 'echarts-gl';\r\nimport uuid from \"uuid\"\r\nimport { use } from 'echarts';\r\nimport PubSub from 'pubsub-js'\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function PubsCited(props) {\r\n    const UID = useRef(uuid.v1())\r\n    const myChart = useRef(null)\r\n    const crerateGraph = (paperList) => {\r\n        let minYear = 65536\r\n        let maxYear = 0\r\n        const yearCount = {}\r\n        paperList.forEach((paper) => {\r\n            const year = Number(paper.PubsCited)\r\n            yearCount[year] = yearCount.hasOwnProperty(year) ? yearCount[year] + 1 : 1\r\n            minYear = Math.min(minYear, year)\r\n            maxYear = Math.max(maxYear, year)\r\n        })\r\n        const axis = []\r\n        const value = []\r\n        for (let i = minYear; i <= maxYear; i++) {\r\n            axis.push(i)\r\n            value.push(yearCount.hasOwnProperty(i) ? yearCount[i] : 0)\r\n        }\r\n        return {\r\n            axis: axis,\r\n            value: value\r\n        }\r\n    }\r\n\r\n    const visualConfig = {\r\n        maxSymbolSize: 10,\r\n        maxEdgeWidth: 10,\r\n        seriesNum: 8\r\n    }\r\n\r\n    const reDraw = (data) => {\r\n        var chartDom = document.getElementById(UID.current);\r\n        const option = {       \r\n            xAxis: {\r\n                data: data.axis\r\n            },\r\n            series: [\r\n                {\r\n                    data: data.value\r\n                },\r\n\r\n            ],\r\n        };\r\n        myChart.current.setOption(option);\r\n        myChart.current.on(\"dataZoom\", args => {\r\n            const minYear = Number(data.axis[0])\r\n            const maxYear = Number(data.axis[data.axis.length - 1])\r\n            const yearRange = (maxYear - minYear) / 100\r\n            const start = args.batch ? args.batch[0].start : args.start\r\n            const end = args.batch ? args.batch[0].end : args.end \r\n            PubSub.publishSync('mainPgage_PubsCited_range_selected', {\r\n                start: Math.round(start * yearRange + minYear),\r\n                end: Math.round(end * yearRange + minYear),\r\n            });\r\n        })\r\n    }\r\n\r\n    const handelDataChange = () => {\r\n        if (props.paperData === null) {\r\n            console.log(\"empty\")\r\n        } else {\r\n            reDraw(crerateGraph(props.paperData))\r\n        }\r\n    }\r\n\r\n    const createEchartDiv = () => {\r\n        var chartDom = document.getElementById(UID.current);\r\n        myChart.current = echarts.init(chartDom,\"default\");\r\n        const option = {\r\n            title: {\r\n                text: '论文数-被引次数'\r\n            },\r\n            tooltip: {\r\n                trigger: 'axis'\r\n            },\r\n            legend: {\r\n                data: []\r\n            },\r\n            grid: {\r\n                left: '3%',\r\n                right: '4%',\r\n                bottom: '3%',\r\n                containLabel: true\r\n            },\r\n\r\n            xAxis: {\r\n                type: 'category',\r\n                boundaryGap: false,\r\n                data: []\r\n            },\r\n            yAxis: {\r\n                type: 'value'\r\n            },\r\n            series: [\r\n                {\r\n                    name: '论文数',\r\n                    type: 'bar',\r\n                    data: [],\r\n                    itemStyle: {\r\n                    normal: {\r\n                        color:\"#4CAF50\"\r\n                    }   \r\n                }\r\n                },\r\n\r\n            ],\r\n            dataZoom: [\r\n                {\r\n                    show: true,\r\n                    realtime: true,\r\n                    start: 0,\r\n                    end: 100,\r\n                    xAxisIndex: [0, 1]\r\n                },\r\n                {\r\n                    type: 'inside',\r\n                    realtime: true,\r\n                    start: 0,\r\n                    end: 100,\r\n                    xAxisIndex: [0, 1]\r\n                }\r\n            ],\r\n        };\r\n        myChart.current.setOption(option);\r\n    }\r\n\r\n    useEffect( createEchartDiv,[] )\r\n\r\n    useEffect(handelDataChange, [props.paperData])\r\n    return (\r\n        <div id={UID.current} style={props.style}>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n","import React, { useState, useEffect, useRef, useLayoutEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as echarts from 'echarts';\r\nimport 'echarts-gl';\r\nimport uuid from \"uuid\"\r\nimport { use } from 'echarts';\r\nimport Year from \"./MainPageModes/Year\";\r\nimport Conference from \"./MainPageModes/Conference\";\r\nimport Affiliation from \"./MainPageModes/Affiliation\"\r\nimport PubsCited from \"./MainPageModes/PubsCited\"\r\nimport PubSub from 'pubsub-js'\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nexport default function MainPageView(props) {\r\n\r\n    const paperDataSet = \"/api/IEEE VIS papers 1990-2018.json\" //论文数据集 之后将数据过滤安排在后端 \r\n\r\n    function getPaperDataSet() {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(paperDataSet).then(resp =>\r\n                resp.json().then(data => resolve(data))\r\n            )\r\n        })\r\n    }\r\n\r\n    const [paperData, setPaperData] = useState(null)\r\n    const [filteedPaperData, setFiltedPaperData] = useState(null)\r\n    const refPaperData = useRef(null)\r\n\r\n    const render = () => {\r\n        setPaperData(props.paperData)\r\n        setFiltedPaperData(props.paperData)\r\n        refPaperData.current = props.paperData\r\n        \r\n    }\r\n\r\n    const yearFilter = useRef([0, 65536])\r\n    const pubsCitedFilter = useRef([0, 65536])\r\n\r\n\r\n    \r\n    const applyFilter = () => {\r\n        const filtedDataTmp = refPaperData.current.filter(paper => {\r\n                    const yearApply = yearFilter.current[0] < Number(paper.Year) && Number(paper.Year) < yearFilter.current[1]\r\n                    const pubsCitedApply = pubsCitedFilter.current[0] < paper.PubsCited && paper.PubsCited < pubsCitedFilter.current[1]\r\n                    return yearApply && pubsCitedApply\r\n                }\r\n            )\r\n        setFiltedPaperData(filtedDataTmp)\r\n    }\r\n\r\n\r\n  \r\n    useEffect(() => {\r\n        render()\r\n        PubSub.subscribe(\"mainPgage_yaer_range_selected\", (msg, data) => {\r\n            yearFilter.current = [data.start, data.end]\r\n            applyFilter()\r\n        })\r\n        PubSub.subscribe(\"mainPgage_PubsCited_range_selected\", (msg, data) => {\r\n            pubsCitedFilter.current = [data.start, data.end]\r\n            applyFilter()\r\n        })\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-between\"\r\n                alignItems=\"flex-start\"\r\n            >\r\n                <Grid item xs={6}>\r\n                    <Year\r\n                        paperData={paperData}\r\n                        style={\r\n                            {\r\n                                width: \"100%\",\r\n                                height: 420\r\n                            }\r\n                        }\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Conference\r\n                        paperData={filteedPaperData}\r\n                        style={\r\n                            {\r\n                                width: \"100%\",\r\n                                height: 420\r\n                            }\r\n                        }\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <PubsCited\r\n                        paperData={paperData}\r\n                        style={\r\n                            {\r\n                                width: \"100%\",\r\n                                height: 420\r\n                            }\r\n                        }\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Affiliation\r\n                        paperData={filteedPaperData}\r\n                        style={\r\n                            {\r\n                                width: \"100%\",\r\n                                height: 420\r\n                            }\r\n                        }\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n","export default function ColorMap(str) {\r\n    const color = [\"#5470c6\",\r\n        \"#91cc75\",\r\n        \"#fac858\",\r\n        \"#ee6666\",\r\n        \"#73c0de\",\r\n        \"#3ba272\",\r\n        \"#fc8452\",\r\n        \"#9a60b4\",\r\n        \"#ea7ccc\"];\r\n    const themes = [\r\n        \"interactive\",\r\n        \"visualizing\",\r\n        \"coordinated multiple views\",\r\n        \"stream\",\r\n        \"model\",\r\n        \"analytics\",\r\n        \"coordinated and multiple views\",\r\n        \"treemaps\",\r\n        \"virtual environments\",\r\n        \"network layout\",\r\n        \"visualization\",\r\n        \"scientific visualization\",\r\n        \"text analytics\",\r\n        \"classification\",\r\n        \"dimensional\",\r\n        \"multivariate data\",\r\n        \"design space\",\r\n        \"text visualization\",\r\n        \"system\",\r\n        \"visual knowledge discovery\",\r\n        \"texture mapping\",\r\n        \"systems\",\r\n        \"virtual reality\",\r\n        \"multivariate visualization\",\r\n        \"education\",\r\n        \"geometric\",\r\n        \"multidimensional scaling\",\r\n        \"time series data\",\r\n        \"framework\",\r\n        \"ensemble visualization\",\r\n        \"visual analysis\",\r\n        \"geovisualization\",\r\n        \"design study\",\r\n        \"flow\",\r\n        \"multivariate\",\r\n        \"clustering\",\r\n        \"dimensionality reduction\",\r\n        \"high-dimensional data\",\r\n        \"deep learning\",\r\n        \"parallel coordinates\",\r\n        \"segmentation\",\r\n        \"interactive visual analysis\",\r\n        \"direct manipulation\",\r\n        \"interactive visualization\",\r\n        \"neural networks\",\r\n        \"feature detection\",\r\n        \"graph visualization\",\r\n        \"data transformation\",\r\n        \"level-of-detail\",\r\n        \"algorithm\",\r\n        \"graphics hardware\",\r\n        \"volume visualization\",\r\n        \"evaluation\",\r\n        \"volume rendering\",\r\n        \"image\",\r\n        \"visual analytics\",\r\n        \"interaction techniques\",\r\n        \"graphical perception\",\r\n        \"exploratory data analysis\",\r\n        \"optimization\",\r\n        \"uncertainty visualization\",\r\n        \"design studies\",\r\n        \"focus+context visualization\",\r\n        \"techniques\",\r\n        \"immersive analytics\",\r\n        \"topological data analysis\",\r\n        \"network visualization\",\r\n        \"information visualization\",\r\n        \"treamline'\",\r\n        \"multidimensional data\",\r\n        \"interaction\",\r\n        \"medical visualization\",\r\n        \"rendering\",\r\n        \"flow visualization\",\r\n        \"dynamic visualization\",\r\n        \"focus+context\",\r\n        \"graph layout\",\r\n        \"interactive exploration\",\r\n        \"data mining\",\r\n        \"3d\",\r\n        \"collaboration\",\r\n        \"web-based visualization\",\r\n        \"principal component analysis\",\r\n        \"graphics\",\r\n        \"time-varying data visualization\",\r\n        \"machine learning\",\r\n        \"information\",\r\n        \"multidimensional visualization\",\r\n        \"bioinformatics visualization\",\r\n        \"illustrative visualization\",\r\n        \"streamlines\",\r\n        \"others\",\r\n        \"isosurface extraction\",\r\n        \"marching cubes\",\r\n        \"perception\",\r\n        \"visual knowledge representation\",\r\n        \"scatterplot\",\r\n        \"\",\r\n        \"Re: Domande per Chaouki\",\r\n        \"[!GAC-619-29156]: Request for exploits\",\r\n        \"prova\",\r\n        \"Re: [Fwd: domanda di lavoro]\",\r\n        \"R: Errore TNI - Fake Access Point\",\r\n        \"Re: [Fwd: Re: Richiesta informazioni]\",\r\n        \"RE: VMWare\",\r\n        \"test\",\r\n        \"[!QMG-419-93914]: RCS 9.5 Mono db upgrade Error !!\",\r\n        \"[!ILH-271-32685]: Error synchronizing\",\r\n        \"R: Antenne\",\r\n        \"TODO\",\r\n        \"R: Richiesta Antenne\",\r\n        \"R: Vittoria Liberatoria\",\r\n        \"Re: Sull'upgrade delle backdoor\",\r\n        \"R: Abi  con domande\",\r\n        \"Re: Pendrive con autorun\",\r\n        \"R: ORDINE - COMMESSE INTERNE HT\",\r\n        \"[!XYU-799-99817]: RCS NIA\",\r\n        \"Re: Richiesta informazioni\",\r\n        \"R: New member on board\",\r\n        \"Re: training Ungheria MKIH\",\r\n        \"Re: Mac Malware Spies On Email, Survives Reboots\",\r\n        \"Re: Exploits have been patched\",\r\n        \"[VTMIS][d3e866e5bf18f2d9c667563de9150b705813e03377312b6974923f6af2e56291] sample\",\r\n        \"R: Management Remoto TNI\",\r\n        \"[!JFN-242-30736]: Modulo chat Skype 7.5\",\r\n        \"Re: sar\\u00e0 sicuro?\",\r\n        \"Re: attivit\\u00e0 aggiornamento e training Postale\",\r\n        \"Attivita` CollaboratoriOnline\",\r\n        \"[!ZYI-251-55279]: shard service\",\r\n        \"Re: Legal Trojan\",\r\n        \"Re: Osx Crisis/morcut\",\r\n        \"ciao\",\r\n        \"R: Royal PT e F5\",\r\n        \"Re: sul corriere...\",\r\n        \"Re: domande tecniche RCS/VOIP\",\r\n        \"R: Re: Penetration Test SIS\",\r\n        \"Re: Un po' in anticipo..\",\r\n        \"R: Re: Progetto db masking per Barclays\",\r\n        \"Re: R: Sviluppi non viewer-related\",\r\n        \"Re: Problemi con l'invio di posta dall'esterno\",\r\n        \"Re: R: interpretazione\",\r\n        \"Re: sicurezza infrastruttura bes\",\r\n        \"Re: VUPEN / Code Update\",\r\n        \"R: e bravo naif.....\",\r\n        \"Re: Planning 2006\",\r\n        \"Re: Collector da disabilitare\",\r\n        \"R: Incontro Vittoria\",\r\n        \"R: Re: URGENTE: merda secca!!\",\r\n        \"Re: RCS testing\",\r\n        \"Re: Aladdin sotto linux\",\r\n        \"Re: I: MySQL License\",\r\n        \"Re: Credenziali CheckIn/CheckOut\",\r\n        \"Re: Pranzo gioved\\u00ec\",\r\n        \"[BULK]  Voglio offrirvi un'opportunita di lavoro con holding operante a livello globale.\",\r\n        \"R: Tni Nia Telecom Italia\",\r\n        \"Re: Hackers release browser-based 'jailbreak' for iPhone 4\",\r\n        \"bin\",\r\n        \"Re: I: I: Punti patente DA DIVULGARE\",\r\n        \"Re: WebInspect 7\",\r\n        \"Re: build error\",\r\n        \"RE: Sony BMG to compensate buyers of flawed CDs\",\r\n        \"[!UQN-139-35526]: Exploit web Android\",\r\n        \"[!YMN-265-89975]: Cannot apply conf to anons !\",\r\n        \"R: Attivita' di EH\",\r\n        \"Re: I: POESIA\",\r\n        \"[!WLB-866-72418]: Inquire \",\r\n        \"R: TNI help me\",\r\n        \"Re: R: Test nuovo SIS v5.0\",\r\n        \"[!OEY-135-84265]: Acceso a servidor\",\r\n        \"Re: URGENTE: merda secca!!\",\r\n        \"Re: Forno a microonde\",\r\n        \"Re: Meet \\u201cbadBIOS,\\u201d the mysterious Mac and PC malware that jumps airgaps\",\r\n        \"[!PQQ-100-46911]: collector queue\",\r\n        \"Re: AVG Anti-Rootkit Free\",\r\n        \"Re: Proposte di colloquio\",\r\n        \"R: RSA VA-PT retest SIS 5.0\",\r\n        \"Re: infection CD spain\",\r\n        \"R: Conferma risultati\",\r\n        \"Re: contro-analisi di kaspersky...\",\r\n        \"Re: in effetti...\",\r\n        \"[!WUD-894-39291]: Android Exploit 18/12/14\",\r\n        \"Re: nuova conf\",\r\n        \"R: Info\",\r\n        \"[!LLA-775-12733]: Browser klogger not working\",\r\n        \"R: Re: Osx Crisis/morcut\",\r\n        \"Re: FW: Curriculum Vitae\",\r\n        \"Re: exploit word\",\r\n        \"[!KNZ-947-47808]: EXE installator out of order\",\r\n        \"R: Commessa Lispa\",\r\n        \"[!HNI-103-39412]: Login Failure\",\r\n        \"R: hacking tool\",\r\n        \"[!QSX-223-43223]: The evidence did not received\",\r\n        \"Re: Atlas restarting, ID: Atlas HackingTeam-INC-2012/0004\",\r\n        \"Re: Riunione Difensiva\"\r\n\r\n\r\n    ];\r\n    const index = themes.indexOf(str) + 1\r\n    return color[index % color.length]\r\n}","import React, { useState, useEffect, useRef, useLayoutEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as echarts from 'echarts';\r\nimport 'echarts-gl';\r\nimport uuid from \"uuid\"\r\nimport { use } from 'echarts';\r\nimport PubSub from 'pubsub-js'\r\nimport ColorMap from \"./ColorMap\"\r\n//论文领域分布图\r\n\r\n\r\nexport default function FieldDistribution(props) {\r\n    const UID = useRef(uuid.v1())\r\n    const chart = useRef(null)\r\n    const visualConfig = {\r\n        pieNum: 4,//N段圆环\r\n    }\r\n    const translateData = (yearData) => {\r\n        const themePie = []\r\n        const valuePolar = []\r\n        let angleSUM = 0\r\n        const pieRange = {}\r\n        for (let theme in yearData.theme_author) {\r\n\r\n            themePie.push(\r\n                {\r\n                    value: yearData.theme_author[theme].length,\r\n                    name: theme\r\n                }\r\n            )\r\n            pieRange[theme] = {\r\n                start: angleSUM,\r\n                end: angleSUM + yearData.theme_author[theme].length\r\n            }\r\n            angleSUM += yearData.theme_author[theme].length\r\n        }\r\n        let themeCount = 0\r\n        for (let theme in yearData.theme_author) {\r\n            const ConeDistribution = [] //锥形分布数据\r\n            const thetaStart = pieRange[theme].start * 360 / angleSUM\r\n            const thetaEnd = pieRange[theme].end * 360 / angleSUM\r\n\r\n            const r_t_map = {}\r\n            yearData.theme_author[theme].forEach(element => {\r\n                ConeDistribution.push(element)\r\n                const theta = (Math.random() * 0.8 + 0.1) * (thetaEnd - thetaStart) + thetaStart\r\n                if (element.count > visualConfig.pieNum) {\r\n                    const r = 1 / visualConfig.pieNum * (Math.random() * 0.8 + 0.1) //随机  0.1~0.9\r\n                    r_t_map[element.name] = [r, theta]\r\n                } else {\r\n                    const r = (visualConfig.pieNum - element.count + (Math.random() * 0.8 + 0.1)) * (1 / visualConfig.pieNum)\r\n                    r_t_map[element.name] = [r, theta]\r\n                }\r\n            })\r\n\r\n            const get_r_theta = (author) => {\r\n                // thetaStart\r\n                // thetaEnd\r\n                // ConeDistribution 可以闭包调用\r\n                return r_t_map[author.name]\r\n            }\r\n\r\n            yearData.theme_author[theme].forEach(element => {\r\n                const r_theta = get_r_theta(element)\r\n                let nodecolor = \"\"\r\n                let opacity = 1\r\n                if( props.hlname !== undefined && props.hlname !== \"\"  ){\r\n                    if(element.name === props.hlname){\r\n                        nodecolor = \"#d90051\"\r\n                    }else{\r\n                        nodecolor = ColorMap(theme)\r\n                        opacity = 0.1\r\n                    }\r\n                }else{\r\n                    nodecolor = ColorMap(theme)\r\n                }\r\n                valuePolar.push(\r\n                    {\r\n                        r: r_theta[0],\r\n                        theta: r_theta[1],\r\n                        color: nodecolor,\r\n                        name: element.name,\r\n                        count: element.count,\r\n                        opacity:opacity\r\n                    }\r\n                )\r\n\r\n            })\r\n\r\n            themeCount += 1\r\n        }\r\n\r\n\r\n\r\n\r\n        return {\r\n            pie: themePie,\r\n            polar: valuePolar\r\n        }\r\n    }\r\n\r\n    const makeSeries = (values) => {\r\n        const interval = Math.floor(60 / visualConfig.pieNum)\r\n        const series = []\r\n        for (let i = 0; i < visualConfig.pieNum; i++) {\r\n            series.push(\r\n                {\r\n                    type: 'pie',\r\n                    radius: [i * interval + \"%\", (i + 1) * interval + \"%\"],\r\n                    label: {\r\n                        show: false\r\n                    },\r\n                    data: values,\r\n                    itemStyle: {\r\n                        color: \"#ffffff\",\r\n                        borderWidth: 1,\r\n                        borderColor: \"#6e7079\",\r\n                        borderType: \"dashed\"\r\n\r\n                    },\r\n                    emphasis: {\r\n                        scale: false\r\n                    }\r\n                }\r\n            )\r\n        }\r\n        series.push(\r\n            {\r\n                type: 'pie',\r\n                radius: [\"60%\", \"65%\"],\r\n                label: {\r\n                    show: true,\r\n\r\n                },\r\n                data: values,\r\n                itemStyle: {\r\n                    color: \"#CDCDCD\",\r\n                    borderRadius: 3,\r\n                    borderWidth: 1,\r\n                    borderColor: \"#ffffff\",\r\n                },\r\n                emphasis: {\r\n                    scale: false,\r\n                    label: {\r\n                        show: true\r\n                    },\r\n                }\r\n            }\r\n        )\r\n        return series\r\n\r\n    }\r\n\r\n    const makePolar = (nodes) => { // 半径 角度 悬浮标签 颜色\r\n        const polar = {\r\n            coordinateSystem: 'polar',\r\n            name: 'line',\r\n            type: 'scatter',\r\n\r\n            symbolSize: 10,\r\n            data: [\r\n\r\n                {\r\n                    value: [1, 360],\r\n                    label: {},\r\n                    symbolSize: 0,\r\n                },\r\n                ...nodes.map(node => (\r\n                    {\r\n                        value: [node[\"r\"], node[\"theta\"]],\r\n                        label: \"name:\" + node[\"name\"] + \"</br>count:\" + node[\"count\"],\r\n                        name: node[\"name\"],\r\n                        itemStyle: {\r\n                            color: node[\"color\"],\r\n                            opacity: node[\"opacity\"],\r\n                        },\r\n                    }\r\n                )\r\n                )\r\n            ]\r\n        }\r\n        return polar\r\n    }\r\n\r\n\r\n    const makeYearData = (sankdata, year) => {\r\n        \r\n        const theme_author = {}\r\n        sankdata.forEach(authorPapers => {\r\n            const author_theme_count = {}\r\n            const author_name = authorPapers[0].name\r\n            authorPapers.forEach(paperInfo => {\r\n                if (Number(paperInfo.year) === year) {\r\n                    author_theme_count[paperInfo.theme] = author_theme_count[paperInfo.theme] + 1 || 1\r\n                }\r\n            })\r\n            \r\n            for (let theme_name in author_theme_count) {\r\n                if (theme_author[theme_name] === undefined) {\r\n                    theme_author[theme_name] = [{ name: author_name, count: author_theme_count[theme_name] }]\r\n                } else {\r\n                    theme_author[theme_name] = [...theme_author[theme_name], { name: author_name, count: author_theme_count[theme_name] }]\r\n                }\r\n            }\r\n        })\r\n        return {\r\n            year: year,\r\n            theme_author: theme_author\r\n        }\r\n\r\n    }\r\n\r\n    const dataResult = useRef(null)\r\n    const initChart = () => {\r\n        // console.log(\"colorMap.current\",colorMap.current)\r\n        if (props.sankData === undefined || props.sankData.length === 0 || props.year === null) {\r\n            return\r\n        }\r\n\r\n        const yearData = makeYearData(props.sankData, props.year)\r\n\r\n        dataResult.current = translateData(yearData)\r\n\r\n        if (chart.current === null) {\r\n            chart.current = echarts.init(document.getElementById(UID.current), \"default\");\r\n        } else {\r\n            chart.current.clear()\r\n        }\r\n\r\n        const series = makeSeries(dataResult.current.pie)\r\n\r\n        series.push(makePolar(dataResult.current.polar))\r\n\r\n        // console.log(makePolar(dataResult.polar))\r\n\r\n        const option = {\r\n            title: {\r\n                text: props.year\r\n            },\r\n            animation: false,\r\n            tooltip: {\r\n                trigger: 'item',\r\n                formatter: function (params) {\r\n                    if (params.componentSubType === \"scatter\") {\r\n                        return params.data.label;\r\n                    }\r\n                    return \"\"\r\n                }\r\n            },\r\n            polar: {\r\n                radius: \"60%\"\r\n            },\r\n            angleAxis: {\r\n                show:false,\r\n                type: 'value',\r\n                startAngle: 90\r\n            },\r\n            radiusAxis: {\r\n                show:false,\r\n\r\n            },\r\n            series: series\r\n        }\r\n        chart.current.setOption(option)\r\n        chart.current.off(\"mouseover\")\r\n        chart.current.on(\"mouseover\", { componentSubType: \"scatter\" }, (args) => {//,\r\n            if (args.componentSubType === \"scatter\") {\r\n                props.hilightAuthor(args.data.name)\r\n            }\r\n        }\r\n        )\r\n        chart.current.off(\"mouseout\")\r\n        chart.current.on(\"mouseout\", { componentSubType: \"scatter\" }, (args) => {//,\r\n            \r\n            if (args.componentSubType === \"scatter\") {\r\n                props.hilightAuthor(\"\")\r\n                // console.log(\"out!!!\",args)\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(initChart, [props.sankData, props.year,props.hlname])\r\n    return (\r\n        <div id={UID.current} style={props.style}>\r\n        </div>\r\n    )\r\n}\r\n","import Chip from '@material-ui/core/Chip';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport cx from 'clsx';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport TextInfoContent from '@mui-treasury/components/content/textInfo';\r\nimport { useN01TextInfoContentStyles } from '@mui-treasury/styles/textInfoContent/n01';\r\nimport { useWideCardMediaStyles } from '@mui-treasury/styles/cardMedia/wide';\r\nimport { useFadedShadowStyles } from '@mui-treasury/styles/shadow/faded';\r\nimport React, { useState, useEffect, useRef, useLayoutEffect } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport PubSub from 'pubsub-js'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\n\r\nconst width = 950\r\nconst height = 800\r\n\r\nconst widthaddbar = width + 10\r\nconst heightsubtop = height - 40\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: 'auto',\r\n        width: width,\r\n        maxHeight: height,\r\n        overflow: \"hiden\",\r\n    },\r\n    scrollpart: {\r\n        width: widthaddbar,\r\n        maxHeight: heightsubtop,\r\n        overflow: \"scroll\",\r\n    },\r\n    content: {\r\n        padding: 24,\r\n    },\r\n    Box: {\r\n        '& > *': {\r\n            margin: theme.spacing(0.5),\r\n        },\r\n    },\r\n    headimg: {\r\n        width: '100%',\r\n        height: 300,\r\n    }\r\n}));\r\n\r\n\r\nexport default function AuthorInfo(props) {\r\n    const [authorData, setauthorData] = useState({\r\n        name: \"\",\r\n        papers: []\r\n    })\r\n\r\n    const cardStyles = useStyles();\r\n    const wideCardMediaStyles = useWideCardMediaStyles();\r\n    const fadeShadowStyles = useFadedShadowStyles();\r\n    const textCardContentStyles = useN01TextInfoContentStyles();\r\n\r\n    useEffect(() => {\r\n        setauthorData(props.data)\r\n    }, [props.data])\r\n\r\n    const goto_dynamic = (type,args) => {\r\n        window.location.href = `/#/DynamicDiscoveryMode/${type}/${args}`\r\n    }\r\n\r\n\r\n    return (\r\n        <Card className={cx(cardStyles.root, fadeShadowStyles.root)} onClick={ (e) => {e.stopPropagation()}}>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-between\"\r\n                alignItems=\"flex-start\"\r\n            >\r\n                <IconButton\r\n                    color=\"secondary\"\r\n                    onClick={() => {\r\n                        PubSub.publish(\"float_window_close_card\", \"\")\r\n                    }}\r\n                >\r\n                    <ArrowBackIcon />\r\n                </IconButton>\r\n                <IconButton \r\n                    color=\"secondary\" \r\n                    onClick={() => {\r\n                        goto_dynamic(\"author\",authorData.name)\r\n                    }}\r\n                    >\r\n                    <MoreVertIcon />\r\n                </IconButton>\r\n            </Grid>\r\n            <div className={cardStyles.scrollpart}>\r\n                <CardMedia\r\n                    className={cardStyles.headimg}\r\n                    image=\"./img/person.png\"\r\n                />\r\n                <CardContent className={cardStyles.content}>\r\n                    <TextInfoContent\r\n                        classes={textCardContentStyles}\r\n                        heading={authorData.name}\r\n                        body={\r\n                            authorData.papers.map((paper) => {\r\n                                return (<a></a>)\r\n                            }\r\n                            )\r\n                        }\r\n                    />\r\n                </CardContent>\r\n                <Box className={cardStyles.Box} px={3} pb={3}>\r\n                    {authorData.papers.map((paper) => (\r\n                        <Chip\r\n                            key={paper.Title}\r\n                            variant=\"outlined\"\r\n                            color=\"secondary\"\r\n                            avatar={<Avatar>{\"P\"}</Avatar>}\r\n                            label={paper.Title}\r\n                            clickable\r\n                            onClick={\r\n                                () => {\r\n                                    PubSub.publish(\"paper_selected\", paper._index)\r\n                                }\r\n                            }\r\n                        />\r\n                    ))}\r\n                </Box>\r\n            </div>\r\n        </Card>\r\n    );\r\n}","import Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PaperInfo from \"./PaperInfo\"\r\nimport React, { useState, useEffect, useRef, useLayoutEffect } from 'react';\r\nimport PubSub from 'pubsub-js'\r\n\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nimport AuthorInfo from \"./AuthorInfo\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\n\r\nexport default function FloatingWindow(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    const [checkedAnmie, setCheck] = useState(true)\r\n    const [animeDirection,setAnimeDirection] = useState(\"up\")\r\n    const stack = useRef([])\r\n    const [cardDataMap, setCardDataMap] = useState(null)\r\n\r\n    const updateCardData = (cardData,inout) => {\r\n        if(inout === \"in\"){\r\n            setAnimeDirection(\"down\")\r\n        }else{\r\n            setAnimeDirection(\"up\")\r\n        }\r\n        setCheck(false)\r\n        setTimeout(() => { setCardDataMap(cardData) }, 200)\r\n        setTimeout(() => { \r\n            if(inout === \"in\"){\r\n                setAnimeDirection(\"up\")\r\n            }else{\r\n                setAnimeDirection(\"down\")\r\n            }\r\n            setCheck(true) \r\n        }, 200)\r\n    }\r\n\r\n    const handelPush = (pushData) => {\r\n        if (stack.current.length === 0) {//push时为0 为第一层 开启显示\r\n            setOpen(true)\r\n        }\r\n        stack.current.push(pushData)\r\n        updateCardData(pushData,\"in\")\r\n        console.log(\"open!\", stack.current)\r\n    }\r\n\r\n    const handelPop = () => {//pop  关闭当前 且呈现上一个\r\n        console.log(\"before do pop\", stack.current)\r\n        if (stack.current.length === 1) {//如果现在是1 则关闭\r\n            stack.current = []\r\n            updateCardData(null,\"out\")\r\n            setOpen(false)\r\n        }//pop 但是为长度为0 关闭显示\r\n        else {//不为1 则pop当前的 现在最后一个\r\n            stack.current.pop()\r\n            updateCardData(stack.current[stack.current.length - 1],\"out\")\r\n        }\r\n    }\r\n\r\n    const handelClose = () => {\r\n        stack.current = []\r\n        updateCardData(null,\"out\")\r\n        setOpen(false)\r\n    }\r\n\r\n    const [paperInfoRawData, setPaperInfoRawData] = useState(null)\r\n    const [authorInfoRawData, setAuthorInfoRawData] = useState(null)\r\n\r\n    const getAuthorInfo = (authorName) => {\r\n        const authorPapers = []\r\n        props.paperData.forEach((paperEntity, index) => {\r\n            if (paperEntity[\"AuthorNames-Deduped\"].indexOf(authorName) !== -1) {\r\n                const paperEntityWithIndex = JSON.parse(JSON.stringify(paperEntity))\r\n                paperEntityWithIndex[\"_index\"] = index//添加了index属性\r\n                authorPapers.push(paperEntityWithIndex)\r\n            }\r\n        }\r\n        )\r\n        return {\r\n            name: authorName,\r\n            papers: authorPapers\r\n        }\r\n    }\r\n\r\n    const getPaperInfo = (paperIndex) => {\r\n        console.log(paperIndex,props.paperData[paperIndex])\r\n        const paperInfoWithIndex = {...props.paperData[paperIndex],_index:paperIndex}\r\n        return paperInfoWithIndex\r\n    }\r\n\r\n    useEffect(() => {\r\n        PubSub.subscribe(\"paper_selected\", (msg, paperIndex) => {\r\n            handelPush({\r\n                type: \"paper\",\r\n                data: getPaperInfo(paperIndex) \r\n            })\r\n        })\r\n        PubSub.subscribe(\"author_selected\", (msg, authorName) => {\r\n            handelPush({\r\n                type: \"author\",\r\n                data: getAuthorInfo(authorName)\r\n            })\r\n        })\r\n        PubSub.subscribe(\"float_window_close_card\", (msg, data) => {\r\n            handelPop()\r\n        })\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <Backdrop className={classes.backdrop} open={open} onClick={ (target)=>{handelClose()} } >\r\n                <Slide direction={animeDirection} in={checkedAnmie} >\r\n                    <div style={{height:800}}  >\r\n                        {\r\n                            cardDataMap === null ?\r\n                                <div />\r\n                                :\r\n                                cardDataMap.type === \"paper\" ?\r\n                                    <PaperInfo data={cardDataMap.data} />\r\n                                    :\r\n                                    <AuthorInfo data={cardDataMap.data} />\r\n                        }\r\n                    </div>\r\n                </Slide>\r\n            </Backdrop>\r\n        </div >\r\n    )\r\n}","export const echartTheme = \r\n\r\n{\r\n    \"color\": [\r\n        \"#5470c6\",\r\n        \"#91cc75\",\r\n        \"#fac858\",\r\n        \"#ee6666\",\r\n        \"#73c0de\",\r\n        \"#3ba272\",\r\n        \"#fc8452\",\r\n        \"#9a60b4\",\r\n        \"#ea7ccc\"\r\n    ],\r\n    \"backgroundColor\": \"rgba(0, 0, 0, 0)\",\r\n    \"textStyle\": {},\r\n    \"title\": {\r\n        \"textStyle\": {\r\n            \"color\": \"#464646\"\r\n        },\r\n        \"subtextStyle\": {\r\n            \"color\": \"#6E7079\"\r\n        }\r\n    },\r\n    \"line\": {\r\n        \"itemStyle\": {\r\n            \"borderWidth\": 1\r\n        },\r\n        \"lineStyle\": {\r\n            \"width\": 2\r\n        },\r\n        \"symbolSize\": 4,\r\n        \"symbol\": \"circle\",\r\n        \"smooth\": false\r\n    },\r\n    \"radar\": {\r\n        \"itemStyle\": {\r\n            \"borderWidth\": 1\r\n        },\r\n        \"lineStyle\": {\r\n            \"width\": 2\r\n        },\r\n        \"symbolSize\": 4,\r\n        \"symbol\": \"circle\",\r\n        \"smooth\": false\r\n    },\r\n    \"bar\": {\r\n        \"itemStyle\": {\r\n            \"barBorderWidth\": \"0\",\r\n            \"barBorderColor\": \"#ccc\"\r\n        }\r\n    },\r\n    \"pie\": {\r\n        \"itemStyle\": {\r\n            \"borderWidth\": \"0\",\r\n            \"borderColor\": \"#ccc\"\r\n        }\r\n    },\r\n    \"scatter\": {\r\n        \"itemStyle\": {\r\n            \"borderWidth\": \"0\",\r\n            \"borderColor\": \"#ccc\"\r\n        }\r\n    },\r\n    \"boxplot\": {\r\n        \"itemStyle\": {\r\n            \"borderWidth\": \"0\",\r\n            \"borderColor\": \"#ccc\"\r\n        }\r\n    },\r\n    \"parallel\": {\r\n        \"itemStyle\": {\r\n            \"borderWidth\": \"0\",\r\n            \"borderColor\": \"#ccc\"\r\n        }\r\n    },\r\n    \"sankey\": {\r\n        \"itemStyle\": {\r\n            \"borderWidth\": \"0\",\r\n            \"borderColor\": \"#ccc\"\r\n        }\r\n    },\r\n    \"funnel\": {\r\n        \"itemStyle\": {\r\n            \"borderWidth\": \"0\",\r\n            \"borderColor\": \"#ccc\"\r\n        }\r\n    },\r\n    \"gauge\": {\r\n        \"itemStyle\": {\r\n            \"borderWidth\": \"0\",\r\n            \"borderColor\": \"#ccc\"\r\n        }\r\n    },\r\n    \"candlestick\": {\r\n        \"itemStyle\": {\r\n            \"color\": \"#eb5454\",\r\n            \"color0\": \"#47b262\",\r\n            \"borderColor\": \"#eb5454\",\r\n            \"borderColor0\": \"#47b262\",\r\n            \"borderWidth\": 1\r\n        }\r\n    },\r\n    \"graph\": {\r\n        \"itemStyle\": {\r\n            \"borderWidth\": \"0\",\r\n            \"borderColor\": \"#ccc\"\r\n        },\r\n        \"lineStyle\": {\r\n            \"width\": 1,\r\n            \"color\": \"#aaa\"\r\n        },\r\n        \"symbolSize\": 4,\r\n        \"symbol\": \"circle\",\r\n        \"smooth\": false,\r\n        \"color\": [\r\n            \"#5470c6\",\r\n            \"#91cc75\",\r\n            \"#fac858\",\r\n            \"#ee6666\",\r\n            \"#73c0de\",\r\n            \"#3ba272\",\r\n            \"#fc8452\",\r\n            \"#9a60b4\",\r\n            \"#ea7ccc\"\r\n        ],\r\n        \"label\": {\r\n            \"color\": \"#eee\"\r\n        }\r\n    },\r\n    \"map\": {\r\n        \"itemStyle\": {\r\n            \"normal\": {\r\n                \"areaColor\": \"#eee\",\r\n                \"borderColor\": \"#444\",\r\n                \"borderWidth\": 0.5\r\n            },\r\n            \"emphasis\": {\r\n                \"areaColor\": \"rgba(255,215,0,0.8)\",\r\n                \"borderColor\": \"#444\",\r\n                \"borderWidth\": 1\r\n            }\r\n        },\r\n        \"label\": {\r\n            \"normal\": {\r\n                \"textStyle\": {\r\n                    \"color\": \"#000\"\r\n                }\r\n            },\r\n            \"emphasis\": {\r\n                \"textStyle\": {\r\n                    \"color\": \"rgb(100,0,0)\"\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \"geo\": {\r\n        \"itemStyle\": {\r\n            \"normal\": {\r\n                \"areaColor\": \"#eee\",\r\n                \"borderColor\": \"#444\",\r\n                \"borderWidth\": 0.5\r\n            },\r\n            \"emphasis\": {\r\n                \"areaColor\": \"rgba(255,215,0,0.8)\",\r\n                \"borderColor\": \"#444\",\r\n                \"borderWidth\": 1\r\n            }\r\n        },\r\n        \"label\": {\r\n            \"normal\": {\r\n                \"textStyle\": {\r\n                    \"color\": \"#000\"\r\n                }\r\n            },\r\n            \"emphasis\": {\r\n                \"textStyle\": {\r\n                    \"color\": \"rgb(100,0,0)\"\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \"categoryAxis\": {\r\n        \"axisLine\": {\r\n            \"show\": true,\r\n            \"lineStyle\": {\r\n                \"color\": \"#6E7079\"\r\n            }\r\n        },\r\n        \"axisTick\": {\r\n            \"show\": true,\r\n            \"lineStyle\": {\r\n                \"color\": \"#6E7079\"\r\n            }\r\n        },\r\n        \"axisLabel\": {\r\n            \"show\": true,\r\n            \"textStyle\": {\r\n                \"color\": \"#6E7079\"\r\n            }\r\n        },\r\n        \"splitLine\": {\r\n            \"show\": false,\r\n            \"lineStyle\": {\r\n                \"color\": [\r\n                    \"#E0E6F1\"\r\n                ]\r\n            }\r\n        },\r\n        \"splitArea\": {\r\n            \"show\": false,\r\n            \"areaStyle\": {\r\n                \"color\": [\r\n                    \"rgba(250,250,250,0.2)\",\r\n                    \"rgba(210,219,238,0.2)\"\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    \"valueAxis\": {\r\n        \"axisLine\": {\r\n            \"show\": false,\r\n            \"lineStyle\": {\r\n                \"color\": \"#6E7079\"\r\n            }\r\n        },\r\n        \"axisTick\": {\r\n            \"show\": false,\r\n            \"lineStyle\": {\r\n                \"color\": \"#6E7079\"\r\n            }\r\n        },\r\n        \"axisLabel\": {\r\n            \"show\": true,\r\n            \"textStyle\": {\r\n                \"color\": \"#6E7079\"\r\n            }\r\n        },\r\n        \"splitLine\": {\r\n            \"show\": true,\r\n            \"lineStyle\": {\r\n                \"color\": [\r\n                    \"#E0E6F1\"\r\n                ]\r\n            }\r\n        },\r\n        \"splitArea\": {\r\n            \"show\": false,\r\n            \"areaStyle\": {\r\n                \"color\": [\r\n                    \"rgba(250,250,250,0.2)\",\r\n                    \"rgba(210,219,238,0.2)\"\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    \"logAxis\": {\r\n        \"axisLine\": {\r\n            \"show\": false,\r\n            \"lineStyle\": {\r\n                \"color\": \"#6E7079\"\r\n            }\r\n        },\r\n        \"axisTick\": {\r\n            \"show\": false,\r\n            \"lineStyle\": {\r\n                \"color\": \"#6E7079\"\r\n            }\r\n        },\r\n        \"axisLabel\": {\r\n            \"show\": true,\r\n            \"textStyle\": {\r\n                \"color\": \"#6E7079\"\r\n            }\r\n        },\r\n        \"splitLine\": {\r\n            \"show\": true,\r\n            \"lineStyle\": {\r\n                \"color\": [\r\n                    \"#E0E6F1\"\r\n                ]\r\n            }\r\n        },\r\n        \"splitArea\": {\r\n            \"show\": false,\r\n            \"areaStyle\": {\r\n                \"color\": [\r\n                    \"rgba(250,250,250,0.2)\",\r\n                    \"rgba(210,219,238,0.2)\"\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    \"timeAxis\": {\r\n        \"axisLine\": {\r\n            \"show\": true,\r\n            \"lineStyle\": {\r\n                \"color\": \"#6E7079\"\r\n            }\r\n        },\r\n        \"axisTick\": {\r\n            \"show\": true,\r\n            \"lineStyle\": {\r\n                \"color\": \"#6E7079\"\r\n            }\r\n        },\r\n        \"axisLabel\": {\r\n            \"show\": true,\r\n            \"textStyle\": {\r\n                \"color\": \"#6E7079\"\r\n            }\r\n        },\r\n        \"splitLine\": {\r\n            \"show\": false,\r\n            \"lineStyle\": {\r\n                \"color\": [\r\n                    \"#E0E6F1\"\r\n                ]\r\n            }\r\n        },\r\n        \"splitArea\": {\r\n            \"show\": false,\r\n            \"areaStyle\": {\r\n                \"color\": [\r\n                    \"rgba(250,250,250,0.2)\",\r\n                    \"rgba(210,219,238,0.2)\"\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    \"toolbox\": {\r\n        \"iconStyle\": {\r\n            \"normal\": {\r\n                \"borderColor\": \"#999\"\r\n            },\r\n            \"emphasis\": {\r\n                \"borderColor\": \"#666\"\r\n            }\r\n        }\r\n    },\r\n    \"legend\": {\r\n        \"textStyle\": {\r\n            \"color\": \"#333\"\r\n        }\r\n    },\r\n    \"tooltip\": {\r\n        \"axisPointer\": {\r\n            \"lineStyle\": {\r\n                \"color\": \"#ccc\",\r\n                \"width\": 1\r\n            },\r\n            \"crossStyle\": {\r\n                \"color\": \"#ccc\",\r\n                \"width\": 1\r\n            }\r\n        }\r\n    },\r\n    \"timeline\": {\r\n        \"lineStyle\": {\r\n            \"color\": \"#DAE1F5\",\r\n            \"width\": 2\r\n        },\r\n        \"itemStyle\": {\r\n            \"normal\": {\r\n                \"color\": \"#A4B1D7\",\r\n                \"borderWidth\": 1\r\n            },\r\n            \"emphasis\": {\r\n                \"color\": \"#FFF\"\r\n            }\r\n        },\r\n        \"controlStyle\": {\r\n            \"normal\": {\r\n                \"color\": \"#A4B1D7\",\r\n                \"borderColor\": \"#A4B1D7\",\r\n                \"borderWidth\": 1\r\n            },\r\n            \"emphasis\": {\r\n                \"color\": \"#A4B1D7\",\r\n                \"borderColor\": \"#A4B1D7\",\r\n                \"borderWidth\": 1\r\n            }\r\n        },\r\n        \"checkpointStyle\": {\r\n            \"color\": \"#316bf3\",\r\n            \"borderColor\": \"fff\"\r\n        },\r\n        \"label\": {\r\n            \"normal\": {\r\n                \"textStyle\": {\r\n                    \"color\": \"#A4B1D7\"\r\n                }\r\n            },\r\n            \"emphasis\": {\r\n                \"textStyle\": {\r\n                    \"color\": \"#A4B1D7\"\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \"visualMap\": {\r\n        \"color\": [\r\n            \"#bf444c\",\r\n            \"#d88273\",\r\n            \"#f6efa6\"\r\n        ]\r\n    },\r\n    \"dataZoom\": {\r\n        \"handleSize\": \"undefined%\",\r\n        \"textStyle\": {}\r\n    },\r\n    \"markPoint\": {\r\n        \"label\": {\r\n            \"color\": \"#eee\"\r\n        },\r\n        \"emphasis\": {\r\n            \"label\": {\r\n                \"color\": \"#eee\"\r\n            }\r\n        }\r\n    }\r\n}\r\n","import React, { useState, useEffect, useRef, useLayoutEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as echarts from 'echarts';\r\nimport 'echarts-gl';\r\nimport uuid from \"uuid\"\r\nimport { use } from 'echarts';\r\nimport PubSub from 'pubsub-js'\r\nimport { echartTheme } from \"./echartTheme\"\r\n//论文领域分布图\r\n\r\n// function getNumberInNormalDistribution(mean, std_dev) {\r\n//     return mean + (randomNormalDistribution() * std_dev);\r\n// }\r\n\r\n// function randomNormalDistribution() {\r\n//     var u = 0.0, v = 0.0, w = 0.0, c = 0.0;\r\n//     do {\r\n//         u = (Math.random() * 0.8 + 0.1 ) * 2 - 1.0;\r\n//         v = (Math.random() * 0.8 + 0.1 ) * 2 - 1.0;\r\n//         w = u * u + v * v;\r\n//     } while (w == 0.0 || w >= 1.0)\r\n//     c = Math.sqrt((-2 * Math.log(w)) / w);\r\n//     return u * c;\r\n// }\r\n\r\n\r\n// const getField = (paperEntity) => {// 论文实体 => [...领域]\r\n//     // return paperEntity.AuthorKeywords.split(\",\")\r\n//     const len = Math.round((Math.random() * 0.8 + 0.1 ) * 5)\r\n//     const field = []\r\n//     for (let i = 0; i < len; i++) {\r\n//         field.push(Math.round((Math.random() * 0.8 + 0.1 ) * 10) + \"\")\r\n//     }\r\n//     return field\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n// const getFieldsData = (paperList) => {\r\n//     const fieldPaperCounts = {}//领域的count 用于绘制饼图(不适合，饼图的部分占比应该由其中的节点数量决定)\r\n//     const AuthorPapers = {}//作者的论文[...index]\r\n//     const fieldNodes = {}\r\n//     paperList.forEach((paper, index) => {\r\n//         for (let field of getField(paper)) {\r\n//             fieldPaperCounts[field] = fieldPaperCounts[field] + 1 || 1\r\n//         }\r\n//         for (let authorName of paper[\"AuthorNames-Deduped\"]) {\r\n//             if (AuthorPapers[authorName] === undefined) {\r\n//                 AuthorPapers[authorName] = [index]\r\n//             } else {\r\n//                 AuthorPapers[authorName].push(index)\r\n//             }\r\n//         }\r\n//     }\r\n//     )\r\n//     const getNodeValue = (type, key, field) => {//取值模块 闭包 \r\n//         let value = 0\r\n//         if (type === \"author\") { //  作者的值 = count [论文数 in 该领域]  或许应该使用论文值之和\r\n//             AuthorPapers[key].forEach((paperIndex) => {\r\n//                 const paperEntity = paperList[paperIndex]\r\n\r\n//                 value += getField(paperEntity).indexOf(field) === -1 ? 0 : 1//直接计数\r\n\r\n//                 // if( getField(paperEntity).indexOf(field) === -1 ){//权重统计\r\n//                 //     value += getNodeValue(\"paper\",paperIndex,field)//使用getValue获取\r\n//                 //     // value += paperEntity.PubsCited//直接使用引用数\r\n//                 // }\r\n//             }\r\n//             )\r\n//             return value\r\n//         } else if (type === \"paper\") { // 论文的值为PubsCited\r\n//             value = paperList[key].PubsCited\r\n//             return value\r\n//         }\r\n//         return 0\r\n//     }\r\n\r\n//     Object.keys(fieldPaperCounts).forEach((fieldName) => {\r\n//         fieldNodes[fieldName] = {\r\n//             autherNodes: [],\r\n//             paperNodes: [],\r\n//         }\r\n//     }\r\n//     )\r\n\r\n//     paperList.forEach((paper, index) => {\r\n//         for (let fieldName of getField(paper)) {//对于论文所涉及的每一个领域\r\n//             const paperValue = getNodeValue(\"paper\", index, fieldName)\r\n//             if (paperValue > 0) {\r\n//                 fieldNodes[fieldName].paperNodes.push(//论文存入每个领域\r\n//                     {\r\n//                         type: \"paper\",\r\n//                         key: index,\r\n//                         value: paperValue\r\n//                     }\r\n//                 )\r\n//             }\r\n\r\n//             for (let authorName of paper[\"AuthorNames-Deduped\"]) {\r\n//                 const authorValue = getNodeValue(\"author\", authorName, fieldName)\r\n//                 if (authorValue > 0) {//不出意外 这个其实是永真的 应为至少为1\r\n//                     fieldNodes[fieldName].autherNodes.push(\r\n//                         {\r\n//                             type: \"author\",\r\n//                             key: authorName,\r\n//                             value: authorValue\r\n//                         }\r\n//                     )\r\n//                 }\r\n\r\n//             }\r\n//         }\r\n//     }\r\n//     )\r\n//     return {\r\n//         fields: Object.keys(fieldPaperCounts),//绘制饼图不应该使用这个\r\n//         fieldNodes: fieldNodes,\r\n//         AuthorPapers: AuthorPapers,\r\n//     }\r\n// }\r\n\r\n// const getOptionData = (fieldsData, visualConfig) => {//领域数据,可视化配置 生成option\r\n//     const getNodes = (fieldName) => {\r\n//         if (visualConfig.usingType === \"paper\") {\r\n//             return fieldsData.fieldNodes[fieldName].paperNodes\r\n//         }\r\n//         else {\r\n//             return fieldsData.fieldNodes[fieldName].autherNodes\r\n//         }\r\n//     }\r\n\r\n//     const fields = []\r\n//     let totalCount = 0\r\n\r\n//     fieldsData.fields.forEach((fieldName) => {//节点数量 ~ 饼图比例\r\n\r\n//         if (getNodes(fieldName).length > visualConfig.miniCount) {\r\n//             fields.push(\r\n//                 {\r\n//                     name: fieldName,\r\n//                     start: totalCount,\r\n//                     end: totalCount + getNodes(fieldName).length\r\n//                 }\r\n//             )\r\n//             totalCount += getNodes(fieldName).length\r\n//         }\r\n//     })\r\n\r\n//     const nodeLocations = []\r\n\r\n//     const nodeData = []\r\n//     const pieData = []\r\n//     const drawLineData = [[0, 0]]\r\n\r\n\r\n//     fields.forEach((fieldEntity, index) => {\r\n\r\n//         let min = Math.min(...getNodes(fieldEntity.name).map(node => { return node.value }))\r\n//         let max = Math.max(...getNodes(fieldEntity.name).map(node => { return node.value }))\r\n\r\n//         pieData.push(\r\n//             { value: fieldEntity.end - fieldEntity.start, name: fieldEntity.name, visualMap: false },\r\n//         )\r\n//         drawLineData.push([visualConfig.size, fieldEntity.start * 360 / totalCount])\r\n//         drawLineData.push([0, 0])\r\n\r\n//         for (let node of getNodes(fieldEntity.name)) {\r\n//             const r = (node.value - min) / (max - min)\r\n\r\n//             // const thet = ((Math.random() * 0.8 + 0.1 )) * (radianEnd - radianStart) + radianStart\r\n\r\n//             // const thet = Math.PI * 2\r\n//             //     * ((getNumberInNormalDistribution(50, 0) / 100)\r\n//             //         * (fieldEntity.end - fieldEntity.start) + fieldEntity.start)\r\n//             //     / totalCount\r\n\r\n//             const thet = 360  //本质上 value 代表r thet是没有实际意义的 但是为乐可视化需要 使其正态分布在中轴\r\n//                 * ((getNumberInNormalDistribution(50, 10) / 100)\r\n//                     * (fieldEntity.end - fieldEntity.start) + fieldEntity.start)\r\n//                 / totalCount\r\n\r\n\r\n//             nodeLocations.push(\r\n//                 {\r\n//                     category: fieldEntity.name,\r\n//                     type: node.type,\r\n//                     name: node.name,\r\n//                     key: node.key,\r\n//                     r: r,\r\n//                     thet: thet,\r\n//                 }\r\n//             )\r\n//             nodeData.push(\r\n//                 [\r\n//                     r * visualConfig.size,\r\n//                     thet,\r\n//                     index\r\n//                 ]\r\n//             )\r\n//         }\r\n//     })\r\n\r\n\r\n\r\n//     var option = {\r\n//         title: {\r\n//             text: ''\r\n//         },\r\n//         polar: {},\r\n//         angleAxis: {\r\n//             type: 'value',\r\n//             startAngle: 0,\r\n//             axisTick: {\r\n//                 show: false\r\n//             },\r\n//             axisLabel: {\r\n//                 show: false\r\n//             }\r\n\r\n//         },\r\n//         radiusAxis: {\r\n//             show: false,\r\n//             axisTick: {\r\n//                 show: false\r\n//             },\r\n//         },\r\n\r\n\r\n//         visualMap: [\r\n//             {\r\n//                 type: 'continuous',\r\n//                 dimension: 2,\r\n//                 max: fields.length,\r\n//                 inRange: {\r\n//                     color: [\r\n//                         \"#2196F3\",\r\n//                         \"#E91E63\",\r\n//                     ],\r\n//                     symbolSize: 8\r\n//                 }\r\n//             }\r\n//         ],\r\n//         series: [\r\n//             {\r\n//                 coordinateSystem: 'polar',\r\n//                 name: 'line',\r\n//                 type: 'scatter',\r\n//                 data: nodeData\r\n//             },\r\n//             {\r\n//                 coordinateSystem: 'polar',\r\n//                 name: 'line',\r\n//                 type: 'line',\r\n//                 data: drawLineData,\r\n//                 itemStyle: {\r\n//                     normal: {\r\n//                         color: \"#000000\",\r\n//                         size: 0,\r\n//                         show: false,\r\n//                         opacity: 0\r\n//                     },\r\n//                     emphasis: {\r\n//                     }\r\n//                 },\r\n//                 lineStyle: {\r\n//                     normal: {\r\n//                         width: 0.2,\r\n//                         color: \"#000000\"\r\n//                     },\r\n//                     hilight: {\r\n//                     }\r\n//                 }\r\n//             }\r\n//         ]\r\n//     };\r\n//     return option\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n// const yearData = {//这个 应该是sank图初始化就完成的 然后年份变化 直接取出传过来\r\n//     year: 1990,\r\n//     theme_author: {\r\n//         theme_3D: [\r\n//             {\r\n//                 name: \"name1\",\r\n//                 count: 10\r\n//             },\r\n//             {\r\n//                 name: \"llname1\",\r\n//                 count: 1\r\n//             },\r\n//             {\r\n//                 name: \"llname1\",\r\n//                 count: 2\r\n//             },\r\n//             {\r\n//                 name: \"llname3\",\r\n//                 count: 3\r\n//             },\r\n//             {\r\n//                 name: \"name2\",\r\n//                 count: 5\r\n//             },\r\n//             {\r\n//                 name: \"name3\",\r\n//                 count: 10\r\n//             }\r\n//         ],\r\n//         theme2: [\r\n//             {\r\n//                 name: \"name1\",\r\n//                 count: 10\r\n//             },\r\n//             {\r\n//                 name: \"name2\",\r\n//                 count: 5\r\n//             },\r\n//             {\r\n//                 name: \"name3\",\r\n//                 count: 10\r\n//             }\r\n//         ],\r\n//         theme3: [\r\n//             {\r\n//                 name: \"name1\",\r\n//                 count: 10\r\n//             },\r\n//             {\r\n//                 name: \"name2\",\r\n//                 count: 5\r\n//             },\r\n//             {\r\n//                 name: \"name3\",\r\n//                 count: 10\r\n//             }\r\n//         ]\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\nexport default function FieldDistribution(props) {\r\n    const UID = useRef(uuid.v1())\r\n    const chart = useRef(null)\r\n    const visualConfig = {\r\n        pieNum: 4,//N段圆环\r\n    }\r\n    const translateData = (yearData) => {\r\n        const themePie = []\r\n        const valuePolar = []\r\n        let angleSUM = 0\r\n        const pieRange = {}\r\n        for (let theme in yearData.theme_author) {\r\n\r\n            themePie.push(\r\n                {\r\n                    value: yearData.theme_author[theme].length,\r\n                    name: theme\r\n                }\r\n            )\r\n            pieRange[theme] = {\r\n                start: angleSUM,\r\n                end: angleSUM + yearData.theme_author[theme].length\r\n            }\r\n            angleSUM += yearData.theme_author[theme].length\r\n        }\r\n\r\n        let themeCount = 0\r\n\r\n        for (let theme in yearData.theme_author) {\r\n            const ConeDistribution = [] //锥形分布数据\r\n            const thetaStart = pieRange[theme].start * 360 / angleSUM\r\n            const thetaEnd = pieRange[theme].end * 360 / angleSUM\r\n\r\n            const r_t_map = {}\r\n            yearData.theme_author[theme].forEach(element => {\r\n                ConeDistribution.push(element)\r\n                const theta = (Math.random() * 0.8 + 0.1) * (thetaEnd - thetaStart) + thetaStart\r\n                if (element.count > visualConfig.pieNum) {\r\n                    const r = 1 / visualConfig.pieNum * (Math.random() * 0.8 + 0.1) //随机  0.1~0.9\r\n                    r_t_map[element.name] = [r, theta]\r\n                } else {\r\n                    const r = (visualConfig.pieNum - element.count + (Math.random() * 0.8 + 0.1)) * (1 / visualConfig.pieNum)\r\n                    r_t_map[element.name] = [r, theta]\r\n                }\r\n            })\r\n\r\n            const get_r_theta = (author) => {\r\n                // thetaStart\r\n                // thetaEnd\r\n                // ConeDistribution 可以闭包调用\r\n                return r_t_map[author.name]\r\n            }\r\n\r\n            yearData.theme_author[theme].forEach(element => {\r\n                const r_theta = get_r_theta(element)\r\n                valuePolar.push(\r\n                    {\r\n                        r: r_theta[0],\r\n                        theta: r_theta[1],\r\n                        color: colorMap.current[theme] === undefined ? echartTheme.color[themeCount % echartTheme.color.length] : colorMap.current[theme],\r\n                        name: element.name,\r\n                        count: element.count\r\n                    }\r\n                )\r\n\r\n            })\r\n\r\n            themeCount += 1\r\n        }\r\n\r\n\r\n\r\n\r\n        return {\r\n            pie: themePie,\r\n            polar: valuePolar\r\n        }\r\n    }\r\n\r\n    const makeSeries = (values) => {\r\n        const interval = Math.floor(60 / visualConfig.pieNum)\r\n        const series = []\r\n        for (let i = 0; i < visualConfig.pieNum; i++) {\r\n            series.push(\r\n                {\r\n                    type: 'pie',\r\n                    radius: [i * interval + \"%\", (i + 1) * interval + \"%\"],\r\n                    label: {\r\n                        show: false\r\n                    },\r\n                    data: values,\r\n                    itemStyle: {\r\n                        color: \"#ffffff\",\r\n                        borderWidth: 1,\r\n                        borderColor: \"#6e7079\",\r\n                        borderType: \"dashed\"\r\n\r\n                    },\r\n                    emphasis: {\r\n                        scale: false\r\n                    }\r\n                }\r\n            )\r\n        }\r\n        series.push(\r\n            {\r\n                type: 'pie',\r\n                radius: [\"60%\", \"65%\"],\r\n                label: {\r\n                    show: true,\r\n\r\n                },\r\n                data: values,\r\n                itemStyle: {\r\n                    color: \"#CDCDCD\",\r\n                    borderRadius: 3,\r\n                    borderWidth: 1,\r\n                    borderColor: \"#ffffff\",\r\n                },\r\n                emphasis: {\r\n                    scale: false,\r\n                    label: {\r\n                        show: true\r\n                    },\r\n                }\r\n            }\r\n        )\r\n        return series\r\n\r\n    }\r\n\r\n    const makePolar = (nodes) => { // 半径 角度 悬浮标签 颜色\r\n        const polar = {\r\n            coordinateSystem: 'polar',\r\n            name: 'line',\r\n            type: 'scatter',\r\n\r\n            symbolSize: 10,\r\n            data: [\r\n\r\n                {\r\n                    value: [1, 360],\r\n                    label: {},\r\n                    symbolSize: 0,\r\n                },\r\n                ...nodes.map(node => (\r\n                    {\r\n                        value: [node[\"r\"], node[\"theta\"]],\r\n                        label: \"姓名:\" + node[\"name\"] + \"</br>发表数:\" + node[\"count\"],\r\n                        name: node[\"name\"],\r\n                        itemStyle: {\r\n                            color: node[\"color\"]\r\n                        },\r\n                    }\r\n                )\r\n                )\r\n            ]\r\n        }\r\n        return polar\r\n    }\r\n\r\n\r\n    const makeYearData = (sankdata, year) => {\r\n\r\n        const theme_author = {}\r\n        sankdata.forEach(authorPapers => {\r\n            const author_theme_count = {}\r\n            const author_name = authorPapers[0].name\r\n            authorPapers.forEach(paperInfo => {\r\n                if (paperInfo.year === year) {\r\n                    author_theme_count[paperInfo.theme] = author_theme_count[paperInfo.theme] + 1 || 1\r\n                }\r\n            })\r\n            for (let theme_name in author_theme_count) {\r\n                if (theme_author[theme_name] === undefined) {\r\n                    theme_author[theme_name] = [{ name: author_name, count: author_theme_count[theme_name] }]\r\n                } else {\r\n                    theme_author[theme_name] = [...theme_author[theme_name], { name: author_name, count: author_theme_count[theme_name] }]\r\n                }\r\n            }\r\n        })\r\n        return {\r\n            year: year,\r\n            theme_author: theme_author\r\n        }\r\n\r\n    }\r\n    const initChart = () => {\r\n        // console.log(\"colorMap.current\",colorMap.current)\r\n        if (props.sankData === undefined || props.sankData.length === 0 || props.year === null) {\r\n            return\r\n        }\r\n\r\n\r\n\r\n        const yearData = makeYearData(props.sankData, props.year)\r\n\r\n\r\n\r\n        const dataResult = translateData(yearData)\r\n\r\n        if (chart.current === null) {\r\n            chart.current = echarts.init(document.getElementById(UID.current), \"default\");\r\n        } else {\r\n            chart.current.clear()\r\n        }\r\n\r\n\r\n\r\n        const series = makeSeries(dataResult.pie)\r\n\r\n        series.push(makePolar(dataResult.polar))\r\n\r\n        // console.log(makePolar(dataResult.polar))\r\n\r\n        const option = {\r\n            title: {\r\n                text: props.year\r\n            },\r\n            animation: false,\r\n            tooltip: {\r\n                trigger: 'item',\r\n                formatter: function (params) {\r\n                    if (params.componentSubType === \"scatter\") {\r\n                        return params.data.label;\r\n                    }\r\n                    return \"\"\r\n                }\r\n            },\r\n            polar: {\r\n                radius: \"60%\"\r\n            },\r\n            angleAxis: {\r\n                show:false,\r\n                type: 'value',\r\n                startAngle: 90\r\n            },\r\n            radiusAxis: {\r\n                show:false,\r\n\r\n            },\r\n            series: series\r\n        }\r\n        chart.current.setOption(option)\r\n        chart.current.off(\"mouseover\")\r\n        chart.current.on(\"mouseover\", { componentSubType: \"scatter\" }, (args) => {//,\r\n            if (args.componentSubType === \"scatter\") {\r\n                props.hilightAuthor(args.data.name)\r\n            }\r\n        }\r\n        )\r\n        chart.current.off(\"mouseout\")\r\n        chart.current.on(\"mouseout\", { componentSubType: \"scatter\" }, (args) => {//,\r\n            \r\n            if (args.componentSubType === \"scatter\") {\r\n                props.hilightAuthor(\"\")\r\n                // console.log(\"out!!!\",args)\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    useEffect(initChart, [props.sankData, props.year])\r\n\r\n    const colorMap = useRef({})\r\n\r\n    useEffect(() => {\r\n        colorMap.current = props.colorMap\r\n        initChart()\r\n    }, [props.colorMap])\r\n    return (\r\n        <div id={UID.current} style={props.style}>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef, useLayoutEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as echarts from 'echarts';\r\nimport 'echarts-gl';\r\nimport uuid from \"uuid\"\r\nimport { use } from 'echarts';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport PubSub from 'pubsub-js'\r\nimport { echartTheme } from \"./echartTheme\"\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport LinearScaleIcon from '@material-ui/icons/LinearScale';\r\nimport GrainIcon from '@material-ui/icons/Grain';\r\nimport PanoramaVerticalIcon from '@material-ui/icons/PanoramaVertical';\r\nimport WifiTetheringIcon from '@material-ui/icons/WifiTethering';\r\nimport LabelOffIcon from '@material-ui/icons/LabelOff';\r\nimport LabelIcon from '@material-ui/icons/Label';\r\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\r\n\r\n\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\n\r\n\r\nimport FieldDistribution from \"./FieldDistribution\"\r\n\r\nconst PrettoSlider = withStyles({\r\n    root: {\r\n        color: '#52af77',\r\n        height: 8,\r\n    },\r\n    thumb: {\r\n        height: 24,\r\n        width: 24,\r\n        backgroundColor: '#fff',\r\n        border: '2px solid currentColor',\r\n        marginTop: -8,\r\n        marginLeft: -12,\r\n        '&:focus, &:hover, &$active': {\r\n            boxShadow: 'inherit',\r\n        },\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n        left: 'calc(-50% + 4px)',\r\n    },\r\n    track: {\r\n        height: 8,\r\n        borderRadius: 4,\r\n    },\r\n    rail: {\r\n        height: 8,\r\n        borderRadius: 4,\r\n    },\r\n})(Slider);\r\n\r\nconst useStyles = makeStyles((theme) => (\r\n    {\r\n        root: {\r\n            width: 300,\r\n        },\r\n        searchIcon: {\r\n            padding: theme.spacing(0, 2),\r\n            height: '100%',\r\n            position: 'absolute',\r\n            pointerEvents: 'none',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n        inputRoot: {\r\n            color: 'inherit',\r\n        },\r\n        inputInput: {\r\n            padding: theme.spacing(1, 1, 1, 0),\r\n            // vertical padding + font size from searchIcon\r\n            paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n            transition: theme.transitions.create('width'),\r\n            width: '100%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: '30ch',\r\n                '&:focus': {\r\n                    width: '40ch',\r\n                },\r\n            }\r\n        },\r\n    }\r\n));\r\n\r\nfunction valuetext(value) {\r\n    return `${value}`;\r\n}\r\n\r\nexport default function Sank(props) {\r\n    const classes = useStyles();\r\n\r\n    const theme_Index_arrary = useRef(null)\r\n\r\n    const [theme_color_map, set_theme_color_map] = useState({})\r\n\r\n    const [value, setValue] = useState([2015, 2020]);\r\n    const valueRef = useRef([2015, 2020])\r\n    const handleChange = (event, newValue) => {\r\n        if (newValue !== valueRef.current) {\r\n            setValue(newValue);\r\n            valueRef.current = newValue\r\n            handleArgsChange(\"year\")\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const UID = useRef(uuid.v1())\r\n\r\n    const visualConfig = {\r\n        maxSize: 80,\r\n        minSize: 30,\r\n    }\r\n\r\n    const cartesianProduct = (list) => {//传入一个作者的记录 生成笛卡尔积 传入之前就按照年份筛选了\r\n        const layer = new Map()\r\n        for (let rec of list) {\r\n            if (layer[rec[\"year\"]] === undefined) {\r\n                layer[rec[\"year\"]] = [rec]\r\n            } else {\r\n                layer[rec[\"year\"]].push(rec)\r\n            }\r\n        }\r\n        const years = Object.keys(layer)\r\n        if (years.length > 1) {\r\n            const links = []\r\n            for (let i = 0; i < years.length - 1; i++) {\r\n                const currentYear = years[i]\r\n                const nextYear = years[i + 1]\r\n                for (let rec_i of layer[currentYear]) {\r\n                    for (let rec_j of layer[nextYear]) {\r\n                        links.push(rec_i[\"theme\"] + \"_\" + currentYear + \"==>\" + rec_j[\"theme\"] + \"_\" + nextYear)\r\n                    }\r\n                }\r\n            }\r\n            return links\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n    function stringToHash(string) {\r\n\r\n        let hash = 0;\r\n\r\n        if (string.length == 0) return hash;\r\n\r\n        for (let i = 0; i < string.length; i++) {\r\n            const char = string.charCodeAt(i);\r\n            hash = ((hash << 5) - hash) + char;\r\n            hash = hash & hash;\r\n        }\r\n\r\n        return hash;\r\n    }\r\n\r\n    const crerateGraph = (data, yearstart, yearend) => {\r\n        const linkTmp = {}\r\n        for (let authorHistory of data) {\r\n            for (let link of cartesianProduct(authorHistory.filter(x => x[\"year\"] >= yearstart && x[\"year\"] <= yearend))) {\r\n                linkTmp[link] = linkTmp[link] + 1 || 1\r\n            }\r\n        }\r\n        const nodeSet = new Set()\r\n        const nodes = []\r\n        const links = []\r\n        for (let rec in linkTmp) {\r\n            const source = rec.split(\"==>\")[0]\r\n            const target = rec.split(\"==>\")[1]\r\n            nodeSet.add(source)\r\n            nodeSet.add(target)\r\n            links.push(\r\n                {\r\n                    source: source,\r\n                    target: target,\r\n                    value: linkTmp[rec]\r\n                }\r\n            )\r\n        }\r\n\r\n        const themeCount = {}//放入theme \r\n        for (let theme_year of nodeSet) {\r\n            const theme = theme_year.substring(0, theme_year.length - 5)\r\n            themeCount[theme] = themeCount[theme] + 1 || 1\r\n        }\r\n\r\n        const sortedThemearrary = Object.keys(themeCount).sort(function (a, b) { return themeCount[b] - themeCount[a]; })//当前的\r\n\r\n\r\n        if (theme_Index_arrary.current === null) {\r\n            theme_Index_arrary.current = sortedThemearrary\r\n        }\r\n\r\n\r\n\r\n        const theme_color_map_temp = {}\r\n        for (let theme_year of nodeSet) {\r\n            const year = Number(theme_year.substring(theme_year.length - 4))\r\n            const theme = theme_year.substring(0, theme_year.length - 5)\r\n            const themeIndex = theme_Index_arrary.current.indexOf(theme)\r\n            theme_color_map_temp[theme] = echartTheme.color[themeIndex % echartTheme.color.length]\r\n            nodes.push(\r\n                {\r\n                    name: theme_year,\r\n                    depth: year - yearstart,\r\n                    itemStyle: {\r\n                        color: echartTheme.color[themeIndex % echartTheme.color.length]\r\n                    },\r\n                    value: 0.005\r\n                }\r\n            )\r\n            // console.log(\"theme_color_map_temp\",theme_color_map_temp)\r\n            set_theme_color_map(theme_color_map_temp)\r\n        }\r\n        return {\r\n            nodes: nodes,\r\n            links: links\r\n        }\r\n    }\r\n\r\n    const chart = useRef(null)\r\n\r\n    const initChart = () => {\r\n        var chartDom = document.getElementById(UID.current);\r\n        var myChart = echarts.init(chartDom, \"default\");\r\n        chart.current = myChart\r\n        myChart.setOption({\r\n            title: {\r\n                text: '主题演化图'\r\n            },\r\n            tooltip: {\r\n                trigger: 'item',\r\n                triggerOn: 'mousemove',\r\n                formatter: function (paprms) {\r\n                    if (paprms.dataType === \"node\") {\r\n                        const theme_year = paprms.data.name\r\n                        const year = Number(theme_year.substring(theme_year.length - 4))\r\n                        const theme = theme_year.substring(0, theme_year.length - 5)\r\n                        return \"年份: \" + year + \"</br>主题: \" + theme + \"</br>权重: \" + paprms.value\r\n                    } else {\r\n                        const source = paprms.data.source\r\n                        const target = paprms.data.target\r\n                        const value = paprms.data.value\r\n                        return \"从\" + source + \"</br>到\" + target + \"</br>计数\" + value\r\n                    }\r\n                },\r\n                position: function (pos, params, dom, rect, size) {\r\n                    // 鼠标在左侧时 tooltip 显示到右侧，鼠标在右侧时 tooltip 显示到左侧。\r\n                    // var obj = { top: 60 };\r\n                    let obj = {\r\n                        left: 20,\r\n                        bottom: 20\r\n                    }\r\n                    // obj[['left', 'right'][+(pos[0] < size.viewSize[0] / 2)]] = 5;\r\n                    // obj[['top', 'bottom'][+(pos[1] < size.viewSize[1] / 2)]] = 5;\r\n                    return obj;\r\n                }\r\n            },\r\n            series: [\r\n                {\r\n                    type: 'sankey',\r\n                    layoutIterations: 32,\r\n                    data: [],\r\n                    links: [],\r\n                    // emphasis: {\r\n                    //     focus: 'adjacency'\r\n                    // },\r\n                    lineStyle: {\r\n                        color: 'gradient',\r\n                        curveness: 0.4\r\n                    },\r\n                    label: {\r\n                        show: false\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n        myChart.on(\"mouseover\", (args) => {\r\n            if (args.dataType === \"edge\") {\r\n\r\n            } else if (args.dataType === \"node\") {\r\n                const theme_year = args.data.name\r\n                const year = Number(theme_year.substring(theme_year.length - 4))\r\n                setsmallViewYear(year)\r\n                const theme = theme_year.substring(0, theme_year.length - 5)\r\n                console.log(\"hilightCom(theme)\",theme)\r\n                hilightCom(theme)\r\n            }\r\n        })\r\n        myChart.on(\"mouseout\", (args) => {\r\n            disHilightCom()\r\n        })\r\n        // PubSub.subscribe(\"sank_author_selected\",(msg,name) => {\r\n        //     console.log(\"pub recve sank_author_selected\",name)\r\n        //     hilightAuthor(name)\r\n        // })\r\n    }\r\n\r\n    const initOption = (data, type) => {\r\n        if (type === \"hide\") {\r\n            chart.current.setOption({\r\n                series: [\r\n                    {\r\n                        data: data.nodes,\r\n                        links: data.links,\r\n                        lineStyle: {\r\n                            opacity: 0.1\r\n                        },\r\n                        itemStyle: {\r\n                            opacity: 0.3\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        } else {\r\n            chart.current.setOption({\r\n                series: [\r\n                    {\r\n                        data: data.nodes,\r\n                        links: data.links,\r\n                        lineStyle: {\r\n                            opacity: 0.2\r\n                        },\r\n                        itemStyle: {\r\n                            opacity: 1\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n        drawPie(data.links)\r\n    }\r\n\r\n    const usingGraphData = useRef(null)\r\n\r\n    const calAuthorLinks = (list) => {\r\n        const layer = new Map()\r\n        for (let rec of list) {\r\n            if (layer[rec[\"year\"]] === undefined) {\r\n                layer[rec[\"year\"]] = [rec]\r\n            } else {\r\n                layer[rec[\"year\"]].push(rec)\r\n            }\r\n        }\r\n        const years = Object.keys(layer)\r\n        if (years.length > 1) {\r\n\r\n            const links = []\r\n            for (let i = 0; i < years.length - 1; i++) {\r\n                const currentYear = years[i]\r\n                const nextYear = years[i + 1]\r\n                for (let rec_i of layer[currentYear]) {\r\n\r\n                    for (let rec_j of layer[nextYear]) {\r\n                        if (rec_i[\"theme\"] === rec_j[\"theme\"]) {\r\n                            links.push(rec_i[\"theme\"] + \"_\" + currentYear + \"==>\" + rec_j[\"theme\"] + \"_\" + nextYear)\r\n                        } else {\r\n                            const rec_first = layer[currentYear][0]\r\n                            links.push(rec_first[\"theme\"] + \"_\" + currentYear + \"==>\" + rec_j[\"theme\"] + \"_\" + nextYear)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return links\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n\r\n    const getComHilightGraph = (comName) => {//高亮相关社区  不产生新边 只修改样式\r\n        let currentLinks = []\r\n        const hilightNodes = []\r\n        for (let link of usingGraphData.current.links) {\r\n            const sourceFlag = link.source.substring(0, link.source.length - 5) === comName\r\n            const targetFlag = link.target.substring(0, link.source.length - 5) === comName\r\n            if (sourceFlag && targetFlag) {//起始都是\r\n                hilightNodes.push(link.source)\r\n                hilightNodes.push(link.target)\r\n                currentLinks.push({\r\n                    source: link.source,\r\n                    target: link.target,\r\n                    value: link.value,\r\n                    lineStyle: {\r\n                        color: \"#9C27B0\",\r\n                        opacity: 0.8\r\n                    }\r\n                })\r\n            } else if (sourceFlag && !targetFlag) {//由此领域分流到其他领域的\r\n                if (ref_checkStause.current[\"toOther\"] === true) {\r\n                    if (ref_checkStause.current[\"toOtherLable\"] === true) {\r\n                        hilightNodes.push(link.target)\r\n                    }\r\n                    currentLinks.push({\r\n                        source: link.source,\r\n                        target: link.target,\r\n                        value: link.value,\r\n                        lineStyle: {\r\n                            color: \"#2196F3\",\r\n                            opacity: 0.8\r\n                        }\r\n                    })\r\n                } else {\r\n                    currentLinks.push({\r\n                        source: link.source,\r\n                        target: link.target,\r\n                        value: link.value,\r\n                    })\r\n                }\r\n\r\n            } else if (!sourceFlag && targetFlag) {//汇向此领域的其他领域\r\n                if (ref_checkStause.current[\"fromOther\"] === true) {\r\n                    if (ref_checkStause.current[\"fromOtherLable\"] === true) {\r\n                        hilightNodes.push(link.source)\r\n                    }\r\n                    currentLinks.push({\r\n                        source: link.source,\r\n                        target: link.target,\r\n                        value: link.value,\r\n                        lineStyle: {\r\n                            color: \"#4CAF50\",\r\n                            opacity: 0.8\r\n                        }\r\n                    })\r\n                } else {\r\n                    currentLinks.push({\r\n                        source: link.source,\r\n                        target: link.target,\r\n                        value: link.value,\r\n                    })\r\n                }\r\n\r\n            } else {//其他\r\n                currentLinks.push(link)\r\n            }\r\n        }\r\n        const currentNodes = []\r\n        for (let node of usingGraphData.current.nodes) {\r\n            if (hilightNodes.indexOf(node.name) !== -1) {\r\n                const theme = node.name.substring(0, node.name.length - 5)\r\n                const themeIndex = theme_Index_arrary.current.indexOf(theme)\r\n                currentNodes.push({\r\n                    name: node.name,\r\n                    depth: node.depth,\r\n                    itemStyle: {\r\n                        opacity: 1,\r\n                        color: echartTheme.color[themeIndex % echartTheme.color.length]\r\n                    },\r\n                    label: {\r\n                        show: true\r\n                    }\r\n                })\r\n            } else {\r\n                currentNodes.push(node)\r\n            }\r\n        }\r\n        return {\r\n            nodes: currentNodes,\r\n            links: currentLinks\r\n        }\r\n    }\r\n\r\n    const getAuthorHilightGraph = (authorName) => {//高亮一个作者  产生新边\r\n        let currentLinks = []\r\n        let authorHistory = []\r\n        for (let i = 0; i < props.sankdata.length; i++) {\r\n            if (props.sankdata[i].length > 0 && props.sankdata[i][0].name === authorName) {\r\n                authorHistory = props.sankdata[i]\r\n                break\r\n            }\r\n        }\r\n        const authorLinks = calAuthorLinks(authorHistory)\r\n\r\n        const lineWidth = 2\r\n        const hilightNodes = []\r\n\r\n        // console.log(\"visualArgs.current === null\",visualArgs.current )\r\n\r\n        for (let link of usingGraphData.current.links) {\r\n            const stringfyLink = link.source + '==>' + link.target\r\n            if (authorLinks.indexOf(stringfyLink) != -1) {\r\n                hilightNodes.push(link.source)\r\n                hilightNodes.push(link.target)\r\n                currentLinks.push({\r\n                    source: link.source,\r\n                    target: link.target,\r\n                    value: link.value - lineWidth < 0 ? 0 : (link.value - lineWidth) / 2\r\n                })\r\n                currentLinks.push({\r\n                    source: link.source,\r\n                    target: link.target,\r\n                    value: lineWidth,\r\n                    lineStyle: {\r\n                        color: \"#d90051\",\r\n                        opacity: 1\r\n                    }\r\n                })\r\n                currentLinks.push({\r\n                    source: link.source,\r\n                    target: link.target,\r\n                    value: link.value - lineWidth < 0 ? 0 : (link.value - lineWidth) / 2\r\n                })\r\n            } else {\r\n                currentLinks.push(link)\r\n            }\r\n        }\r\n\r\n        const currentNodes = []\r\n        for (let node of usingGraphData.current.nodes) {\r\n            if (hilightNodes.indexOf(node.name) !== -1) {\r\n                const theme = node.name.substring(0, node.name.length - 5)\r\n                const themeIndex = theme_Index_arrary.current.indexOf(theme)\r\n\r\n\r\n                currentNodes.push({\r\n                    name: node.name,\r\n                    depth: node.depth,\r\n                    itemStyle: {\r\n                        opacity: 1,\r\n                        color: echartTheme.color[themeIndex % echartTheme.color.length]\r\n\r\n                    },\r\n                    label: {\r\n                        show: true\r\n                    }\r\n                })\r\n            } else {\r\n                currentNodes.push(node)\r\n            }\r\n        }\r\n        return {\r\n            nodes: currentNodes,\r\n            links: currentLinks\r\n        }\r\n    }\r\n\r\n    //考虑数据的同步 变化年份区间，仍然保持高亮作者？社区\r\n    const visualArgs = useRef({ author: \"\", com: \"\" })\r\n\r\n\r\n    const hilightAuthor = (name) => {//\r\n        console.log(\"hilightAuthor\", name, visualArgs.current.author)\r\n        if (visualArgs.current.author !== name) {\r\n            visualArgs.current.author = name\r\n            handleArgsChange(\"author\")\r\n        }\r\n    }\r\n    const hilightCom = (com) => {\r\n        if (visualArgs.current.com !== com) {\r\n            visualArgs.current.com = com\r\n            handleArgsChange(\"com\")\r\n        }\r\n    }\r\n    const disHilightAuthor = () => {\r\n        hilightAuthor(\"\")\r\n    }\r\n    const disHilightCom = () => {\r\n        hilightCom(\"\")\r\n    }\r\n\r\n    const dishilightAll = () => {\r\n        if (visualArgs.current.author !== \"\" || visualArgs.current.com !== \"\") {\r\n            visualArgs.current.author = \"\"\r\n            visualArgs.current.com = \"\"\r\n            handleArgsChange(\"none\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const handleArgsChange = (type) => {\r\n\r\n        if (type === \"year\") {//如果是年 则修改原始数据\r\n            usingGraphData.current = crerateGraph(props.sankdata, valueRef.current[0], valueRef.current[1])\r\n        }\r\n        if (visualArgs.current.author === \"\" && visualArgs.current.com === \"\") {//如果两个参数都为空 即没有筛选\r\n            initOption(usingGraphData.current, \"normal\")\r\n        } else if (visualArgs.current.author !== \"\" && visualArgs.current.com === \"\") {//高亮作者\r\n            initOption(getAuthorHilightGraph(visualArgs.current.author), \"hide\")//\r\n        } else if (visualArgs.current.author === \"\" && visualArgs.current.com !== \"\") {//高亮领域\r\n            initOption(getComHilightGraph(visualArgs.current.com), \"hide\")\r\n        } else {//两个都高亮\r\n            const tmp = JSON.parse(JSON.stringify(usingGraphData.current))\r\n            usingGraphData.current = getAuthorHilightGraph(visualArgs.current.author)\r\n            initOption(getComHilightGraph(visualArgs.current.com), \"hide\")\r\n            usingGraphData.current = tmp\r\n        }//无论如何   时刻保持year原始筛选数据\r\n    }\r\n\r\n\r\n\r\n    const [smallViewSankData, setsmallViewSankData] = useState([])\r\n    const [smallViewYear, setsmallViewYear] = useState(2020)\r\n    const initPaperData = () => {\r\n        if (props.sankdata.length === 0) {\r\n            console.log(\"empty\")\r\n        } else {\r\n            usingGraphData.current = crerateGraph(props.sankdata, valueRef.current[0], valueRef.current[1])\r\n            setsmallViewSankData(props.sankdata)\r\n            initOption(usingGraphData.current, \"init\")\r\n\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(initChart, [])\r\n    useEffect(initPaperData, [props.sankdata])\r\n\r\n\r\n\r\n\r\n\r\n    const smallChart = useRef(null)\r\n\r\n\r\n\r\n    const chartLinksLast = useRef(0)\r\n    const drawPie = (chartLinks) => {\r\n        return \"pass\"\r\n        console.log(chartLinks.length)\r\n        if (chartLinks.length === chartLinksLast.current) {\r\n            return 0\r\n        }\r\n        chartLinksLast.current = chartLinks.length\r\n        const sourcevalue = {}\r\n        const targetvalue = {}\r\n        for (let link of chartLinks) {\r\n            sourcevalue[link.source] = sourcevalue[link.source] + link.value || link.value\r\n            targetvalue[link.target] = targetvalue[link.target] + link.value || link.value\r\n        }\r\n        const node_value = {}\r\n        for (let link of chartLinks) {\r\n            node_value[link.source] = Math.max(sourcevalue[link.source] || 0, targetvalue[link.source] || 0)\r\n            node_value[link.target] = Math.max(sourcevalue[link.target] || 0, targetvalue[link.target] || 0)\r\n        }\r\n        const themeSet = new Set()\r\n\r\n        const pie_year_map = {}//领域统计\r\n        Object.keys(node_value).forEach(theme_year => {\r\n            const year = Number(theme_year.substring(theme_year.length - 4))\r\n            const theme = theme_year.substring(0, theme_year.length - 5)\r\n            const value = node_value[theme_year]\r\n            themeSet.add(theme)\r\n            if (pie_year_map[year] === undefined) {\r\n                pie_year_map[year] = {}\r\n            }\r\n            pie_year_map[year][theme] = value\r\n        })\r\n\r\n        const totalSerisNum = Object.keys(pie_year_map).length\r\n        const pieSeries = []\r\n\r\n        Object.keys(pie_year_map).forEach((year, index) => {\r\n            const data = []\r\n            Object.keys(pie_year_map[year]).forEach(theme => {\r\n                data.push(\r\n                    {\r\n                        name: theme,\r\n                        value: pie_year_map[year][theme],\r\n                    }\r\n                )\r\n            })\r\n\r\n            pieSeries.push({\r\n                name: year + \"\",\r\n                type: 'pie',\r\n                selectedMode: 'single',\r\n                radius: [Math.floor(80 * index / totalSerisNum) + \"%\", Math.floor(80 * (index + 1) / totalSerisNum) + \"%\"],\r\n                label: {\r\n                    position: 'inner',\r\n                    fontSize: 14,\r\n                    show: false\r\n                },\r\n                labelLine: {\r\n                    show: false\r\n                },\r\n                data: data,\r\n                itemStyle: {\r\n                    normal: {\r\n                        opacity: 0.9\r\n                    },\r\n                    emphasis: {\r\n                        opacity: 1,\r\n                        borderColor: \"#000000\",\r\n                        borderWidth: 1,\r\n                        shadowColor: 'rgba(0, 0, 0, 0.5)',\r\n                        shadowBlur: 10\r\n                    }\r\n                }\r\n            })\r\n        })\r\n\r\n        const chartDom = echarts.init(document.getElementById(\"snaksmallpieview\"), \"default\")\r\n        chartDom.clear()\r\n        chartDom.setOption(\r\n            {\r\n                tooltip: {\r\n                    trigger: 'item',\r\n                    formatter: '{a} <br/>{b}: {c} ({d}%)'\r\n                },\r\n                label: {\r\n                    show: false\r\n                },\r\n                legend: {\r\n                    type: \"scroll\",\r\n                    data: Array.from(themeSet)\r\n                },\r\n                series: pieSeries\r\n            }\r\n        )\r\n        chartDom.on(\"mouseover\", (args) => {\r\n            hilightCom(args.data.name)\r\n            // console.log(args.data.name)\r\n        })\r\n        chartDom.on(\"mouseout\", (args) => {\r\n            disHilightCom()\r\n        })\r\n        // chartDom.on('legendselected', function (params) {\r\n        //     chartDom.setOption({\r\n        //         legend: { selected: { [params.name]: false } }\r\n        //     })\r\n        //     console.log('点击了', params.name);\r\n        //     // do something\r\n        // })\r\n        // chartDom.on('legendunselected', function (params) {\r\n        //     chartDom.setOption({\r\n        //         legend: { selected: { [params.name]: true } }\r\n        //     })\r\n        //     console.log('点击了', params.name);\r\n        //     // do something\r\n        // })\r\n\r\n        chartDom.on('highlight', function (params) {\r\n            // console.log('highlight', params.name);\r\n            hilightCom(params.name)\r\n        })\r\n        chartDom.on('downplay', function (params) {\r\n            disHilightCom()\r\n        })\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleSideerChange_1 = (event, newValue) => {\r\n        setsiderValue_1(newValue);\r\n    };\r\n    const [siderValue_1, setsiderValue_1] = useState(10)\r\n\r\n\r\n    const ref_checkStause = useRef({\r\n        fromOther: false,\r\n        toOther: false,\r\n        fromOtherLable: false,\r\n        toOtherLable: false\r\n    })\r\n    const [checkStause, changCheckStause] = useState({\r\n        fromOther: false,\r\n        toOther: false,\r\n        fromOtherLable: false,\r\n        toOtherLable: false\r\n    })\r\n    const handelCheckChnage = (args) => {\r\n        if (args === undefined) {\r\n            return\r\n        }\r\n\r\n        const tmp = { ...checkStause }\r\n        tmp[args] = !tmp[args]\r\n\r\n        if (args === \"toOther\") {\r\n            if (tmp[\"toOther\"] === true) {//同步开启关闭 \r\n                tmp[\"toOtherLable\"] = true\r\n            } else {\r\n                tmp[\"toOtherLable\"] = false\r\n            }\r\n        }\r\n        if (args === \"fromOther\") {\r\n            if (tmp[\"fromOther\"] === true) {//同步开启关闭 \r\n                tmp[\"fromOtherLable\"] = true\r\n            } else {\r\n                tmp[\"fromOtherLable\"] = false\r\n            }\r\n\r\n        }\r\n        changCheckStause(tmp)\r\n        ref_checkStause.current = tmp\r\n    }\r\n\r\n    // const [anchorEl,setanchorEl] = useState(null)\r\n    // const [authorMenuOpen,setauthorMenuOpen] = useState(true)\r\n    // const handleauthorMenuClose = () =>{\r\n\r\n    // }\r\n\r\n    const [searchValue, setsearchValue] = useState(\"\")\r\n    const ref_searchValue = useRef(\"\")\r\n    const changeSearchValue = (event) => {\r\n        ref_searchValue.current = event.target.value\r\n        setsearchValue(event.target.value)\r\n        // console.log(ref_searchValue.current)\r\n    }\r\n\r\n\r\n\r\n\r\n    const doSearch = () => {\r\n        console.log(ref_searchValue.current)\r\n        hilightAuthor(ref_searchValue.current)\r\n    }\r\n\r\n    return (\r\n\r\n\r\n        <div style={{ display: \"inline\" }} >\r\n            <div style={{ display: \"inline\" }} >\r\n                <div style={{\r\n                    width: 1050,\r\n                    height: 850,\r\n                    float: \"left\",\r\n                    overflow: \"hidden\"\r\n                }}>\r\n                    <div id={UID.current} style={{\r\n                        width: 1100,\r\n                        height: 850,\r\n                    }} />\r\n                </div>\r\n            </div>\r\n\r\n            <Paper style={\r\n                {\r\n                    width: 550,\r\n                    height: 840,\r\n                    float: \"right\"\r\n                }\r\n            } elevation={3} >\r\n\r\n                <FieldDistribution\r\n                    sankData={smallViewSankData}\r\n                    year={smallViewYear}\r\n                    colorMap={theme_color_map}\r\n                    hilightAuthor={hilightAuthor}\r\n                    style={\r\n                        {\r\n                            width: 550,\r\n                            height: 550\r\n                        }\r\n                    }\r\n                />\r\n                <Grid\r\n                    container\r\n                    spacing={3}\r\n                // direction=\"column\"\r\n                // justify=\"center\"\r\n                // alignItems=\"flex-start\"\r\n                >\r\n\r\n                    <Grid item xs={12} spacing={3}>\r\n                        <div style={{\r\n                            marginLeft: 50\r\n                        }}>\r\n                            <AccountCircleIcon\r\n                                color=\"secondary\"\r\n                            />\r\n                            <TextField\r\n                                style={{ marginTop: -20, marginLeft: 10 }}\r\n                                color=\"secondary\"\r\n                                label=\"查询作者\"\r\n                                value={searchValue}\r\n                                onChange={changeSearchValue}\r\n                                onKeyDown={(e) => {\r\n                                    if (e.keyCode === 13) {\r\n                                        doSearch()\r\n                                    }\r\n                                }}\r\n                            />\r\n                            <Button\r\n                                style={{ marginLeft: 10, marginTop: -20, width: 80 }}\r\n                                variant=\"outlined\"\r\n                                color=\"primary\"\r\n                                onClick={doSearch}\r\n                            >\r\n                                搜索\r\n                            </Button>\r\n\r\n                            <Button\r\n                                style={{ marginLeft: 10, marginTop: -20, width: 80 }}\r\n                                variant=\"outlined\"\r\n                                color=\"secondary\"\r\n                                onClick={() => {\r\n                                    changeSearchValue({\r\n                                        target: {\r\n                                            value: \"\"\r\n                                        }\r\n                                    })\r\n                                    disHilightAuthor()\r\n                                }}\r\n                            >\r\n                                清空\r\n                            </Button>\r\n\r\n\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <div style={{ width: 450, marginLeft: 50, display: \"inline-flex\" }}>\r\n                            <Chip\r\n                                icon={<ArrowBackIcon />}\r\n                                style={{ width: 100 }}\r\n                                label={checkStause[\"fromOther\"] ? \"show\" : \"hide\"}\r\n                                color={checkStause[\"fromOther\"] ? \"primary\" : \"secondary\"}\r\n                                variant=\"outlined\"\r\n                            />\r\n                            <div style={{ marginLeft: 3 }} >\r\n                                <Switch\r\n                                    checked={checkStause[\"fromOther\"]}\r\n                                    onChange={() => { handelCheckChnage(\"fromOther\") }}\r\n                                    name=\"checkedA\"\r\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={<Switch\r\n                                        checked={checkStause[\"fromOtherLable\"]}\r\n                                        onChange={() => { handelCheckChnage(\"fromOtherLable\") }}\r\n                                        name=\"checkedA\"\r\n                                        inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                        label=\"标签显示\"\r\n                                    />}\r\n                                    label=\"标签显示\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n\r\n\r\n                    <Grid item xs={12}>\r\n                        <div style={{ width: 450, marginLeft: 50, display: \"inline-flex\" }}>\r\n                            <Chip\r\n                                icon={<ArrowForwardIcon />}\r\n                                style={{ width: 100 }}\r\n                                label={checkStause[\"toOther\"] ? \"show\" : \"hide\"}\r\n                                color={checkStause[\"toOther\"] ? \"primary\" : \"secondary\"}\r\n                                variant=\"outlined\"\r\n                            />\r\n                            <div style={{ marginLeft: 3 }} >\r\n                                <Switch\r\n                                    checked={checkStause[\"toOther\"]}\r\n                                    onChange={() => { handelCheckChnage(\"toOther\") }}\r\n                                    name=\"checkedA\"\r\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={<Switch\r\n                                        checked={checkStause[\"toOtherLable\"]}\r\n                                        onChange={() => { handelCheckChnage(\"toOtherLable\") }}\r\n                                        name=\"checkedA\"\r\n                                        inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                    />}\r\n                                    label=\"标签显示\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} spacing={3}>\r\n                        <div style={{\r\n                            marginLeft: 50,\r\n                            marginTop: 15\r\n                        }}>\r\n                            <Chip\r\n                                // icon={<WifiTetheringIcon />}\r\n                                style={{ marginTop: -21 }}\r\n                                label={\"起始年份\" + value[0]}\r\n                                color={\"primary\"}\r\n                                variant=\"outlined\"\r\n                            />\r\n                            <Chip\r\n                                // icon={<WifiTetheringIcon />}\r\n                                style={{ marginTop: -21, marginLeft: 20 }}\r\n                                label={\"结束年份\" + value[1]}\r\n                                color={\"primary\"}\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </div>\r\n                    </Grid>\r\n\r\n\r\n                    <Grid item xs={12} spacing={3}>\r\n                        <PrettoSlider style={{ width: 450, marginLeft: 50, marginTop: -3, color: \"#FF5722\" }} min={1990} max={2020} value={value} onChange={handleChange} />\r\n                    </Grid>\r\n\r\n\r\n\r\n                </Grid>\r\n            </Paper>\r\n            {/* <div style={{ width: 300, height: 300 ,float:\"left\"}} id=\"snaksmallpieview\" /> */}\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect, useLayoutEffect, useRef } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        width: 800,\r\n        margin: \"0 auto\",\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n            margin: theme.spacing(0.5),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function DataPreview(props) {\r\n    const classes = useStyles();\r\n\r\n    const Attributes = [\r\n        \"Conference\",\r\n        \"Year\",\r\n        \"Title\",\r\n        \"DOI\",\r\n        \"Link\",\r\n        \"FirstPage\",\r\n        \"LastPage\",\r\n        \"PaperType\",\r\n        \"Abstract\",\r\n        \"AuthorNames-Deduped\",\r\n        \"AuthorNames\",\r\n        \"AuthorAffiliation\",\r\n        \"InternalReferences\",\r\n        \"AuthorKeywords\",\r\n        \"AminerCitationCount_02-2019\",\r\n        \"XPloreCitationCount_02-2019\",\r\n        \"PubsCited\",\r\n        \"Award\",\r\n    ]\r\n\r\n\r\n\r\n    const [showAttributes, setShowAttributes] = useState([\"Title\", \"AuthorNames-Deduped\", \"Year\", \"DOI\", \"Link\", \"PubsCited\"])\r\n\r\n    const  handleDelete =(args) => {\r\n        setShowAttributes(showAttributes.filter( attr =>  attr!== args ))\r\n    }\r\n    const handelAdd = (args) =>{\r\n        setShowAttributes([...showAttributes,args])\r\n    }\r\n\r\n    const [paperData,setPaperData] = useState([])\r\n    useEffect(()=>{\r\n        setPaperData(props.paperData)\r\n    },[props.paperData]  )\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.root}>\r\n                {\r\n                    Attributes.map(\r\n                        row => {\r\n                            if (showAttributes.indexOf(row) !== -1) {\r\n                                return (\r\n                                    <Chip\r\n                                        label={row}\r\n                                        key={row}\r\n                                        onDelete={() => {handleDelete(row)}}\r\n                                        variant=\"outlined\"\r\n                                        clickable\r\n                                        color=\"secondary\"\r\n                                        onClick={() => {handleDelete(row)}}\r\n                                    />\r\n                                )\r\n\r\n                            } else {\r\n                                return (\r\n                                    <Chip\r\n                                        label={row}\r\n                                        key={row}\r\n                                        variant=\"outlined\"\r\n                                        clickable \r\n                                        color=\"primary\"\r\n                                        onClick={()=>{handelAdd(row)}}\r\n                                        onDelete={() => {handelAdd(row)}}\r\n                                        deleteIcon={<AddIcon />}\r\n                                    />\r\n                                )\r\n                            }\r\n                        }\r\n\r\n                    )\r\n                }\r\n            </div>\r\n            <TableContainer component={Paper} style={{maxHeight:680}} >\r\n\r\n                <Table stickyHeader aria-label=\"sticky table\">\r\n                    <TableHead    >\r\n                        <TableRow>\r\n                            {\r\n                                showAttributes.map(\r\n                                    row => (<TableCell key={row}>{row}</TableCell>)\r\n                                )\r\n                            }\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {paperData.map((row) => (\r\n                            <TableRow key={row.Title}>\r\n                                {\r\n                                    showAttributes.map(attr => (<TableCell key={attr + \"_\" + row.Title} >{row[attr]}</TableCell>))\r\n                                }\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect, useRef, useLayoutEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from '../reportWebVitals';\r\nimport * as echarts from 'echarts';\r\nimport 'echarts-gl';\r\nimport uuid from \"uuid\"\r\nimport { use } from 'echarts';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport PubSub from 'pubsub-js'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport LinearScaleIcon from '@material-ui/icons/LinearScale';\r\nimport GrainIcon from '@material-ui/icons/Grain';\r\nimport PanoramaVerticalIcon from '@material-ui/icons/PanoramaVertical';\r\nimport WifiTetheringIcon from '@material-ui/icons/WifiTethering';\r\nimport { echartTheme } from \"../echartTheme\"\r\n\r\n\r\nexport default function MainKeywordGraph(props) {\r\n    const UID = useRef(uuid.v1())\r\n\r\n    const visualConfig = {\r\n        sizeRange: 80,\r\n        minSize: 20,\r\n        category: 10\r\n    }\r\n\r\n    const crerateGraph = (paperList) => {\r\n        const kwCount = {}\r\n        paperList.forEach(paper => {\r\n            paper.AuthorKeywords.split(\",\").forEach(\r\n                rawKw => {\r\n                    const kw = rawKw.replace(/(^\\s*)|(\\s*$)/g, \"\").toLowerCase()\r\n                    kwCount[kw] = kwCount[kw] === undefined ? 1 : kwCount[kw] + 1\r\n                }\r\n            )\r\n        })\r\n\r\n        let miniCount = 2\r\n\r\n        let result = Object.keys(kwCount).map(kw => {\r\n            return {\r\n                kw: kw,\r\n                count: kwCount[kw]\r\n            }\r\n        }).filter(obj => obj.count > miniCount && obj.kw !== \"\")\r\n\r\n\r\n        while (result.length > 100) {\r\n            miniCount += 1\r\n            console.log(\"minicounr\", miniCount, \"result.length\", result.length)\r\n\r\n            result = Object.keys(kwCount).map(kw => {\r\n                return {\r\n                    kw: kw,\r\n                    count: kwCount[kw]\r\n                }\r\n            }).filter(obj => obj.count > miniCount && obj.kw !== \"\")\r\n        }\r\n        return result\r\n\r\n    }\r\n\r\n    const drawpie = (data) => {\r\n        const small_1 = echarts.init(document.getElementById(\"kwsmallview_1\"), \"default\");\r\n        small_1.setOption(\r\n            {\r\n                title: {\r\n\r\n                },\r\n                tooltip: {\r\n                    trigger: 'item',\r\n                    formatter: \"{b}</br>{c}</br> {d}%\",\r\n                },\r\n                legend: {\r\n                    show: false\r\n                },\r\n                series: [\r\n                    {\r\n                        name: '',\r\n                        type: 'pie',\r\n                        radius: '50%',\r\n                        formatter: \"{d}\",\r\n                        data: data,\r\n                        emphasis: {\r\n                            itemStyle: {\r\n                                shadowBlur: 10,\r\n                                shadowOffsetX: 0,\r\n                                shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                            }\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        )\r\n    }\r\n\r\n    const drawBar = (x, y) => {\r\n        const small_1 = echarts.init(document.getElementById(\"kwsmallview_2\"), \"default\");\r\n        small_1.setOption(\r\n            {\r\n\r\n                tooltip: {\r\n                    trigger: 'axis',\r\n                    formatter: \"{b}</br>{c}</br>\",\r\n                    axisPointer: {\r\n                        type: 'shadow'\r\n                    }\r\n                },\r\n\r\n                legend: {\r\n                    data: ['']\r\n                },\r\n                grid: {\r\n                    left: '3%',\r\n                    right: '4%',\r\n                    bottom: '3%',\r\n                    containLabel: true\r\n                },\r\n                xAxis: {\r\n                    type: 'value',\r\n                    boundaryGap: [0, 0.01]\r\n                },\r\n                yAxis: {\r\n                    type: 'category',\r\n                    data: x\r\n                },\r\n                series: [\r\n                    {\r\n                        name: '',\r\n                        type: 'bar',\r\n                        data: y.sort((a, b) => a.value - b.value)\r\n                    },\r\n                ]\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    const initOption = (data) => {\r\n        var chartDom = document.getElementById(UID.current);\r\n        var myChart = echarts.init(chartDom, \"default\");\r\n        const nodes = []\r\n\r\n        const max = Math.max(...data.map(obj => obj.count))\r\n        const min = Math.min(...data.map(obj => obj.count))\r\n        const subval = max - min\r\n\r\n        const categories = []\r\n        for (let i = 0; i < visualConfig.category; i++) {\r\n            categories.push({\r\n                name: \"\"\r\n            })\r\n        }\r\n\r\n        const pieNodes = []\r\n        const bar_x = []\r\n        const bar_y = []\r\n\r\n\r\n        data.forEach(obj => {\r\n            const category_num = Math.floor(((obj.count - min) / subval) * visualConfig.category) + 1\r\n            pieNodes.push(\r\n                {\r\n                    name: obj.kw,\r\n                    value: obj.count,\r\n                    label: {\r\n                        show: ((obj.count - min) / subval) > 0.1\r\n                    },\r\n                    itemStyle: {\r\n                        color: echartTheme.color[category_num % echartTheme.color.length]\r\n                    }\r\n                }\r\n            )\r\n\r\n            bar_x.push(obj.kw)\r\n            bar_y.push({\r\n                name: obj.kw,\r\n                value: obj.count,\r\n                itemStyle: {\r\n                    color: echartTheme.color[category_num % echartTheme.color.length]\r\n                }\r\n            })\r\n            nodes.push(\r\n                {\r\n                    name: obj.kw,\r\n                    value: obj.count,\r\n                    symbolSize: ((obj.count - min) / subval) * visualConfig.sizeRange + visualConfig.minSize,\r\n                    label: {\r\n                        show: ((obj.count - min) / subval) > 0.1,\r\n                        fontSize: Math.floor(6 * ((obj.count - min) / subval)) + 10,\r\n                        color: \"#000000\"\r\n                    },\r\n                    itemStyle: {\r\n                        color: echartTheme.color[category_num % echartTheme.color.length]\r\n                    }\r\n                }\r\n            )\r\n        })\r\n\r\n\r\n\r\n\r\n\r\n        const option = {\r\n            title: {\r\n                text: '关键词分布'\r\n            },\r\n            tooltip: {\r\n                        trigger: 'item',\r\n                        formatter: \"{b}</br>{c}\",\r\n                    },\r\n            series: [\r\n\r\n                {\r\n                    \r\n\r\n                    type: 'graph',\r\n                    layout: 'force',\r\n                    roam: true,\r\n                    data: nodes,\r\n                    force: {\r\n                        gravity: 0.4,\r\n                        repulsion: 600,\r\n                        layoutAnimation: false,\r\n                    },\r\n                    edges: [],\r\n                    categories: categories,\r\n\r\n                }\r\n            ]\r\n        };\r\n        myChart.setOption(option);\r\n        myChart.on(\"click\", args => {\r\n            props.doSearch(args.data.name)\r\n        })\r\n        drawpie(pieNodes)\r\n        drawBar(bar_x, bar_y)\r\n    }\r\n\r\n    const handelGrapgChange = () => {\r\n        if (props.paperData === null) {\r\n            console.log(\"empty\")\r\n        } else {\r\n            initOption(crerateGraph(props.paperData))\r\n\r\n        }\r\n    }\r\n\r\n    const initPaperData = () => {\r\n        handelGrapgChange()\r\n    }\r\n\r\n    useEffect(initPaperData, [props.paperData])\r\n\r\n    return (\r\n        <div style={{ display: \"inline\" }}>\r\n            <div id={UID.current} style={{\r\n                width: 1000,\r\n                height: 840,\r\n                float: \"left\"\r\n            }}>\r\n            </div>\r\n            <div style={\r\n                {\r\n                    width: 420,\r\n                    height: 840,\r\n                    float: \"right\",\r\n                    marginRight: 100\r\n                }\r\n            } elevation={3} >\r\n                <div style={{ width: 420, height: 420 }} id=\"kwsmallview_1\" ></div>\r\n                <div style={{ width: 420, height: 420 }} id=\"kwsmallview_2\" ></div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect, useRef, useLayoutEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from '../App';\r\nimport reportWebVitals from '../reportWebVitals';\r\nimport * as echarts from 'echarts';\r\nimport 'echarts-gl';\r\nimport uuid from \"uuid\"\r\nimport { use, format } from 'echarts';\r\nimport PubSub from 'pubsub-js'\r\nimport { echartTheme } from \"../echartTheme\"\r\nimport G6 from '@antv/g6';\r\nimport * as author_outline from \"./datas/author_outline.json\"\r\nimport * as paper_outline from \"./datas/paper_outline.json\"\r\nimport * as mail_outline from \"./datas/mail_outline.json\"\r\n\r\n\r\nexport default function ContourGrapg(props) {\r\n\r\n\r\n    const UID = useRef(uuid.v1())\r\n\r\n\r\n    const getYearGraph = (nodes, links, comm) => {\r\n        const miniConnect = data_type.current === \"学者\" ? 8 : 0\r\n        const miniComauthorNum = 0\r\n        const edgeConnectNum = {}\r\n\r\n        const overNodes_Set = new Set()\r\n\r\n        const overLinks = []\r\n\r\n        const overComm = []\r\n        links.forEach(link => {\r\n            edgeConnectNum[link.source] = edgeConnectNum[link.source] + 1 || 1\r\n            edgeConnectNum[link.target] = edgeConnectNum[link.target] + 1 || 1\r\n        })\r\n\r\n        for (let nodeName in edgeConnectNum) {\r\n            if (edgeConnectNum[nodeName] > miniConnect) {\r\n                overNodes_Set.add(nodeName)\r\n            }\r\n        }\r\n\r\n        links.forEach(link => {\r\n            if (overNodes_Set.has(link.source) && overNodes_Set.has(link.target)) {\r\n                overLinks.push(link)\r\n            }\r\n        })\r\n\r\n        comm.forEach(author_names => {\r\n            const unicon = new Set([...author_names].filter(x => overNodes_Set.has(x)))\r\n            if (Array.from(unicon).length > miniComauthorNum) {\r\n                overComm.push(Array.from(unicon))\r\n            }\r\n        })\r\n        return {\r\n            nodes: Array.from(overNodes_Set).map((name,index) => ({\r\n                id: name,\r\n                zise: 2, \r\n                style: {\r\n                    fill: echartTheme.color[ index % echartTheme.color.length ],\r\n                    stroke: echartTheme.color[ index % echartTheme.color.length ],\r\n                },\r\n            })),\r\n            links: overLinks,\r\n            comm: overComm\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const graph = useRef(null)\r\n\r\n    const initChart = (yearIndex) => {\r\n\r\n        \r\n\r\n        let outlinedata = null\r\n        if (data_type.current === \"论文\") {\r\n            outlinedata = paper_outline.default\r\n        } else if(data_type.current === \"学者\") {\r\n            outlinedata = author_outline.default\r\n        }else if(data_type.current === \"邮件\") {\r\n            outlinedata = mail_outline.default\r\n        }else{\r\n            return\r\n        }\r\n\r\n        const yearOutlineGraph = getYearGraph(outlinedata.nodes[yearIndex], outlinedata.edges[yearIndex], outlinedata.comm[yearIndex])\r\n        \r\n        console.log(\"yearOutlineGraph\",yearOutlineGraph)\r\n        // return\r\n        \r\n        \r\n        const width = 500;\r\n        const height = 420;\r\n        document.getElementById(UID.current).innerHTML = \"\";\r\n        const _graph = new G6.Graph({\r\n            container: UID.current,\r\n            width,\r\n            height,\r\n            modes: {\r\n                default: ['drag-canvas', 'zoom-canvas', 'drag-node', 'lasso-select'],\r\n            },\r\n            layout: {\r\n                type: 'force',\r\n                preventOverlap: true,\r\n                linkDistance: 20,\r\n                nodeStrength: -10,\r\n                edgeStrength: 0.3\r\n            },\r\n        });\r\n\r\n        _graph.data({\r\n            nodes: yearOutlineGraph.nodes,\r\n            edges: yearOutlineGraph.links.map(function (edge, i) {\r\n                edge['id'] = 'edge' + i;\r\n                return Object.assign({}, edge);\r\n            }),\r\n        });\r\n        _graph.render();\r\n\r\n\r\n        _graph.on('afterlayout', () => {\r\n            const hulls = []\r\n            yearOutlineGraph.comm.forEach((authorNames,index) => {\r\n                hulls.push(\r\n                    _graph.createHull({\r\n                        id: JSON.stringify(authorNames),\r\n                        type: authorNames.length > 10 ? 'bubble' : 'round-convex',\r\n                        members: authorNames,\r\n                        padding: 10,\r\n                        style: {\r\n                            fill: echartTheme.color[ index % echartTheme.color.length ],\r\n                            stroke: echartTheme.color[ index % echartTheme.color.length ],\r\n                        },\r\n                    })\r\n                )\r\n            })\r\n            _graph.on('afterupdateitem', (e) => {\r\n                for (let i = 0; i < hulls.length; i++) {\r\n                    hulls[i].updateData(hulls[i].members);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        initChart(30)\r\n    }, [])\r\n    const year_control = useRef(2016)\r\n    useEffect(() => {\r\n        year_control.current = props.year\r\n        initChart(year_control.current - 1990)\r\n    }, [props.year])\r\n    const data_type = useRef(\"作者\")\r\n    useEffect(() => {\r\n        data_type.current = props.dataSetSelectValue\r\n        initChart(year_control.current - 1990)\r\n\r\n    }, [props.dataSetSelectValue])\r\n\r\n    return (\r\n        <div id={UID.current} style={props.style}>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect, useRef, useLayoutEffect } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nconst DataTable = (props) => {// [head1,head1,...]   [{head1:data1,head2:data2,head3:data3},...]\r\n    return (\r\n        <TableContainer component={Paper} style={{ maxHeight: props.maxHeight }} >\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead    >\r\n                    <TableRow>\r\n                        {\r\n                            props.head.map(\r\n                                row => (<TableCell key={row}>{row}</TableCell>)\r\n                            )\r\n                        }\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {props.data.map((row) => (\r\n                        <TableRow key={row.Title}>\r\n                            {\r\n                                props.head.map(\r\n                                    attr => (\r\n                                        <TableCell key={attr + \"_\" + row.Title} >\r\n                                            {row[attr]}\r\n                                        </TableCell>\r\n                                    )\r\n                                )\r\n                            }\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}\r\n\r\nexport default function SankYearTable(props) {\r\n    const [data, setdata] = useState([])\r\n    const drawTable = () => {\r\n        if (props.sankData.length === 0) {\r\n            console.log(\"sankdata not load\")\r\n        } else {\r\n            \r\n            const dataTmp = []\r\n            props.sankData.forEach(authorRec => {\r\n                authorRec.forEach(rec => {\r\n                    if (Number(rec.year) === props.year) {\r\n                        dataTmp.push(\r\n                            {\r\n                                \"index\": dataTmp.length,\r\n                                \"theme\": rec.theme,\r\n                                \"name\": rec.name\r\n                            }\r\n                        )\r\n                    }\r\n                })\r\n            })\r\n            setdata(dataTmp)\r\n        }\r\n    }\r\n\r\n    useEffect(drawTable, [props.year, props.sankData])\r\n    return (\r\n        <DataTable\r\n            head={[\"index\", \"theme\", \"name\"]}\r\n            data={data}\r\n            maxHeight={470}\r\n        />\r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect, useRef, useLayoutEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as echarts from 'echarts';\r\nimport 'echarts-gl';\r\nimport uuid from \"uuid\"\r\nimport { use } from 'echarts';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport PubSub from 'pubsub-js'\r\nimport { echartTheme } from \"../echartTheme\"\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport LinearScaleIcon from '@material-ui/icons/LinearScale';\r\nimport GrainIcon from '@material-ui/icons/Grain';\r\nimport PanoramaVerticalIcon from '@material-ui/icons/PanoramaVertical';\r\nimport WifiTetheringIcon from '@material-ui/icons/WifiTethering';\r\nimport LabelOffIcon from '@material-ui/icons/LabelOff';\r\nimport LabelIcon from '@material-ui/icons/Label';\r\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\r\n\r\n\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\n\r\n\r\nimport FieldDistribution from \"./FieldDistribution\"\r\n\r\nimport ContourGrapg from \"./ContourGrapg\"\r\n\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\n\r\n\r\nimport SankYearTable from \"./SankYearTable\"\r\n\r\nimport * as data1 from \"./datas/paper.json\"\r\nimport * as data2 from \"./datas/author.json\"\r\nimport * as data3 from \"./datas/mail.json\"\r\n\r\nimport { LinearProgress } from '@material-ui/core';\r\n\r\nimport ColorMap from \"./ColorMap\"\r\n\r\n\r\nconst [style_hilight, style_normal, style_hidden, style_label] = [0, 1, 2, 3]//样式状态\r\n\r\n\r\nconst PrettoSlider = withStyles({\r\n    root: {\r\n        color: '#52af77',\r\n        height: 8,\r\n    },\r\n    thumb: {\r\n        height: 24,\r\n        width: 24,\r\n        backgroundColor: '#fff',\r\n        border: '2px solid currentColor',\r\n        marginTop: -8,\r\n        marginLeft: -12,\r\n        '&:focus, &:hover, &$active': {\r\n            boxShadow: 'inherit',\r\n        },\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n        left: 'calc(-50% + 4px)',\r\n    },\r\n    track: {\r\n        height: 8,\r\n        borderRadius: 4,\r\n    },\r\n    rail: {\r\n        height: 8,\r\n        borderRadius: 4,\r\n    },\r\n})(Slider);\r\n\r\nconst useStyles = makeStyles((theme) => (\r\n    {\r\n        root: {\r\n            width: 300,\r\n        },\r\n        searchIcon: {\r\n            padding: theme.spacing(0, 2),\r\n            height: '100%',\r\n            position: 'absolute',\r\n            pointerEvents: 'none',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n        inputRoot: {\r\n            color: 'inherit',\r\n        },\r\n        inputInput: {\r\n            padding: theme.spacing(1, 1, 1, 0),\r\n            // vertical padding + font size from searchIcon\r\n            paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n            transition: theme.transitions.create('width'),\r\n            width: '100%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: '30ch',\r\n                '&:focus': {\r\n                    width: '40ch',\r\n                },\r\n            }\r\n        },\r\n        formControl: {\r\n            margin: theme.spacing(1),\r\n            minWidth: 120,\r\n            height: 26\r\n        },\r\n    }\r\n));\r\n\r\nfunction valuetext(value) {\r\n    return `${value}`;\r\n}\r\n\r\n\r\nconst queryData = () => {\r\n\r\n}\r\n\r\n\r\n\r\nexport default function Sankver2(props) {\r\n    const UID = useRef(uuid.v1())\r\n    const rawData = useRef({//原始数据\r\n        links: [],\r\n        nodes: [],\r\n        entry: []\r\n    })\r\n    const year_filtered = useRef({//年份筛选后的数据\r\n        links: [],\r\n        nodes: [],\r\n        entry: []\r\n    })\r\n    const view_data = useRef({//视图驱动使用的数据  没有操作时与年份筛选数据相同\r\n        links: [],\r\n        nodes: [],\r\n        entry: []\r\n    })\r\n\r\n    const [smallViewData, setsmallViewData] = useState([])//小型视图的数据\r\n\r\n    const cal_year = (start, end) => {//筛选年份  从原始数据 到年份筛选后数据 \r\n        year_filtered.current = {\r\n            nodes: rawData.current.nodes.filter(node => {\r\n                const year = Number(node[\"attributes\"][\"year\"])\r\n                return year >= start && year <= end\r\n            }).map(node => {\r\n                return {\r\n                    ...node,\r\n                    depth: node.depth - (start - 1990),\r\n                }\r\n            }),\r\n            links: rawData.current.links.filter(link => {\r\n                const source_year = Number(link[\"attributes\"][\"source_year\"])\r\n                const target_year = Number(link[\"attributes\"][\"target_year\"])\r\n                return source_year >= start && source_year <= end && target_year >= start && target_year <= end\r\n            }),\r\n            entry: rawData.current.entry\r\n        }\r\n        // console.log(\"year_filtered.current \", year_filtered.current)\r\n    }\r\n    const verifySubset = (_set, _subset) => {//只验证单层，如果_subset是_set 的子集则true否则false\r\n        for (let key of Object.keys(_subset)) {\r\n            if ((_set[key] === undefined) || (_set[key] !== _subset[key])) {\r\n                return false\r\n            }\r\n        }\r\n        return true//\r\n    }\r\n    const styleRef = useRef({//控制样式的集合\r\n        node: [{}],\r\n        showlabel: [],\r\n        hilightLink: [],\r\n        normalLink: [{}]\r\n    })\r\n    const styleManager = (type, args) => {//统一管理样式的接口\r\n        //对于节点 显示标签 > 显示  > 隐藏\r\n        //设置 node:[{}] 来匹配所有节点 以显示全部\r\n        //对于边 则\r\n        //显示，隐藏，换色高亮 \r\n\r\n        if (type === \"node\") {\r\n            styleRef.current = {\r\n                ...styleRef.current,\r\n                node: [...styleRef.current.node, ...args]\r\n            }\r\n        } else if (type === \"node_label\") {\r\n            styleRef.current = {\r\n                ...styleRef.current,\r\n                showlabel: [...styleRef.current.showlabel, ...args]\r\n            }\r\n        }\r\n        else if (type === \"link\") {\r\n            styleRef.current = {\r\n                ...styleRef.current,\r\n                normalLink: [...styleRef.current.normalLink, ...args]\r\n            }\r\n        } else if (type === \"link_hl\") {\r\n            styleRef.current = {\r\n                ...styleRef.current,\r\n                hilightLink: [...styleRef.current.hilightLink, ...args]\r\n            }\r\n        } else if (type === \"clear\") {\r\n            styleRef.current = {\r\n                node: [{}],\r\n                showlabel: [],\r\n                hilightLink: [],\r\n                normalLink: [{}]\r\n            }\r\n        } else if (type === \"empty\") {\r\n            styleRef.current = {\r\n                node: [],\r\n                showlabel: [],\r\n                hilightLink: [],\r\n                normalLink: []\r\n            }\r\n        }\r\n    }\r\n    const getNodeType = (attributes) => {//获取节点状态\r\n        for (let node_lb of styleRef.current.showlabel) {\r\n            if (verifySubset(attributes, node_lb)) {\r\n                return style_label\r\n            }\r\n        }\r\n        for (let node_hl of styleRef.current.node) {\r\n            if (verifySubset(attributes, node_hl)) {\r\n                return style_normal\r\n            }\r\n        }\r\n        return style_hidden\r\n    }\r\n    const getLinkType = (attributes) => {//获取边状态\r\n        for (let link_hl of styleRef.current.hilightLink) {\r\n            if (verifySubset(attributes, link_hl)) {\r\n                return style_hilight\r\n            }\r\n        }\r\n        for (let link_normal of styleRef.current.normalLink) {\r\n            if (verifySubset(attributes, link_normal)) {\r\n                return style_normal\r\n            }\r\n        }\r\n        return style_hidden\r\n    }\r\n    const cal_view = () => {//计算视图 从年份数据 以及当前样式控制器 显示视图\r\n        const nodes = []\r\n        const links = []\r\n        const connectedNodes = new Set()//如果高亮一条线  或者普通显示一条线 则其相关节点必定高亮\r\n        let allNormalFlag = true //如果全为普通 则为[{}] 减少运算\r\n        year_filtered.current.links.map(link => {\r\n            const type = getLinkType(link[\"attributes\"])\r\n            if (type === style_hilight || type === style_normal) {\r\n                connectedNodes.add(link.source)\r\n                connectedNodes.add(link.target)\r\n            } else {\r\n                allNormalFlag = false\r\n            }\r\n            let colorAttr = \"gradient\"\r\n            if (type === style_hilight) {\r\n                colorAttr = \"#d90051\"\r\n            }\r\n            let opacity = 0.1\r\n\r\n            if (type === style_hilight) {\r\n                opacity = 0.9\r\n            } else if (type === style_normal) {\r\n                opacity = 0.6\r\n            }\r\n            links.push(\r\n                {\r\n                    ...link,\r\n                    lineStyle: {\r\n                        opacity: opacity,\r\n                        color: colorAttr\r\n                    }\r\n                }\r\n            )\r\n        })\r\n        if (allNormalFlag) {\r\n            connectedNodes.clear()\r\n        }\r\n\r\n\r\n        styleManager(\"node_label\", Array.from(connectedNodes).map(theme_year => (\r\n            {\r\n                theme: theme_year.substring(0, theme_year.length - 5),\r\n                year: theme_year.substring(theme_year.length - 4)\r\n            }\r\n        )))\r\n        // console.log(\"styleRef\",JSON.stringify(styleRef.current,null,4))\r\n        year_filtered.current.nodes.map(node => {\r\n            const type = getNodeType(node[\"attributes\"])\r\n            nodes.push(\r\n                {\r\n                    ...node,\r\n                    itemStyle: {\r\n                        opacity: (type === style_normal || type === style_label) ? 1 : 0.1,\r\n                        color: ColorMap(node[\"attributes\"][\"theme\"])\r\n                    },\r\n                    label: {\r\n                        show: type === style_label\r\n                    }\r\n                }\r\n            )\r\n\r\n        })\r\n        // console.log(\"cal_view\", JSON.stringify(styleRef.current, null, 4))\r\n        view_data.current = {\r\n            nodes: nodes,\r\n            links: links,\r\n            entry: view_data.current.entry\r\n        }\r\n    }\r\n\r\n    const initViewData = () => {\r\n        switchToData_2()\r\n    }\r\n\r\n    //切换数据集\r\n    const switchToData_1 = () => {\r\n        setsmallViewData(data1.default.entry)\r\n\r\n        setyearValue([2013, 2018])\r\n        yearValueRef.current = [2013, 2018]\r\n        setsmallChartYear(2015)\r\n\r\n        rawData.current = data1.default\r\n        cal_year(yearValueRef.current[0], yearValueRef.current[1])\r\n        cal_view()\r\n        updateData()\r\n    }\r\n    const switchToData_2 = () => {\r\n        setsmallViewData(data2.default.entry)\r\n\r\n        setyearValue([2015, 2020])\r\n        yearValueRef.current = [2015, 2020]\r\n        setsmallChartYear(2016)\r\n\r\n\r\n        rawData.current = data2.default\r\n        cal_year(yearValueRef.current[0], yearValueRef.current[1])\r\n        cal_view()\r\n        updateData()\r\n    }\r\n    const switchToData_3 = () => {\r\n        setsmallViewData(data3.default.entry)\r\n\r\n        setyearValue([1990, 2000])\r\n        yearValueRef.current = [1990, 2000]\r\n        setsmallChartYear(1996)\r\n\r\n\r\n        rawData.current = data3.default\r\n        cal_year(yearValueRef.current[0], yearValueRef.current[1])\r\n        cal_view()\r\n        updateData()\r\n\r\n    }\r\n    const myChart = useRef(null)\r\n    const initChart = () => {\r\n        myChart.current = echarts.init(document.getElementById(UID.current), \"default\")\r\n        myChart.current.setOption({\r\n            title: {\r\n                text: 'Sankey view'\r\n            },\r\n            tooltip: {\r\n                trigger: 'item',\r\n                triggerOn: 'mousemove'\r\n            },\r\n            series: [\r\n                {\r\n                    layoutIterations: 32,\r\n                    label: {\r\n                        show: false,\r\n                    },\r\n                    type: 'sankey',\r\n                    data: [],\r\n                    links: [],\r\n                    emphasis: {\r\n                        focus: 'adjacency'\r\n                    },\r\n                    lineStyle: {\r\n                        color: 'gradient',\r\n                        curveness: 0.5\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n        myChart.current.off(\"mouseover\")\r\n        myChart.current.off(\"mouseout\")\r\n        myChart.current.off(\"click\")\r\n        myChart.current.on(\"mouseover\", args => {//悬浮事件\r\n            changeHl(args)\r\n        })\r\n        myChart.current.on(\"click\", args => {\r\n            if (args.dataType === \"node\") {\r\n                setsmallChartYear(Number(args.data.attributes.year))\r\n            }\r\n        })\r\n        myChart.current.on(\"mouseout\", args => {\r\n            styleManager(\"clear\")\r\n            cal_view()\r\n            updateData()\r\n        })\r\n    }\r\n    const changeHl = (args) => {//响应悬浮高亮\r\n        styleManager(\"empty\")\r\n        if (datasetRef.current === \"论文\") {\r\n            if (args.dataType === \"node\") {\r\n                //论文数据集  悬浮于节点之上\r\n                //显示 source === target === 节点theme 的边以及 name === theme 的节点\r\n                styleManager(\"link\", [{ target_theme: args.data.attributes.theme, source_theme: args.data.attributes.theme }])//\r\n            } else {\r\n                //悬浮于边 \r\n                //高亮引用了这篇论文的所有表示边   \r\n                //line = A -> B\r\n                //show = [ A -> B ，A -> C，A -> D]\r\n                styleManager(\"link\", [args.data.hover.link])\r\n            }\r\n        } else if (datasetRef.current === \"学者\") {\r\n            if (args.dataType === \"node\") {\r\n                //悬浮节点 高亮领域领域\r\n                styleManager(\"link\", [args.data.hover.link])\r\n            } else {\r\n                //悬浮边 高亮相同主题\r\n                styleManager(\"link\", [args.data.hover.link])\r\n            }\r\n        } else if (datasetRef.current === \"邮件\") {\r\n            if (args.dataType === \"node\") {\r\n                // console.log(\"args.data.attributes.theme\",args.data.attributes.theme)\r\n                styleManager(\"link\", [{ target_theme: args.data.attributes.theme }, { source_theme: args.data.attributes.theme }])//\r\n            } else {\r\n                styleManager(\"link\", [args.data.hover.link])\r\n            }\r\n        }\r\n        cal_view()\r\n        updateData()\r\n    }\r\n    const updateData = () => {\r\n        myChart.current.setOption({\r\n            series: [\r\n                {\r\n                    data: view_data.current.nodes,\r\n                    links: view_data.current.links,\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    useEffect(initChart, [])\r\n    useEffect(initViewData, [])\r\n    const state = useRef(\"\")\r\n    const hilightline = (args) => {\r\n        //辅助视图的接口\r\n        //这里需要判断用那个数据集\r\n        if (args === \"\") {\r\n            styleManager(\"clear\")\r\n        } else {\r\n            if (datasetRef.current === \"论文\") {\r\n                styleManager(\"empty\")\r\n                styleManager(\"link_hl\", [{ from: args }])\r\n            } else if ((datasetRef.current === \"学者\")) {\r\n                styleManager(\"empty\")\r\n                styleManager(\"link_hl\", [{ author_name: args }])\r\n            } else if ((datasetRef.current === \"邮件\")) {\r\n                styleManager(\"empty\")\r\n                styleManager(\"link_hl\", [{ person_name: args }])\r\n\r\n            }\r\n        }\r\n        cal_view()\r\n        updateData()\r\n    }\r\n\r\n    const [smallChartYear, setsmallChartYear] = useState(2016)\r\n\r\n    const [yearValue, setyearValue] = useState([2015, 2020])\r\n    const yearValueRef = useRef([2015, 2020])\r\n    const handleYearChange = (event, newValue) => {\r\n        if (newValue !== yearValueRef.current) {\r\n            setyearValue(newValue);\r\n            yearValueRef.current = newValue\r\n            cal_year(yearValueRef.current[0], yearValueRef.current[1])\r\n            cal_view()\r\n            updateData()\r\n        }\r\n    };\r\n    const [searchValue, setsearchValue] = useState(\"\")\r\n    const ref_searchValue = useRef(\"\")\r\n    const changeSearchValue = (event) => {\r\n        ref_searchValue.current = event.target.value\r\n        setsearchValue(event.target.value)\r\n        // console.log(ref_searchValue.current)\r\n    }\r\n\r\n\r\n    const [smallViewHlname, setsmallViewHlname] = useState(\"\")\r\n\r\n    const doSearch = () => {\r\n        if (ref_searchValue.current === \"\") {\r\n            styleManager(\"clear\")\r\n            setsmallViewHlname(\"\")\r\n            cal_view()\r\n            updateData()\r\n        } else {\r\n            try {\r\n                styleManager(\"empty\")\r\n                if (datasetRef.current === \"论文\") {\r\n                    setsmallViewHlname(ref_searchValue.current)\r\n                    styleManager(\"link_hl\", [{ from: ref_searchValue.current }])\r\n                } else if ((datasetRef.current === \"学者\")) {\r\n                    setsmallViewHlname(ref_searchValue.current)\r\n                    styleManager(\"link_hl\", [{ author_name: ref_searchValue.current }])\r\n                } else if ((datasetRef.current === \"邮件\")) {\r\n                    setsmallViewHlname(ref_searchValue.current)\r\n                    styleManager(\"link_hl\", [{ person_name: ref_searchValue.current }])\r\n                }\r\n                cal_view()\r\n                updateData()\r\n            } catch (err) {\r\n                alert(\"请输入正确的查询表达\")\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    const datasetRef = useRef(\"\")\r\n    const [dataSetSelectValue, setdataSetSelectValue] = useState(\"学者\")\r\n    const handelDataSelectChange = (event) => {\r\n        setdataSetSelectValue(event.target.value);\r\n        datasetRef.current = event.target.value\r\n        if (event.target.value === \"论文\") {\r\n            switchToData_1()\r\n        } else if (event.target.value === \"学者\") {\r\n            switchToData_2()\r\n        } else if (event.target.value === \"邮件\") {\r\n            switchToData_3()\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    const ref_checkStause = useRef({\r\n        fromOther: false,\r\n        toOther: false,\r\n        fromOtherLable: false,\r\n        toOtherLable: false\r\n    })\r\n    const [checkStause, changCheckStause] = useState({\r\n        fromOther: false,\r\n        toOther: false,\r\n        fromOtherLable: false,\r\n        toOtherLable: false\r\n    })\r\n    const handelCheckChnage = (args) => {\r\n        if (args === undefined) {\r\n            return\r\n        }\r\n\r\n        const tmp = { ...checkStause }\r\n        tmp[args] = !tmp[args]\r\n\r\n        if (args === \"toOther\") {\r\n            if (tmp[\"toOther\"] === true) {//同步开启关闭 \r\n                tmp[\"toOtherLable\"] = true\r\n            } else {\r\n                tmp[\"toOtherLable\"] = false\r\n            }\r\n        }\r\n        if (args === \"fromOther\") {\r\n            if (tmp[\"fromOther\"] === true) {//同步开启关闭 \r\n                tmp[\"fromOtherLable\"] = true\r\n            } else {\r\n                tmp[\"fromOtherLable\"] = false\r\n            }\r\n\r\n        }\r\n        changCheckStause(tmp)\r\n        ref_checkStause.current = tmp\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ display: \"inline\" }} >\r\n            <div style={{ display: \"inline\" }} >\r\n                <div style={{\r\n                    width: 1050,\r\n                    height: 450,\r\n                    float: \"left\",\r\n                    overflow: \"hidden\"\r\n                }}>\r\n                    <div id={UID.current} style={{\r\n                        width: 1100,\r\n                        height: 450,\r\n                    }} />\r\n\r\n                </div>\r\n            </div>\r\n            <div style={\r\n                {\r\n                    width: 550,\r\n                    height: 840,\r\n                    float: \"right\"\r\n                }\r\n            } elevation={3} >\r\n                <Grid\r\n                    container\r\n                    spacing={3}\r\n                >\r\n\r\n                    <Grid item xs={12} spacing={3}>\r\n                        <div style={{\r\n                            marginLeft: 50\r\n                        }}>\r\n                            <AccountCircleIcon\r\n                                color=\"secondary\"\r\n                            />\r\n                            <TextField\r\n                                style={{ marginTop: -20, marginLeft: 10 }}\r\n                                color=\"secondary\"\r\n                                label=\"query\"\r\n                                value={searchValue}\r\n                                onChange={changeSearchValue}\r\n                                onKeyDown={(e) => {\r\n                                    if (e.keyCode === 13) {\r\n                                        doSearch()\r\n                                    }\r\n                                }}\r\n                            />\r\n                            <Button\r\n                                style={{ marginLeft: 10, marginTop: -20, width: 80 }}\r\n                                variant=\"outlined\"\r\n                                color=\"primary\"\r\n                                onClick={doSearch}\r\n                            >\r\n                                search\r\n                            </Button>\r\n\r\n                            <Button\r\n                                style={{ marginLeft: 10, marginTop: -20, width: 80 }}\r\n                                variant=\"outlined\"\r\n                                color=\"secondary\"\r\n                                onClick={() => {\r\n                                    changeSearchValue({\r\n                                        target: {\r\n                                            value: \"\"\r\n                                        }\r\n                                    })\r\n                                    doSearch()\r\n                                }}\r\n                            >\r\n                                clear\r\n                            </Button>\r\n\r\n\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <div style={{ width: 450, marginLeft: 50, display: \"inline-flex\" }}>\r\n                            <Chip\r\n                                icon={<ArrowBackIcon />}\r\n                                style={{ width: 100 }}\r\n                                label={checkStause[\"fromOther\"] ? \"show\" : \"hide\"}\r\n                                color={checkStause[\"fromOther\"] ? \"primary\" : \"secondary\"}\r\n                                variant=\"outlined\"\r\n                            />\r\n                            <div style={{ marginLeft: 3 }} >\r\n                                <Switch\r\n                                    checked={checkStause[\"fromOther\"]}\r\n                                    onChange={() => { handelCheckChnage(\"fromOther\") }}\r\n                                    name=\"checkedA\"\r\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={<Switch\r\n                                        checked={checkStause[\"fromOtherLable\"]}\r\n                                        onChange={() => { handelCheckChnage(\"fromOtherLable\") }}\r\n                                        name=\"checkedA\"\r\n                                        inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                        label=\"lable display\"\r\n                                    />}\r\n                                    label=\"lable display\"\r\n                                />\r\n                            </div>\r\n\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <div style={{ width: 450, marginLeft: 50, display: \"inline-flex\" }}>\r\n                            <Chip\r\n                                icon={<ArrowForwardIcon />}\r\n                                style={{ width: 100 }}\r\n                                label={checkStause[\"toOther\"] ? \"show\" : \"hide\"}\r\n                                color={checkStause[\"toOther\"] ? \"primary\" : \"secondary\"}\r\n                                variant=\"outlined\"\r\n                            />\r\n                            <div style={{ marginLeft: 3 }} >\r\n                                <Switch\r\n                                    checked={checkStause[\"toOther\"]}\r\n                                    onChange={() => { handelCheckChnage(\"toOther\") }}\r\n                                    name=\"checkedA\"\r\n                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={<Switch\r\n                                        checked={checkStause[\"toOtherLable\"]}\r\n                                        onChange={() => { handelCheckChnage(\"toOtherLable\") }}\r\n                                        name=\"checkedA\"\r\n                                        inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                    />}\r\n                                    label=\"lable display\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} spacing={3}>\r\n                        <div style={{\r\n                            marginLeft: 50,\r\n                            marginTop: 0,\r\n                            border:\"1px solid rgba(245, 0, 87, 0.8)\",\r\n                            borderRadius:\"4px\",\r\n                            padding:\"5px\",\r\n                            width:315\r\n                        }}>\r\n                            <FormControl  style={{ width: 300 }}>\r\n                                <InputLabel id=\"catacontrol-label\" color=\"secondary\">dataset control</InputLabel>\r\n                                <Select\r\n                                    labelId=\"catacontrol-label\"\r\n                                    id=\"catacontrol-label-select-helper\"\r\n                                    color=\"secondary\"\r\n                                    value={dataSetSelectValue}\r\n                                    onChange={handelDataSelectChange}\r\n                                >\r\n                                    {\r\n                                        [[\"学者\",\"Scholar dataset\"], [\"论文\",\"Citation dataset\"], [\"邮件\",\"email dataset\"]].map(row => (\r\n                                            <MenuItem value={row[0]}>\r\n                                                {row[1]}\r\n                                            </MenuItem>))\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n\r\n                        </div>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} spacing={3}>\r\n                        <div style={{\r\n                            marginLeft: 50,\r\n                            marginTop: 15\r\n                        }}>\r\n                            <Chip\r\n                                // icon={<WifiTetheringIcon />}\r\n                                style={{ marginTop: -21 }}\r\n                                label={\"year start\" + yearValue[0]}\r\n                                color={\"primary\"}\r\n                                variant=\"outlined\"\r\n                            />\r\n                            <Chip\r\n                                // icon={<WifiTetheringIcon />}\r\n                                style={{ marginTop: -21, marginLeft: 20 }}\r\n                                label={\"year end\" + yearValue[1]}\r\n                                color={\"primary\"}\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} spacing={3}>\r\n                        <PrettoSlider style={{ width: 450, marginLeft: 50, marginTop: -3, color: \"#FF5722\" }} min={1990} max={2020} value={yearValue} onChange={handleYearChange} />\r\n                    </Grid>\r\n                    <Grid item xs={12} spacing={3}>\r\n                        <SankYearTable\r\n                            sankData={smallViewData}\r\n                            year={smallChartYear}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n            <div style={{\r\n                width: 1050,\r\n                height: 385,\r\n                float: \"left\",\r\n                overflow: \"hidden\",\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n            }}\r\n            >\r\n               <div >\r\n                    <FieldDistribution\r\n                    sankData={smallViewData}\r\n                    year={smallChartYear}\r\n                    hilightAuthor={hilightline}\r\n                    hlname={smallViewHlname}\r\n                    style={\r\n                        {\r\n                            width: 500,\r\n                            height: 420\r\n                        }\r\n                    } />\r\n               </div>\r\n                <ContourGrapg\r\n\r\n                    year={smallChartYear}\r\n                    dataSetSelectValue={dataSetSelectValue}\r\n                    style={\r\n                        {\r\n                            width: 500,\r\n                            height: 420\r\n                        }\r\n                    }\r\n                />\r\n\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n","import React, { useState, useEffect, useLayoutEffect, useRef } from 'react';\r\nimport \"./App.css\";\r\nimport logo from './logo.svg';\r\nimport WebGLForceDirectGraph from \"./WebGLForceDirectGraph\";\r\nimport ClusteringGraph from \"./ClusteringGraph\"\r\nimport { handEledgelist, handelClustering } from \"./graphEncoding\"\r\nimport QuoteForce from \"./QuoteForce\"\r\nimport CircularGraph from './CircularGraph';\r\nimport CooperationRelation from './CooperationRelation'\r\nimport OverviewGraph from './MainPageModes/Year'\r\nimport DynamicDiscovery from './DynamicDiscovery'\r\nimport PaperInfo from './FloatingWindowModes/PaperInfo'\r\nimport MainPageView from './MainPageView'\r\nimport FieldDistribution from \"./Sank2Modes/FieldDistribution\";\r\nimport FloatingWindow from \"./FloatingWindowModes/FloatingWindow\"\r\nimport Sank from \"./Sank\"\r\nimport DataPreview from \"./DataPreview\"\r\n\r\n\r\nimport clsx from 'clsx';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport BlurOnIcon from '@material-ui/icons/BlurOn';\r\nimport ClearAllIcon from '@material-ui/icons/ClearAll';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport PermDataSettingIcon from '@material-ui/icons/PermDataSetting';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\r\n\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport MainKeywordGraph from './KeywordsRecommenderModes/MainKeywordGraph';\r\nimport ContourGrapg from \"./Sank2Modes/ContourGrapg\"\r\nimport { saveAs } from 'file-saver';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Sankver2 from \"./Sank2Modes/Sankver2\"\r\n\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n    CircularGraphModeStyle: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        display: \"inline\"\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '30ch',\r\n            '&:focus': {\r\n                width: '40ch',\r\n            },\r\n        }\r\n    },\r\n    table: {\r\n        minWidth: \"100%\",\r\n    },\r\n}));\r\n\r\n\r\nconst BFSubGraph = (graph, center_index, deepth) => {\r\n    // console.log(\"传入 BFS\",graph)\r\n    const visited = {}//存放index\r\n    for (let i = 0; i < graph.nodes.length; i++) {\r\n        visited[i] = false\r\n    }\r\n    const queue = []//存的也是index\r\n    queue.push(center_index)\r\n    for (let loopCount = 0; loopCount < deepth; loopCount++) {\r\n        const thisLoopVisit = queue.slice()\r\n        queue.length = 0\r\n        for (let node_i of thisLoopVisit) {\r\n            if (visited[node_i] === false) {\r\n                visited[node_i] = true\r\n                graph.edges.forEach(([start, end]) => {\r\n                    if (start === node_i && visited[end] == false) {\r\n                        queue.push(end)\r\n                    }\r\n                    if (end === node_i && visited[start] == false) {\r\n                        queue.push(start)\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        // console.log(\"loop:\",loopCount,queue)\r\n    }\r\n    const nodes = []\r\n\r\n    const reSort = {}\r\n    for (let i = 0; i < graph.nodes.length; i++) {\r\n        if (visited[i]) {\r\n            reSort[i] = nodes.length\r\n            nodes.push(graph.nodes[i])\r\n        }\r\n    }\r\n    const edges = []//下标变化后 重排\r\n    graph.edges.forEach(([start, end]) => {\r\n        if (visited[start] && visited[end]) {\r\n            edges.push([reSort[start], reSort[end]])\r\n        }\r\n    })\r\n    return {\r\n        nodes: nodes,\r\n        edges: edges\r\n    }\r\n}\r\n\r\n\r\nconst keywordFilter = (object, arg) => {\r\n    return (object.Abstract.toLowerCase().indexOf(arg.toLowerCase()) != -1 || object.Title.toLowerCase().indexOf(arg.toLowerCase()) != -1) || (object.AuthorKeywords.toLowerCase().indexOf(arg.toLowerCase()) != -1)\r\n}\r\n\r\n\r\nconst AutherFilter = (object, arg) => {\r\n    let flag = false\r\n    object[\"AuthorNames-Deduped\"].forEach((name) => {\r\n        if (name.indexOf(arg) !== -1) {\r\n            flag = true\r\n        }\r\n    })\r\n    return flag\r\n}\r\n\r\nconst realtionFilter = (object, type, arg) => {//关系过滤器 过滤与所给参数有关的论文 \r\n    //参数指定为作者或者某一篇论文  先生成网络 再使用BFS过滤 \r\n    //最后返回仍然是论文列表\r\n    //当展示模块使用某个关系构建图时\r\n    //会得到一个连通图\r\n\r\n}\r\n\r\nconst andFilter = () => {\r\n\r\n}\r\n\r\nconst orFilter = () => {\r\n\r\n}\r\n\r\nconst paperFilter = (paperList, arg) => {//子图筛选 根据关键词 筛选满足条件的paper\r\n    var filtered = []\r\n    paperList.forEach(paper => {\r\n        if (keywordFilter(paper, arg)) {\r\n            filtered.push(paper)\r\n        }\r\n    }\r\n    )\r\n    return filtered\r\n}\r\n\r\nfunction App(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(true);\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n    const [forceGraphData, setForceGraphData] = useState(null)\r\n    const [clusteringGraphData, setClusteringGraphData] = useState(null)\r\n    const [quoteGraphData, setQuoteGraphData] = useState(null)\r\n\r\n    //但是  有些是特殊的 拥有单独状态\r\n\r\n    const [paperData, setPaperData] = useState([])//作为统一的数据源 数据的处理在图内部进行\r\n    const [sankData, setSankData] = useState([])\r\n    //点击之类的操作 也仅仅是传递给父组件 然后由父组件修改数据源 子组件再统一重新渲染\r\n\r\n\r\n    const nodes = useRef(null)//节点 来自于边数组的节点数组 与传入聚类的向量数组有着相同的顺序 可用于直接索引\r\n    // [node1,node2,node3] 值为边文件的值\r\n    const edges = useRef(null)//边 [[start,end],[]] start,end为节点在nodes中的下标\r\n    const vecs = useRef(null)//向量 struce2vec得到的向量 Map key为node值 传入聚类的顺序应当有nodes决定\r\n\r\n    const datamap = useRef(null)\r\n\r\n    const edgeListUrl = \"./api/academicNetwork.edgelist\"//边列表\r\n    const struct2vecResultUrl = \"./api/academicNetwork.emb\"//节点向量化\r\n    const dataMap = \"./api/datamap.json\"//节点下标 到 数据的映射\r\n\r\n\r\n    const paperDataSet = \"./api/IEEE VIS papers 1990-2018.json\" //论文数据集 之后将数据过滤安排在后端 \r\n    const sankDataSet = \"./api/sankRawData.json\"\r\n\r\n    function getEdgeList() {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(edgeListUrl).then(resp =>\r\n                resp.text().then(data => resolve(data))\r\n            )\r\n        })\r\n    }\r\n    function getVec() {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(struct2vecResultUrl).then(resp =>\r\n                resp.text().then(data => resolve(data))\r\n            )\r\n        })\r\n    }\r\n    function getMap() {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(dataMap).then(resp =>\r\n                resp.json().then(data => resolve(data))\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n    function getPaperDataSet() {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(paperDataSet).then(resp =>\r\n                resp.json().then(data => resolve(data))\r\n            )\r\n        })\r\n    }\r\n\r\n    function getSankDataSet() {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(sankDataSet).then(resp =>\r\n                resp.json().then(data => resolve(data))\r\n            )\r\n        })\r\n    }\r\n\r\n    const queryDataMap = (index) => {//查询数据映射 传入index 返回用于显示在图标上的文本\r\n        return datamap.current[Number(index)] || \"null\"\r\n    }\r\n\r\n\r\n\r\n    const raw_paperdata = useRef(\"\")\r\n\r\n    useEffect(() => {\r\n        getPaperDataSet().then(data => {\r\n            raw_paperdata.current = data\r\n            setPaperData(data)\r\n            // doSearch(\"2D\")\r\n        })\r\n        getSankDataSet().then(data => {\r\n            setSankData(data)\r\n        })\r\n    }, [])\r\n\r\n\r\n\r\n    // const handelClusteringClick = (params) => {//点击获取子图\r\n    //     console.log(\"node:\", nodes.current[params.dataIndex])//params.dataIndex 为点击的节点 在 节点数组的下标\r\n    //     console.log(\"vec:\", vecs.current.get(nodes.current[params.dataIndex]))\r\n    //     const subGrapg = BFSubGraph({\r\n    //         nodes: nodes.current,\r\n    //         edges: edges.current\r\n    //     }, params.dataIndex, 5)//获取到的子图 index仍然对应原始数据映射\r\n    //     console.log(\"sunGraph\", subGrapg)\r\n\r\n    //     const edge_tmp = []\r\n    //     const forceTmp = []\r\n\r\n    //     for (let i = 0; i < subGrapg.edges.length; i++) {\r\n    //         edge_tmp.push(subGrapg.edges[i][0])\r\n    //         edge_tmp.push(subGrapg.edges[i][1])\r\n    //         forceTmp.push(1)\r\n    //     }\r\n\r\n    //     setForceGraphData({\r\n    //         nodes: subGrapg.nodes,\r\n    //         edges: edge_tmp,\r\n    //         dependentsCount: forceTmp\r\n    //     })\r\n    // }\r\n\r\n\r\n\r\n    const MainPageMode = () => {\r\n        return <MainPageView\r\n            paperData={paperData}\r\n        />\r\n    }\r\n\r\n    const BigDataWarming = (mode) => {\r\n        const [show, setShow] = useState(false)\r\n        const [open, setOpen] = React.useState(true);\r\n        const cancelButton = () => {\r\n            setOpen(false);\r\n            window.location.href = \"/#/\"\r\n        };\r\n\r\n        const continueButton = () => {\r\n            setShow(true)\r\n            setOpen(false);\r\n        };\r\n\r\n\r\n        const warming = (\r\n            <Dialog\r\n                open={open}\r\n                onClose={cancelButton}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"警告，数据量过大\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        当前使用数据集大小为{paperData.length}，继续渲染可能会导致渲染缓慢，是否继续？\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={continueButton} color=\"primary\">\r\n                        继续\r\n                    </Button>\r\n                    <Button onClick={cancelButton} color=\"secondary\">\r\n                        取消\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        )\r\n\r\n\r\n\r\n\r\n        const limit = 1000\r\n        if (paperData.length > limit) {\r\n            return (\r\n                show ?\r\n                    mode\r\n                    :\r\n                    warming\r\n            )\r\n        } else {\r\n            return mode\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    const CircularGraphMode = () => {\r\n        return BigDataWarming(\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"flex-start\"\r\n                alignItems=\"flex-start\"\r\n                spacing={3}\r\n            >\r\n                <Grid item xs={12} >\r\n                    <CircularGraph\r\n                        paperData={paperData}\r\n                        style={\r\n                            {\r\n                                width: \"100%\",\r\n                                height: 850\r\n                            }\r\n                        }\r\n                    />\r\n\r\n                </Grid>\r\n                <FloatingWindow paperData={paperData} />\r\n            </Grid>\r\n        )\r\n    };\r\n    const CooperationRelationMode = () => {\r\n        return BigDataWarming(\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"flex-start\"\r\n                alignItems=\"flex-start\"\r\n                spacing={3}\r\n            >\r\n                <Grid item xs={12} >\r\n                    <CooperationRelation\r\n                        paperData={paperData}\r\n                        style={\r\n                            {\r\n                                width: 1080,\r\n                                height: 850\r\n                            }\r\n                        }\r\n                    />\r\n                </Grid>\r\n                <FloatingWindow paperData={paperData} />\r\n            </Grid>\r\n        )\r\n    };\r\n\r\n\r\n\r\n    const SankMode = () => {\r\n        return (\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"flex-start\"\r\n                alignItems=\"flex-start\"\r\n                spacing={3}\r\n            >\r\n                <Grid item xs={12} >\r\n                    <Sank\r\n                        sankdata={sankData}\r\n                        style={\r\n                            {\r\n                                width: \"100%\",\r\n                                height: 850\r\n                            }\r\n                        }\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    };\r\n\r\n\r\n\r\n    const Sankver2MOD = () => {\r\n        return (\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"flex-start\"\r\n                alignItems=\"flex-start\"\r\n                spacing={3}\r\n            >\r\n                <Grid item xs={12} >\r\n                    <Sankver2\r\n                        sankdata={sankData}\r\n                        style={\r\n                            {\r\n                                width: \"100%\",\r\n                                height: 850\r\n                            }\r\n                        }\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    const OverviewGraphMode = () => {\r\n        return BigDataWarming(\r\n            <DataPreview paperData={paperData} />\r\n        )\r\n    };\r\n\r\n    const DynamicDiscoveryMode = (props) => {\r\n\r\n        // console.log(props.match)\r\n\r\n        return (\r\n            <DynamicDiscovery\r\n                paperData={paperData}\r\n                style={\r\n                    {\r\n                        width: \"100%\",\r\n                        height: 850\r\n                    }\r\n                }\r\n                type={props.match.params.type}\r\n                first={props.match.params.args}\r\n            />\r\n        )\r\n    };\r\n\r\n\r\n    const FieldDistributionMode = () => {\r\n        return (\r\n            <FieldDistribution\r\n                sankData={sankData}\r\n                year={2015}\r\n                style={\r\n                    {\r\n                        width: 550,\r\n                        height: 550\r\n                    }\r\n                }\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n\r\n    const KeywordsRecommenderPageMode = () => {\r\n\r\n        return (\r\n            <MainKeywordGraph\r\n                paperData={paperData}\r\n                doSearch={doSearch}\r\n                style={\r\n                    {\r\n                        width: \"100%\",\r\n                        height: 1200\r\n                    }\r\n                }\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n\r\n    const ContourGrapgPageMode = () => {\r\n        return (\r\n            <ContourGrapg\r\n                paperData={paperData}\r\n                style={\r\n                    {\r\n                        width: \"100%\",\r\n                        height: 1200\r\n                    }\r\n                }\r\n            />\r\n        )\r\n    }\r\n\r\n    const searchValue = useRef(\"\")\r\n    const [searchvalue_stause, setsearchvalue_stause] = useState(\"\")\r\n    const setSearchValue = (event) => {\r\n        searchValue.current = event.target.value\r\n        // setsearchvalue_stause(event.target.value)\r\n    }\r\n\r\n\r\n\r\n    const doSearch = (args) => {\r\n        console.log(\"dosearch\", args)\r\n        searchValue.current = args\r\n        let filted = paperFilter(raw_paperdata.current, searchValue.current);\r\n        setPaperData(filted)\r\n        //  window.location.href = \"/#/\"\r\n    }\r\n\r\n\r\n    const exportData = () => {\r\n        var blob = new Blob([JSON.stringify(paperData, null, 4)], { type: \"text/plain;charset=utf-8\" });\r\n        saveAs(blob, \"export result \" + searchValue.current + \".json\")\r\n    }\r\n    const customData = () => {\r\n        document.getElementById(\"btn_file_hidden\").click();\r\n    }\r\n    const fileUploaded = () => {\r\n        const file = document.getElementById(\"btn_file_hidden\").files[0]\r\n\r\n        console.log(file)\r\n\r\n        const reader = new FileReader()\r\n        reader.readAsText(file, \"UTF-8\")\r\n        reader.onload = function (evt) { //读取完文件之后会回来这里\r\n            const fileString = evt.target.result; // 读取文件内容\r\n            const uploadpaper = JSON.parse(fileString)\r\n            raw_paperdata.current = uploadpaper\r\n            doSearch(\"\")\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n                <Toolbar className={classes.toolbar}>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n\r\n\r\n                    <img\r\n                        style={{\r\n                            width: 30,\r\n                            height: 30,\r\n                            marginRight: 20\r\n                        }}\r\n                        src=\"./acavis.png\"\r\n                        title=\"Contemplative Reptile\"\r\n                    />\r\n                    <Typography component=\"h1\" variant=\"h4\" color=\"inherit\" noWrap className={classes.title}>\r\n                        AcaVis\r\n                    </Typography>\r\n                    <div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                            <SearchIcon />\r\n                        </div>\r\n                        <InputBase\r\n                            placeholder=\"search…\"\r\n                            classes={{\r\n                                root: classes.inputRoot,\r\n                                input: classes.inputInput,\r\n                            }}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                            onChange={setSearchValue}\r\n                            // value={searchvalue_stause}\r\n                            onKeyDown={(e) => {\r\n                                if (e.keyCode === 13) {\r\n                                    doSearch(searchValue.current)\r\n                                }\r\n                            }}\r\n\r\n                        />\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n\r\n\r\n\r\n\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n                }}\r\n                open={open}\r\n            >\r\n                <div className={classes.toolbarIcon}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        <ChevronLeftIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    <ListItem button onClick={\r\n                        () => { window.location.href = \"/#/\" }\r\n                    }>\r\n                        <ListItemIcon>\r\n                            <DashboardIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"首页\" />\r\n                    </ListItem>\r\n                    <ListItem button onClick={\r\n                        () => { window.location.href = \"/#/KeywordsRecommenderPageMode\" }\r\n                    }>\r\n                        <ListItemIcon>\r\n                            <BlurOnIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"关键词分布\" />\r\n                    </ListItem>\r\n                    <ListItem button onClick={\r\n                        () => { window.location.href = \"/#/CooperationRelationMode\" }\r\n                    } >\r\n                        <ListItemIcon>\r\n                            <DonutLargeIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"合作关系\" />\r\n                    </ListItem>\r\n                    <ListItem button onClick={\r\n                        () => { window.location.href = \"/#/CircularGraphMode\" }\r\n                    }>\r\n                        <ListItemIcon>\r\n                            <PeopleIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"论文互引\" />\r\n                    </ListItem>\r\n\r\n                    <ListItem button onClick={\r\n                        () => { window.location.href = \"/#/SankMode\" }\r\n                    }>\r\n                        <ListItemIcon>\r\n                            <AccountTreeIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"主题演化\" />\r\n                    </ListItem>\r\n\r\n\r\n                    <ListItem button onClick={\r\n                        () => { window.location.href = \"/#/OverviewGraphMode\" }\r\n                    }>\r\n                        <ListItemIcon>\r\n                            <LayersIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"数据表格\" />\r\n                    </ListItem>\r\n\r\n                </List>\r\n                <Divider />\r\n                <List>\r\n                    <div>\r\n                        <ListSubheader inset>Saved reports</ListSubheader>\r\n                        <ListItem button onClick={exportData}>\r\n                            <ListItemIcon>\r\n                                <PermDataSettingIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"导出数据\" />\r\n                        </ListItem>\r\n                        <ListItem button onClick={customData}>\r\n                            <ListItemIcon>\r\n                                <StorageIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"自定义数据\" />\r\n                        </ListItem>\r\n                        {/* <ListItem button>\r\n                            <ListItemIcon>\r\n                                <SettingsIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"相关设置\" />\r\n                        </ListItem> */}\r\n                        <ListItem button onClick={() => {\r\n                            doSearch(\"\")\r\n                        }}>\r\n                            <ListItemIcon>\r\n                                <ClearAllIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"清空筛选器\" />\r\n                        </ListItem>\r\n                    </div>\r\n                </List>\r\n            </Drawer>\r\n\r\n\r\n            <main className={classes.content}  key=\"router\"  >\r\n                <div className={classes.appBarSpacer} />\r\n                <Container maxWidth=\"100%\" className={classes.container}>\r\n                    <Router>\r\n                        <Route path=\"/\" component={MainPageMode} exact />\r\n                        <Route path=\"/CircularGraphMode\" component={CircularGraphMode} />\r\n                        <Route path=\"/CooperationRelationMode\" component={CooperationRelationMode} />\r\n                        <Route path=\"/OverviewGraphMode\" component={OverviewGraphMode} />\r\n                        <Route path=\"/SankMode\" component={SankMode} />\r\n                        <Route path=\"/DynamicDiscoveryMode/:type/:args\" component={DynamicDiscoveryMode} />\r\n                        <Route path=\"/FieldDistributionMode\" component={FieldDistributionMode} />\r\n                        <Route path=\"/KeywordsRecommenderPageMode\" component={KeywordsRecommenderPageMode} />\r\n                        <Route path=\"/ContourGrapgPageMode\" component={ContourGrapgPageMode} />\r\n                        <Route path=\"/Sankver2MOD\" component={Sankver2MOD} />\r\n                    </Router>\r\n                </Container>\r\n            </main>\r\n            <input\r\n                type=\"file\"\r\n                id=\"btn_file_hidden\"\r\n                style={{ display: \"none\" }}\r\n                onChange={fileUploaded}\r\n                accept=\".json\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport * as echarts from 'echarts';\r\n\r\nimport {echartTheme} from \"./echartTheme\"\r\n\r\necharts.registerTheme(\"default\",echartTheme)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}